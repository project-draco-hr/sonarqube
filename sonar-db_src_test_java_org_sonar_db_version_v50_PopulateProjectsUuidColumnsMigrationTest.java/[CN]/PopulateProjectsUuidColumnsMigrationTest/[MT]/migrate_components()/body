{
  db.prepareDbUnit(getClass(),"migrate_components.xml");
  migration.execute();
  db.getSession().commit();
  Component root=mapper.selectComponentByKey("org.struts:struts");
  assertThat(root.getUuid()).isNotNull();
  assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());
  assertThat(root.getModuleUuid()).isNull();
  assertThat(root.getModuleUuidPath()).isEmpty();
  Component module=mapper.selectComponentByKey("org.struts:struts-core");
  assertThat(module.getUuid()).isNotNull();
  assertThat(module.getProjectUuid()).isEqualTo(root.getUuid());
  assertThat(module.getModuleUuid()).isEqualTo(root.getUuid());
  assertThat(module.getModuleUuidPath()).isEqualTo(root.getUuid());
  Component subModule=mapper.selectComponentByKey("org.struts:struts-db");
  assertThat(subModule.getUuid()).isNotNull();
  assertThat(subModule.getProjectUuid()).isEqualTo(root.getUuid());
  assertThat(subModule.getModuleUuid()).isEqualTo(module.getUuid());
  assertThat(subModule.getModuleUuidPath()).isEqualTo(root.getUuid() + "." + module.getUuid());
  Component directory=mapper.selectComponentByKey("org.struts:struts-core:src/org/struts");
  assertThat(directory.getUuid()).isNotNull();
  assertThat(directory.getProjectUuid()).isEqualTo(root.getUuid());
  assertThat(directory.getModuleUuid()).isEqualTo(subModule.getUuid());
  assertThat(directory.getModuleUuidPath()).isEqualTo(root.getUuid() + "." + module.getUuid()+ "."+ subModule.getUuid());
  Component file=mapper.selectComponentByKey("org.struts:struts-core:src/org/struts/RequestContext.java");
  assertThat(file.getUuid()).isNotNull();
  assertThat(file.getProjectUuid()).isEqualTo(root.getUuid());
  assertThat(file.getModuleUuid()).isEqualTo(subModule.getUuid());
  assertThat(file.getModuleUuidPath()).isEqualTo(root.getUuid() + "." + module.getUuid()+ "."+ subModule.getUuid());
  assertThat(ImmutableSet.of(root.getUuid(),module.getUuid(),subModule.getUuid(),directory.getUuid(),file.getUuid())).hasSize(5);
}
