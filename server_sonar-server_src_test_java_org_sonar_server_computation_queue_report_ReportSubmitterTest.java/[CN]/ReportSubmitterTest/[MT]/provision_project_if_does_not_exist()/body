{
  userSession.setGlobalPermissions(GlobalPermissions.SCAN_EXECUTION,GlobalPermissions.PROVISIONING);
  when(queue.prepareSubmit()).thenReturn(new CeTaskSubmit.Builder(TASK_UUID));
  when(componentService.getNullableByKey(PROJECT_KEY)).thenReturn(null);
  when(componentService.create(any(NewComponent.class))).thenReturn(new ComponentDto().setUuid(PROJECT_UUID).setKey(PROJECT_KEY));
  underTest.submit(PROJECT_KEY,null,PROJECT_NAME,IOUtils.toInputStream("{binary}"));
  verify(permissionService).applyDefaultPermissionTemplate(PROJECT_KEY);
  verify(queue).submit(argThat(new TypeSafeMatcher<CeTaskSubmit>(){
    @Override protected boolean matchesSafely(    CeTaskSubmit submit){
      return submit.getType().equals(CeTaskTypes.REPORT) && submit.getComponentUuid().equals(PROJECT_UUID) && submit.getUuid().equals(TASK_UUID);
    }
    @Override public void describeTo(    Description description){
    }
  }
));
}
