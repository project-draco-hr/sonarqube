{
  Profiler profiler=Profiler.create(LOG).startInfo(String.format("#%s - %s - processing analysis report",report.getId(),report.getProjectKey()));
  ComponentDto project=loadProject(report);
  try {
    ComputationContext context=new ComputationContext(report,project);
    for (    ComputationStep step : steps.orderedSteps()) {
      if (ArrayUtils.contains(step.supportedProjectQualifiers(),context.getProject().qualifier())) {
        Profiler stepProfiler=Profiler.create(LOG).startInfo(step.getDescription());
        step.execute(context);
        stepProfiler.stopInfo();
      }
    }
    report.succeed();
  }
 catch (  Exception e) {
    report.fail();
    throw Throwables.propagate(e);
  }
 finally {
    logActivity(report,project);
    profiler.stopInfo();
  }
}
