{
  Vertex v=this.graph.addVertex(1);
  v.setProperty("keyString","string");
  v.setProperty("keyLong",1L);
  v.setProperty("keyInt",2);
  v.setProperty("keyFloat",3.3f);
  v.setProperty("keyDouble",4.4);
  v.setProperty("keyBoolean",true);
  JSONObject json=GraphsonUtil.jsonFromElement(v,null,GraphsonMode.EXTENDED);
  assertThat(json).isNotNull();
  assertThat(json.get(GraphSONTokens._ID)).isEqualTo("1");
  assertThat(json.containsKey("keyString")).isTrue();
  JSONObject valueAsJson=(JSONObject)json.get("keyString");
  assertThat(valueAsJson.containsKey(GraphSONTokens.TYPE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.TYPE)).isEqualTo(GraphSONTokens.TYPE_STRING);
  assertThat(valueAsJson.containsKey(GraphSONTokens.VALUE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.VALUE)).isEqualTo("string");
  valueAsJson=(JSONObject)json.get("keyLong");
  assertThat(valueAsJson.containsKey(GraphSONTokens.TYPE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.TYPE)).isEqualTo(GraphSONTokens.TYPE_LONG);
  assertThat(valueAsJson.containsKey(GraphSONTokens.VALUE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.VALUE)).isEqualTo(1L);
  valueAsJson=(JSONObject)json.get("keyInt");
  assertThat(valueAsJson.containsKey(GraphSONTokens.TYPE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.TYPE)).isEqualTo(GraphSONTokens.TYPE_INTEGER);
  assertThat(valueAsJson.containsKey(GraphSONTokens.VALUE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.VALUE)).isEqualTo(2);
  valueAsJson=(JSONObject)json.get("keyFloat");
  assertThat(valueAsJson.containsKey(GraphSONTokens.TYPE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.TYPE)).isEqualTo(GraphSONTokens.TYPE_FLOAT);
  assertThat(valueAsJson.containsKey(GraphSONTokens.VALUE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.VALUE)).isEqualTo(3.3f);
  valueAsJson=(JSONObject)json.get("keyDouble");
  assertThat(valueAsJson.containsKey(GraphSONTokens.TYPE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.TYPE)).isEqualTo(GraphSONTokens.TYPE_DOUBLE);
  assertThat(valueAsJson.containsKey(GraphSONTokens.VALUE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.VALUE)).isEqualTo(4.4);
  valueAsJson=(JSONObject)json.get("keyBoolean");
  assertThat(valueAsJson.containsKey(GraphSONTokens.TYPE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.TYPE)).isEqualTo(GraphSONTokens.TYPE_BOOLEAN);
  assertThat(valueAsJson.containsKey(GraphSONTokens.VALUE)).isTrue();
  assertThat(valueAsJson.get(GraphSONTokens.VALUE)).isEqualTo(true);
}
