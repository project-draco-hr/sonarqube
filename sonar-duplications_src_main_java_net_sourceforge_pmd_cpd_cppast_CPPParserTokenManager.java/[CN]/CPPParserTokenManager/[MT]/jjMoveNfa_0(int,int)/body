{
  int startsAt=0;
  jjnewStateCnt=78;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 28:
          if ((0x3ff000000000000L & l) != 0L)           jjCheckNAddStates(0,5);
 else           if (curChar == 36) {
            if (kind > 135)             kind=135;
            jjCheckNAdd(29);
          }
 else           if (curChar == 34)           jjCheckNAddStates(6,8);
 else           if (curChar == 39)           jjCheckNAddTwoStates(7,9);
 else           if (curChar == 46)           jjCheckNAdd(1);
        if ((0x3fe000000000000L & l) != 0L) {
          if (kind > 122)           kind=122;
          jjCheckNAddStates(9,16);
        }
 else         if (curChar == 48)         jjAddStates(17,20);
      if (curChar == 48) {
        if (kind > 118)         kind=118;
        jjCheckNAddStates(21,28);
      }
    break;
case 0:
  if (curChar == 46)   jjCheckNAdd(1);
break;
case 1:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 130) kind=130;
jjCheckNAddStates(29,31);
break;
case 3:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(4);
break;
case 4:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 130) kind=130;
jjCheckNAddTwoStates(4,5);
break;
case 6:
if (curChar == 39) jjCheckNAddTwoStates(7,9);
break;
case 7:
if ((0xffffff7fffffdbffL & l) != 0L) jjCheckNAddTwoStates(7,8);
break;
case 8:
if (curChar == 39 && kind > 132) kind=132;
break;
case 10:
if ((0x8000008400000000L & l) != 0L) jjCheckNAdd(8);
break;
case 11:
if (curChar == 48) jjCheckNAddTwoStates(12,8);
break;
case 12:
if ((0xff000000000000L & l) != 0L) jjCheckNAddTwoStates(12,8);
break;
case 13:
if ((0x3fe000000000000L & l) != 0L) jjCheckNAddTwoStates(14,8);
break;
case 14:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(14,8);
break;
case 16:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(16,8);
break;
case 17:
if (curChar == 34) jjCheckNAddStates(6,8);
break;
case 18:
if ((0xfffffffbffffdbffL & l) != 0L) jjCheckNAddStates(6,8);
break;
case 20:
if ((0x8000008400000400L & l) != 0L) jjCheckNAddStates(6,8);
break;
case 21:
if (curChar == 34 && kind > 133) kind=133;
break;
case 22:
if (curChar == 48) jjCheckNAddStates(32,35);
break;
case 23:
if ((0xff000000000000L & l) != 0L) jjCheckNAddStates(32,35);
break;
case 24:
if ((0x3fe000000000000L & l) != 0L) jjCheckNAddStates(36,39);
break;
case 25:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(36,39);
break;
case 27:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(40,43);
break;
case 29:
if ((0x3ff001000000000L & l) == 0L) break;
if (kind > 135) kind=135;
jjCheckNAdd(29);
break;
case 30:
if (curChar != 48) break;
if (kind > 118) kind=118;
jjCheckNAddStates(21,28);
break;
case 31:
if ((0xff000000000000L & l) == 0L) break;
if (kind > 118) kind=118;
jjCheckNAdd(31);
break;
case 32:
if ((0xff000000000000L & l) != 0L) jjCheckNAddTwoStates(32,33);
break;
case 34:
if ((0xff000000000000L & l) != 0L) jjCheckNAddTwoStates(34,35);
break;
case 36:
if ((0xff000000000000L & l) != 0L) jjCheckNAddStates(44,46);
break;
case 41:
if ((0x3fe000000000000L & l) == 0L) break;
if (kind > 122) kind=122;
jjCheckNAddStates(9,16);
break;
case 42:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 122) kind=122;
jjCheckNAdd(42);
break;
case 43:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(43,44);
break;
case 45:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(45,46);
break;
case 47:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(47,49);
break;
case 52:
if (curChar == 48) jjAddStates(17,20);
break;
case 54:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 126) kind=126;
jjstateSet[jjnewStateCnt++]=54;
break;
case 56:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 127) kind=127;
jjAddStates(50,51);
break;
case 59:
if ((0x3ff000000000000L & l) != 0L) jjAddStates(52,53);
break;
case 62:
if ((0x3ff000000000000L & l) != 0L) jjAddStates(54,56);
break;
case 67:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,5);
break;
case 68:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(68,69);
break;
case 69:
if (curChar != 46) break;
if (kind > 130) kind=130;
jjCheckNAddStates(57,59);
break;
case 70:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 130) kind=130;
jjCheckNAddStates(57,59);
break;
case 71:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(71,0);
break;
case 72:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(72,73);
break;
case 74:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(75);
break;
case 75:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 131) kind=131;
jjCheckNAddTwoStates(75,76);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 28:
if ((0x7fffffe87fffffeL & l) != 0L) {
if (kind > 135) kind=135;
jjCheckNAdd(29);
}
if (curChar == 76) jjAddStates(60,61);
break;
case 2:
if ((0x2000000020L & l) != 0L) jjAddStates(62,63);
break;
case 5:
if ((0x104000001040L & l) != 0L && kind > 130) kind=130;
break;
case 7:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);
break;
case 9:
if (curChar == 92) jjAddStates(64,67);
break;
case 10:
if ((0x54404610000000L & l) != 0L) jjCheckNAdd(8);
break;
case 15:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(16);
break;
case 16:
if ((0x7e0000007eL & l) != 0L) jjCheckNAddTwoStates(16,8);
break;
case 18:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(6,8);
break;
case 19:
if (curChar == 92) jjAddStates(68,71);
break;
case 20:
if ((0x54404610000000L & l) != 0L) jjCheckNAddStates(6,8);
break;
case 26:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(27);
break;
case 27:
if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(40,43);
break;
case 29:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 135) kind=135;
jjCheckNAdd(29);
break;
case 33:
if ((0x100000001000L & l) != 0L && kind > 119) kind=119;
break;
case 35:
if ((0x20000000200000L & l) != 0L && kind > 120) kind=120;
break;
case 37:
if ((0x100000001000L & l) != 0L && kind > 121) kind=121;
break;
case 38:
if ((0x20000000200000L & l) != 0L) jjstateSet[jjnewStateCnt++]=37;
break;
case 39:
if ((0x20000000200000L & l) != 0L && kind > 121) kind=121;
break;
case 40:
if ((0x100000001000L & l) != 0L) jjstateSet[jjnewStateCnt++]=39;
break;
case 44:
if ((0x20100000201000L & l) != 0L && kind > 123) kind=123;
break;
case 46:
if ((0x20000000200000L & l) != 0L && kind > 124) kind=124;
break;
case 48:
if ((0x100000001000L & l) != 0L && kind > 125) kind=125;
break;
case 49:
if ((0x20000000200000L & l) != 0L) jjstateSet[jjnewStateCnt++]=48;
break;
case 50:
if ((0x20000000200000L & l) != 0L && kind > 125) kind=125;
break;
case 51:
if ((0x100000001000L & l) != 0L) jjstateSet[jjnewStateCnt++]=50;
break;
case 53:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(54);
break;
case 54:
if ((0x7e0000007eL & l) == 0L) break;
if (kind > 126) kind=126;
jjCheckNAdd(54);
break;
case 55:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(56);
break;
case 56:
if ((0x7e0000007eL & l) == 0L) break;
if (kind > 127) kind=127;
jjCheckNAddTwoStates(56,57);
break;
case 57:
if ((0x20100000201000L & l) != 0L && kind > 127) kind=127;
break;
case 58:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(59);
break;
case 59:
if ((0x7e0000007eL & l) != 0L) jjCheckNAddTwoStates(59,60);
break;
case 60:
if ((0x20000000200000L & l) != 0L && kind > 128) kind=128;
break;
case 61:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(62);
break;
case 62:
if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(54,56);
break;
case 63:
if ((0x100000001000L & l) != 0L && kind > 129) kind=129;
break;
case 64:
if ((0x20000000200000L & l) != 0L) jjstateSet[jjnewStateCnt++]=63;
break;
case 65:
if ((0x20000000200000L & l) != 0L && kind > 129) kind=129;
break;
case 66:
if ((0x100000001000L & l) != 0L) jjstateSet[jjnewStateCnt++]=65;
break;
case 73:
if ((0x2000000020L & l) != 0L) jjAddStates(72,73);
break;
case 76:
if ((0x104000001040L & l) != 0L && kind > 131) kind=131;
break;
case 77:
if (curChar == 76) jjAddStates(60,61);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 7:
if ((jjbitVec0[i2] & l2) != 0L) jjAddStates(74,75);
break;
case 18:
if ((jjbitVec0[i2] & l2) != 0L) jjAddStates(6,8);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=78 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
