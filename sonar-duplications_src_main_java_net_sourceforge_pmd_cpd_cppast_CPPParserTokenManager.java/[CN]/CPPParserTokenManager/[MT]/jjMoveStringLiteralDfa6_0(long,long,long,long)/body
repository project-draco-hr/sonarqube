{
  if (((active1&=old1) | (active2&=old2)) == 0L)   return jjStartNfa_0(4,0L,old1,old2);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(5,0L,active1,active2);
    return 6;
  }
switch (curChar) {
case 97:
    return jjMoveStringLiteralDfa7_0(active1,0x40000000L,active2,0L);
case 101:
  if ((active1 & 0x8000000L) != 0L)   return jjStartNfaWithStates_0(6,91,29);
return jjMoveStringLiteralDfa7_0(active1,0x200080000000L,active2,0L);
case 102:
if ((active1 & 0x80000000000L) != 0L) return jjStartNfaWithStates_0(6,107,29);
break;
case 108:
if ((active1 & 0x400000000000L) != 0L) return jjStartNfaWithStates_0(6,110,29);
return jjMoveStringLiteralDfa7_0(active1,0x1000000000000L,active2,0L);
case 111:
return jjMoveStringLiteralDfa7_0(active1,0x4000000000000L,active2,0L);
case 116:
if ((active1 & 0x800L) != 0L) return jjStartNfaWithStates_0(6,75,29);
return jjMoveStringLiteralDfa7_0(active1,0x10010000000L,active2,0L);
case 117:
return jjMoveStringLiteralDfa7_0(active1,0x400L,active2,0L);
case 121:
if ((active2 & 0x40L) != 0L) return jjStartNfaWithStates_0(6,134,29);
break;
default :
break;
}
return jjStartNfa_0(5,0L,active1,active2);
}
