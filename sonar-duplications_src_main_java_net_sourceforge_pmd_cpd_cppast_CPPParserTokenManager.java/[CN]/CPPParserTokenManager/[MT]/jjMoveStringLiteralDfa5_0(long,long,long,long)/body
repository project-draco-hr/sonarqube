{
  if (((active1&=old1) | (active2&=old2)) == 0L)   return jjStartNfa_0(3,0L,old1,old2);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(4,0L,active1,active2);
    return 5;
  }
switch (curChar) {
case 97:
    return jjMoveStringLiteralDfa6_0(active1,0x410000000000L,active2,0L);
case 99:
  if ((active1 & 0x20000000L) != 0L)   return jjStartNfaWithStates_0(5,93,29);
 else   if ((active1 & 0x1000000000L) != 0L)   return jjStartNfaWithStates_0(5,100,29);
return jjMoveStringLiteralDfa6_0(active1,0x10000000L,active2,0L);
case 100:
if ((active1 & 0x100000L) != 0L) return jjStartNfaWithStates_0(5,84,29);
 else if ((active1 & 0x400000000L) != 0L) return jjStartNfaWithStates_0(5,98,29);
break;
case 101:
if ((active1 & 0x1000L) != 0L) return jjStartNfaWithStates_0(5,76,29);
 else if ((active1 & 0x4000L) != 0L) return jjStartNfaWithStates_0(5,78,29);
 else if ((active1 & 0x800000L) != 0L) return jjStartNfaWithStates_0(5,87,29);
return jjMoveStringLiteralDfa6_0(active1,0x80000000000L,active2,0L);
case 102:
if ((active1 & 0x800000000L) != 0L) return jjStartNfaWithStates_0(5,99,29);
break;
case 104:
if ((active1 & 0x8000000000L) != 0L) return jjStartNfaWithStates_0(5,103,29);
break;
case 105:
return jjMoveStringLiteralDfa6_0(active1,0x1000000000000L,active2,0L);
case 108:
return jjMoveStringLiteralDfa6_0(active1,0x40000800L,active2,0x40L);
case 110:
if ((active1 & 0x20000L) != 0L) return jjStartNfaWithStates_0(5,81,29);
 else if ((active1 & 0x100000000L) != 0L) return jjStartNfaWithStates_0(5,96,29);
return jjMoveStringLiteralDfa6_0(active1,0x200000000400L,active2,0L);
case 116:
if ((active1 & 0x2000000000L) != 0L) return jjStartNfaWithStates_0(5,101,29);
return jjMoveStringLiteralDfa6_0(active1,0x4000088000000L,active2,0L);
default :
break;
}
return jjStartNfa_0(4,0L,active1,active2);
}
