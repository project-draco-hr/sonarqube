{
  if (((active1&=old1) | (active2&=old2)) == 0L)   return jjStartNfa_0(5,0L,old1,old2);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(6,0L,active1,0L);
    return 7;
  }
switch (curChar) {
case 100:
    if ((active1 & 0x200000000000L) != 0L)     return jjStartNfaWithStates_0(7,109,29);
  break;
case 101:
if ((active1 & 0x400L) != 0L) return jjStartNfaWithStates_0(7,74,29);
 else if ((active1 & 0x10000000000L) != 0L) return jjStartNfaWithStates_0(7,104,29);
 else if ((active1 & 0x1000000000000L) != 0L) return jjStartNfaWithStates_0(7,112,29);
return jjMoveStringLiteralDfa8_0(active1,0x10000000L);
case 114:
if ((active1 & 0x80000000L) != 0L) return jjStartNfaWithStates_0(7,95,29);
 else if ((active1 & 0x4000000000000L) != 0L) return jjStartNfaWithStates_0(7,114,29);
return jjMoveStringLiteralDfa8_0(active1,0x40000000L);
default :
break;
}
return jjStartNfa_0(6,0L,active1,0L);
}
