{
  RuleKey ruleKey=RuleKey.of("javascript","S001");
  RuleDto ruleDto=newRuleDto(ruleKey);
  dao.insert(ruleDto,dbSession);
  dbSession.commit();
  RuleParamDto minParamDto=new RuleParamDto().setName("min").setType(RuleParamType.INTEGER.type()).setDefaultValue("2").setDescription("Minimum");
  dao.addRuleParam(ruleDto,minParamDto,dbSession);
  RuleParamDto maxParamDto=new RuleParamDto().setName("max").setType(RuleParamType.INTEGER.type()).setDefaultValue("10").setDescription("Maximum");
  dao.addRuleParam(ruleDto,maxParamDto,dbSession);
  dbSession.commit();
  List<RuleParamDto> persistedDtos=dao.findRuleParamsByRuleKey(ruleKey,dbSession);
  assertThat(persistedDtos).hasSize(2);
  index.refresh();
  Rule hit=index.getByKey(ruleKey);
  assertThat(hit).isNotNull();
  assertThat(hit.key()).isNotNull();
  RuleService service=tester.get(RuleService.class);
  Rule rule=service.getByKey(ruleKey);
  assertThat(rule.params()).hasSize(2);
  assertThat(Iterables.getLast(rule.params(),null).key()).isEqualTo("max");
}
