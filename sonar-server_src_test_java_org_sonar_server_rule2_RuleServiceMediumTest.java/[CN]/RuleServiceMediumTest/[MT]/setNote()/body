{
  MockUserSession.set().setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN).setLogin("marius");
  RuleKey ruleKey=RuleKey.of("javascript","S001");
  dao.insert(newRuleDto(ruleKey),dbSession);
  dbSession.commit();
  service.setNote(ruleKey,"my *note*");
  RuleDto dto=dao.getNonNullByKey(ruleKey,dbSession);
  assertThat(dto.getNoteData()).isEqualTo("my *note*");
  assertThat(dto.getNoteCreatedAt()).isNotNull();
  assertThat(dto.getNoteUpdatedAt()).isNotNull();
  assertThat(dto.getNoteUserLogin()).isEqualTo("marius");
  index.refresh();
  Rule rule=index.getByKey(ruleKey);
  assertThat(rule.markdownNote()).isEqualTo("my *note*");
  assertThat(rule.noteCreatedAt()).isNotNull();
  assertThat(rule.noteUpdatedAt()).isNotNull();
  assertThat(rule.noteLogin()).isEqualTo("marius");
  service.setNote(ruleKey,null);
  dbSession.clearCache();
  dto=dao.getNonNullByKey(ruleKey,dbSession);
  assertThat(dto.getNoteData()).isNull();
  assertThat(dto.getNoteCreatedAt()).isNull();
  assertThat(dto.getNoteUpdatedAt()).isNull();
  assertThat(dto.getNoteUserLogin()).isNull();
  index.refresh();
  rule=index.getByKey(ruleKey);
  assertThat(rule.markdownNote()).isNull();
  assertThat(rule.noteCreatedAt()).isNull();
  assertThat(rule.noteUpdatedAt()).isNull();
  assertThat(rule.noteLogin()).isNull();
}
