{
  ComponentDto projectDto=ComponentTesting.newProjectDto("ABCD").setKey(PROJECT_KEY).setName("Project");
  dbClient.componentDao().insert(session,projectDto);
  ComponentDto moduleDto=ComponentTesting.newModuleDto("BCDE",projectDto).setKey("MODULE_KEY").setName("Module");
  dbClient.componentDao().insert(session,moduleDto);
  ComponentDto directoryDto=ComponentTesting.newDirectory(moduleDto,"CDEF","MODULE_KEY:src/test/java/dir").setKey("MODULE_KEY:src/test/java/dir");
  dbClient.componentDao().insert(session,directoryDto);
  ComponentDto fileDto=ComponentTesting.newFileDto(moduleDto,"DEFG").setKey("MODULE_KEY:src/test/java/dir/FooTest.java").setQualifier("UTS");
  dbClient.componentDao().insert(session,fileDto);
  session.commit();
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setIsTest(true).build());
  Component file=DumbComponent.builder(Component.Type.FILE,3).setUuid("DEFG").setKey(PROJECT_KEY + ":src/main/java/dir/Foo.java").build();
  Component directory=DumbComponent.builder(Component.Type.DIRECTORY,2).setUuid("CDEF").setKey(PROJECT_KEY + ":src/main/java/dir").addChildren(file).build();
  Component project=DumbComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(directory).build();
  treeRootHolder.setRoot(project);
  dbIdsRepository.setComponentId(project,projectDto.getId());
  dbIdsRepository.setComponentId(directory,directoryDto.getId());
  dbIdsRepository.setComponentId(file,fileDto.getId());
  sut.execute();
  SnapshotDto fileSnapshot=getUnprocessedSnapshot(fileDto.getId());
  assertThat(fileSnapshot.getQualifier()).isEqualTo("UTS");
  assertThat(fileSnapshot.getScope()).isEqualTo("FIL");
}
