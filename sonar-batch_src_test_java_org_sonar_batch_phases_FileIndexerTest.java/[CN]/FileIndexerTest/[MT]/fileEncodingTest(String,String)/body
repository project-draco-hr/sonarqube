{
  settings.setProperty(CoreProperties.CORE_IMPORT_SOURCES_PROPERTY,"true");
  File javaFile1=new File(baseDir,"src/main/java/foo/bar/Foo.java");
  FileUtils.copyFile(getFile(testFile),javaFile1);
  when(fs.inputFiles(FileQuery.all())).thenReturn((Iterable)Arrays.asList(new InputFileBuilder(javaFile1,Charset.forName(encoding),"src/main/java/foo/bar/Foo.java").attribute(InputFile.ATTRIBUTE_SOURCE_RELATIVE_PATH,"foo/bar/Foo.java").attribute(InputFile.ATTRIBUTE_LANGUAGE,"java").build()));
  when(project.getLanguageKey()).thenReturn(Java.KEY);
  FileIndexer indexer=new FileIndexer(project,fs,new Languages(Java.INSTANCE),sonarIndex,settings,mock(ResourceKeyMigration.class));
  indexer.execute();
  Resource sonarFile=JavaFile.create("/src/main/java/foo/bar/Foo.java","foo/bar/Foo.java",false);
  verify(sonarIndex).setSource(eq(sonarFile),argThat(new ArgumentMatcher<String>(){
    @Override public boolean matches(    Object arg0){
      String source=(String)arg0;
      return source.contains(aClaess) && source.contains(explicacao);
    }
  }
));
}
