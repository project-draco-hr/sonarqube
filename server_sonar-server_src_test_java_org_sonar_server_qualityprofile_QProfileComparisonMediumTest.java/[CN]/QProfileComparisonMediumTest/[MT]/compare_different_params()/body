{
  ruleActivator.activate(dbSession,new RuleActivation(xooRule1.getKey()).setParameter("max","20"),left);
  ruleActivator.activate(dbSession,new RuleActivation(xooRule1.getKey()).setParameter("min","5"),right);
  dbSession.commit();
  QProfileComparisonResult result=comparison.compare(left.getKey(),right.getKey());
  assertThat(result.left().getKey()).isEqualTo(left.getKey());
  assertThat(result.right().getKey()).isEqualTo(right.getKey());
  assertThat(result.same()).isEmpty();
  assertThat(result.inLeft()).isEmpty();
  assertThat(result.inRight()).isEmpty();
  assertThat(result.modified()).isNotEmpty().containsOnlyKeys(xooRule1.getKey());
  assertThat(result.collectRuleKeys()).containsOnly(xooRule1.getKey());
  ActiveRuleDiff activeRuleDiff=result.modified().get(xooRule1.getKey());
  assertThat(activeRuleDiff.leftSeverity()).isEqualTo(activeRuleDiff.rightSeverity()).isEqualTo(xooRule1.getSeverityString());
  assertThat(activeRuleDiff.paramDifference().areEqual()).isFalse();
  assertThat(activeRuleDiff.paramDifference().entriesDiffering()).isEmpty();
  assertThat(activeRuleDiff.paramDifference().entriesOnlyOnLeft()).containsExactly(MapEntry.entry("max","20"));
  assertThat(activeRuleDiff.paramDifference().entriesOnlyOnRight()).containsExactly(MapEntry.entry("min","5"));
}
