{
  ComponentDto currentFile=ComponentTesting.newFileDto(project1).setId(11L);
  ComponentDto fileOnSameProject=ComponentTesting.newFileDto(project1).setId(12L);
  ComponentDto fileOnDifferentProject=ComponentTesting.newFileDto(project2).setId(13L);
  DuplicationsParser.DuplicationComparator comparator=new DuplicationsParser.DuplicationComparator(currentFile.uuid(),currentFile.projectUuid());
  assertThat(comparator.compare(new DuplicationsParser.Duplication(currentFile,2,2),new DuplicationsParser.Duplication(currentFile,5,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(currentFile,2,2),new DuplicationsParser.Duplication(fileOnSameProject,5,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnSameProject,2,2),new DuplicationsParser.Duplication(currentFile,5,2))).isEqualTo(1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnSameProject,5,2),new DuplicationsParser.Duplication(fileOnDifferentProject,2,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnDifferentProject,5,2),new DuplicationsParser.Duplication(fileOnSameProject,2,2))).isEqualTo(1);
  ComponentDto project3=ComponentTesting.newProjectDto().setId(3L);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnDifferentProject,5,2),new DuplicationsParser.Duplication(project3,2,2))).isEqualTo(1);
  assertThat(comparator.compare(null,new DuplicationsParser.Duplication(fileOnSameProject,2,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnSameProject,2,2),null)).isEqualTo(-1);
  assertThat(comparator.compare(null,null)).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(currentFile,2,2),new DuplicationsParser.Duplication(null,5,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(null,2,2),new DuplicationsParser.Duplication(currentFile,5,2))).isEqualTo(-1);
}
