{
  double sumY=0.0;
  double sumX=0.0;
  double sumYPower2=0.0;
  double sumXY=0.0;
  double sumXPower2=0.0;
  int nbrPoints=0;
  boolean nullValuesYList=true;
  int i=0;
  for (  Double p : values) {
    if (p != null) {
      nullValuesYList=false;
      sumY+=p;
      sumYPower2+=p * p;
      sumXY+=p * (i + 1);
      sumX+=(i + 1);
      sumXPower2+=(i + 1) * (i + 1);
      nbrPoints++;
    }
    i++;
  }
  if (nullValuesYList || nbrPoints == 1) {
    return null;
  }
  double n0=(nbrPoints * sumXY) - (sumX * sumY);
  double d=(nbrPoints * sumXPower2) - (sumX * sumX);
  double n1=(sumY * sumXPower2) - (sumX * sumXY);
  SlopeData result=new SlopeData();
  result.setYIntercept(n1 / d);
  if (Double.doubleToRawLongBits(n0) == 0L && Double.doubleToRawLongBits(d) == 0L) {
    result.setSlope(0.0);
  }
 else {
    Double slope=n0 / d;
    if (Double.isNaN(slope) || Double.isInfinite(slope)) {
      result.setSlope(null);
    }
 else {
      result.setSlope(slope);
    }
  }
  result.setSumXPower2(sumXPower2);
  result.setSumXY(sumXY);
  result.setSumYPower2(sumYPower2);
  if (Double.doubleToRawLongBits(sumXPower2) == 0L || Double.doubleToRawLongBits(sumYPower2) == 0L) {
    result.setCorrelationRate(0.0);
  }
 else {
    result.setCorrelationRate(sumXY / Math.sqrt(sumXPower2 * sumYPower2));
  }
  return result;
}
