{
  MockUserSession.set().addComponentPermission(UserRole.USER,SUB_PROJECT_KEY,COMPONENT_KEY);
  ComponentDto project=newProject();
  newComponent(project);
  addMeasure(CoreMetrics.LINES_KEY,200);
  addMeasure(CoreMetrics.COVERAGE_KEY,95.4);
  addMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,7.4);
  addMeasure(CoreMetrics.SQALE_RATING_KEY,"C");
  addMeasure(CoreMetrics.SQALE_DEBT_RATIO_KEY,35d);
  measures.add(new MeasureDto().setComponentKey(COMPONENT_KEY).setMetricKey(CoreMetrics.TECHNICAL_DEBT_KEY).setValue(182.0));
  when(durations.format(any(Locale.class),any(Duration.class),eq(Durations.DurationFormat.SHORT))).thenReturn("3h 2min");
  WsTester.TestRequest request=tester.newGetRequest("api/components","app").setParam("uuid",COMPONENT_UUID);
  request.execute().assertJson(getClass(),"app_with_measures.json");
  verify(measureDao).findByComponentKeyAndMetricKeys(eq(session),eq(COMPONENT_KEY),measureKeysCaptor.capture());
  assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.LINES_KEY,CoreMetrics.COVERAGE_KEY,CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,CoreMetrics.TECHNICAL_DEBT_KEY);
}
