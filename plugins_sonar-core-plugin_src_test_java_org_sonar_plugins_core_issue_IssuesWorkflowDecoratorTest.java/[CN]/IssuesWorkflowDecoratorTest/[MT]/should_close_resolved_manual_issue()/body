{
  when(moduleIssues.issues(anyString())).thenReturn(Collections.<Issue>emptyList());
  when(initialOpenIssuesStack.selectAndRemove(anyInt())).thenReturn(newArrayList(new IssueDto().setKey("100").setRuleId(1).setManualIssue(true).setStatus(Issue.STATUS_RESOLVED).setRuleKey_unit_test_only("squid","AvoidCycle")));
  decorator.decorate(mock(Resource.class),null);
  ArgumentCaptor<DefaultIssue> argument=ArgumentCaptor.forClass(DefaultIssue.class);
  verify(moduleIssues).addOrUpdate(argument.capture());
  assertThat(argument.getValue().status()).isEqualTo(Issue.STATUS_CLOSED);
  assertThat(argument.getValue().updatedAt()).isEqualTo(loadedDate);
  assertThat(argument.getValue().closedAt()).isEqualTo(loadedDate);
}
