{
  setupData("fixture");
  Collection<ComponentDto> results=dao.selectComponentsByIds(newArrayList(4L));
  assertThat(results).hasSize(1);
  ComponentDto component=results.iterator().next();
  assertThat(component.key()).isEqualTo("org.struts:struts-core:src/org/struts/RequestContext.java");
  assertThat(component.name()).isEqualTo("RequestContext.java");
  assertThat(component.longName()).isEqualTo("org.struts.RequestContext");
  assertThat(component.qualifier()).isEqualTo("FIL");
  assertThat(component.groupId()).isEqualTo(2);
  assertThat(component.rootId()).isEqualTo(1);
  results=dao.selectComponentsByIds(newArrayList(2L));
  assertThat(results).hasSize(1);
  component=results.iterator().next();
  assertThat(component.key()).isEqualTo("org.struts:struts-core");
  assertThat(component.name()).isEqualTo("Struts Core");
  assertThat(component.longName()).isEqualTo("Struts Core");
  assertThat(component.qualifier()).isEqualTo("BRC");
  assertThat(component.groupId()).isEqualTo(1);
  assertThat(component.rootId()).isEqualTo(1);
  results=dao.selectComponentsByIds(newArrayList(1L));
  assertThat(results).hasSize(1);
  component=results.iterator().next();
  assertThat(component.key()).isEqualTo("org.struts:struts");
  assertThat(component.name()).isEqualTo("Struts");
  assertThat(component.longName()).isEqualTo("Apache Struts");
  assertThat(component.qualifier()).isEqualTo("TRK");
  assertThat(component.groupId()).isNull();
  assertThat(component.rootId()).isEqualTo(1);
}
