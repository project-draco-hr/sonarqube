{
  json.beginObject();
  json.prop(FIELD_ID,String.valueOf(measure.getId()));
  writeIfNeeded(json,measureValue(measure,metric),FIELD_VALUE,fieldsToReturn);
  writeIfNeeded(json,measure.getDescription(),FIELD_DESCRIPTION,fieldsToReturn);
  if (isFieldNeeded(FIELD_METRIC,fieldsToReturn)) {
    json.name(FIELD_METRIC);
    MetricJsonWriter.write(json,metric,MetricJsonWriter.MANDATORY_FIELDS);
  }
  writeIfNeeded(json,component.uuid(),FIELD_PROJECT_ID,fieldsToReturn);
  writeIfNeeded(json,component.key(),FIELD_PROJECT_KEY,fieldsToReturn);
  writeIfNeeded(json,new Date(measure.getCreatedAt()),FIELD_CREATED_AT,fieldsToReturn);
  writeIfNeeded(json,new Date(measure.getUpdatedAt()),FIELD_UPDATED_AT,fieldsToReturn);
  writeIfNeeded(json,isPending,FIELD_PENDING,fieldsToReturn);
  if (isFieldNeeded(FIELD_USER,fieldsToReturn)) {
    json.name(FIELD_USER);
    userJsonWriter.write(json,user);
  }
  json.endObject();
}
