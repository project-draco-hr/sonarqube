{
  ModuleQProfiles.QProfile qProfile=new ModuleQProfiles.QProfile(33,"Sonar way","java",12);
  when(qProfiles.findAll()).thenReturn(Arrays.asList(qProfile));
  RulesProfile hibernateProfile=new RulesProfile("Sonar way","java");
  when(dao.getProfile("java","Sonar way")).thenReturn(hibernateProfile);
  RulesProfile profile=provider.provide(qProfiles,settings,dao);
  assertThat(profile).isNotNull().isInstanceOf(RulesProfileWrapper.class);
  assertThat(profile.getLanguage()).isEqualTo("");
  assertThat(profile.getName()).isEqualTo("SonarQube");
  assertThat(profile.getActiveRules()).isEmpty();
  try {
    profile.getId();
    fail();
  }
 catch (  IllegalStateException e) {
  }
}
