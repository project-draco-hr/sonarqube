{
  BatchReportWriter writer=initReport();
  writer.writeComponent(BatchReport.Component.newBuilder().setRef(FILE_REF).setType(Constants.ComponentType.FILE).setUuid(FILE_UUID).setLines(1).build());
  writer.writeComponentScm(BatchReport.Scm.newBuilder().setComponentRef(FILE_REF).addChangeset(BatchReport.Scm.Changeset.newBuilder().setAuthor("john").setDate(123456789L).setRevision("rev-1").build()).addChangesetIndexByLine(0).build());
  File sourceFile=writer.getFileStructure().fileFor(FileStructure.Domain.SOURCE,FILE_REF);
  FileUtils.writeLines(sourceFile,Lists.newArrayList("line1"));
  sut.execute(new ComputationContext(new BatchReportReader(reportDir),ComponentTesting.newProjectDto(PROJECT_UUID)));
  assertThat(dbTester.countRowsOfTable("file_sources")).isEqualTo(1);
  FileSourceDto fileSourceDto=dbClient.fileSourceDao().select(FILE_UUID);
  FileSourceDb.Data data=FileSourceDto.decodeData(fileSourceDto.getBinaryData());
  assertThat(data.getLinesList()).hasSize(1);
  assertThat(data.getLines(0).getScmAuthor()).isEqualTo("john");
  assertThat(data.getLines(0).getScmDate()).isEqualTo(123456789L);
  assertThat(data.getLines(0).getScmRevision()).isEqualTo("rev-1");
}
