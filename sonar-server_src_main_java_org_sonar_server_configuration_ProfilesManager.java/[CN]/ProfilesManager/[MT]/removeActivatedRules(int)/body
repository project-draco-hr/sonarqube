{
  String user="System";
  Rule rule=getSession().getEntity(Rule.class,ruleId);
  List<RulesProfile> profiles=getSession().createQuery("FROM " + RulesProfile.class.getSimpleName()).getResultList();
  for (  RulesProfile profile : profiles) {
    List<ActiveRule> activeRulesToRemove=newArrayList();
    for (    ActiveRule activeRule : profile.getActiveRules(true)) {
      if (activeRule.getRule().equals(rule) && !activeRule.isInherited()) {
        incrementProfileVersionIfNeeded(profile);
        ruleDisabled(profile,activeRule,user);
        for (        RulesProfile child : getChildren(profile.getId())) {
          deactivate(child,activeRule.getRule(),user);
        }
        activeRulesToRemove.add(activeRule);
      }
    }
    for (    ActiveRule activeRule : activeRulesToRemove) {
      ActiveRule activeRuleToRemove=getSession().getSingleResult(ActiveRule.class,"id",activeRule.getId());
      removeActiveRule(profile,activeRuleToRemove);
    }
  }
  getSession().commit();
}
