{
  RulesProfile profile=getSession().getEntity(RulesProfile.class,profileId);
  ActiveRule oldActiveRule=getSession().getEntity(ActiveRule.class,activeRuleId);
  if (oldActiveRule != null && oldActiveRule.doesOverride()) {
    ActiveRule parentActiveRule=getParentProfile(profile).getActiveRule(oldActiveRule.getRule());
    removeActiveRule(profile,oldActiveRule);
    ActiveRule newActiveRule=(ActiveRule)parentActiveRule.clone();
    newActiveRule.setRulesProfile(profile);
    newActiveRule.setInheritance(ActiveRule.INHERITED);
    profile.addActiveRule(newActiveRule);
    getSession().saveWithoutFlush(newActiveRule);
    ruleChanged(profile,oldActiveRule,newActiveRule,userLogin);
    for (    RulesProfile child : getChildren(profile)) {
      activateOrChange(child,newActiveRule,userLogin);
    }
    getSession().commit();
  }
}
