{
  List<ActiveRule> activeRules=getSession().createQuery("FROM " + ActiveRule.class.getSimpleName() + " WHERE rule.id=:ruleId").setParameter("ruleId",ruleId).getResultList();
  List<ActiveRule> activeRulesToRemove=Lists.newArrayList();
  for (  ActiveRule activeRule : activeRules) {
    if (!activeRule.isInherited()) {
      RulesProfile profile=activeRule.getRulesProfile();
      incrementProfileVersionIfNeeded(profile);
      ruleDisabled(profile,activeRule,null);
      for (      RulesProfile child : getChildren(profile.getId())) {
        deactivate(child,activeRule.getRule(),null);
      }
      activeRulesToRemove.add(activeRule);
    }
  }
  for (  ActiveRule activeRule : activeRulesToRemove) {
    ActiveRule activeRuleToRemove=getSession().getEntity(ActiveRule.class,activeRule.getId());
    removeActiveRule(activeRuleToRemove);
  }
  getSession().commit();
  dryRunCache.reportGlobalModification();
}
