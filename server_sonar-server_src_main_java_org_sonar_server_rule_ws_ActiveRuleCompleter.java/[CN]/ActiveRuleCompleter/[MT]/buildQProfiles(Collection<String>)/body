{
  Map<String,QualityProfileDto> qProfilesByKey=Maps.newHashMap();
  for (  String qProfileKey : harvestedProfileKeys) {
    if (!qProfilesByKey.containsKey(qProfileKey)) {
      QualityProfileDto profile=loadProfile(qProfileKey);
      if (profile == null) {
        LOG.warn("Could not find quality profile with key " + qProfileKey);
        continue;
      }
      qProfilesByKey.put(qProfileKey,profile);
      String parentKee=profile.getParentKee();
      if (parentKee != null && !qProfilesByKey.containsKey(parentKee)) {
        qProfilesByKey.put(parentKee,loadProfile(parentKee));
      }
    }
  }
  Rules.QProfiles.Builder qProfilesResponse=Rules.QProfiles.newBuilder();
  Map<String,Rules.QProfile> qProfilesMapResponse=qProfilesResponse.getMutableQProfiles();
  for (  QualityProfileDto profile : qProfilesByKey.values()) {
    writeProfile(qProfilesMapResponse,profile);
  }
  return qProfilesResponse;
}
