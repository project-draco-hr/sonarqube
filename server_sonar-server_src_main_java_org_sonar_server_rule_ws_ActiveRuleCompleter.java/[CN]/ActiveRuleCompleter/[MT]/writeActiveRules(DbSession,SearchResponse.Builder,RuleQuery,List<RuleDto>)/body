{
  Collection<String> qProfileKeys=newHashSet();
  Rules.Actives.Builder activesBuilder=response.getActivesBuilder();
  String profileKey=query.getQProfileKey();
  if (profileKey != null) {
    List<ActiveRuleDto> activeRuleDtos=dbClient.activeRuleDao().selectByProfileKey(dbSession,profileKey);
    Map<RuleKey,ActiveRuleDto> activeRuleByRuleKey=from(activeRuleDtos).uniqueIndex(ActiveRuleToRuleKey.INSTANCE);
    ListMultimap<ActiveRuleKey,ActiveRuleParamDto> activeRuleParamsByActiveRuleKey=activeRuleDtosToActiveRuleParamDtos(dbSession,activeRuleDtos);
    for (    RuleDto rule : rules) {
      ActiveRuleDto activeRule=activeRuleByRuleKey.get(rule.getKey());
      if (activeRule != null) {
        qProfileKeys=writeActiveRules(rule.getKey(),singletonList(activeRule),activeRuleParamsByActiveRuleKey,activesBuilder);
      }
    }
  }
 else {
    List<ActiveRuleDto> activeRuleDtos=dbClient.activeRuleDao().selectByRuleIds(dbSession,Lists.transform(rules,RuleDtoFunctions.toId()));
    Multimap<RuleKey,ActiveRuleDto> activeRulesByRuleKey=from(activeRuleDtos).index(ActiveRuleToRuleKey.INSTANCE);
    ListMultimap<ActiveRuleKey,ActiveRuleParamDto> activeRuleParamsByActiveRuleKey=activeRuleDtosToActiveRuleParamDtos(dbSession,activeRuleDtos);
    for (    RuleDto rule : rules) {
      qProfileKeys=writeActiveRules(rule.getKey(),activeRulesByRuleKey.get(rule.getKey()),activeRuleParamsByActiveRuleKey,activesBuilder);
    }
  }
  response.setActives(activesBuilder);
  return qProfileKeys;
}
