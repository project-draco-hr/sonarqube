{
  String testUuid=request.param(TEST_ID);
  String testFileUuid=request.param(TEST_FILE_ID);
  String testFileKey=request.param(TEST_FILE_KEY);
  String sourceFileUuid=request.param(SOURCE_FILE_ID);
  String sourceFileKey=request.param(SOURCE_FILE_KEY);
  Integer sourceFileLineNumber=request.paramAsInt(SOURCE_FILE_LINE_NUMBER);
  SearchOptions searchOptions=new SearchOptions().setPage(request.mandatoryParamAsInt(WebService.Param.PAGE),request.mandatoryParamAsInt(WebService.Param.PAGE_SIZE));
  DbSession dbSession=dbClient.openSession(false);
  SearchResult<TestDoc> tests;
  Map<String,ComponentDto> componentsByTestFileUuid;
  try {
    tests=searchTests(dbSession,testUuid,testFileUuid,testFileKey,sourceFileUuid,sourceFileKey,sourceFileLineNumber,searchOptions);
    componentsByTestFileUuid=buildComponentsByTestFileUuid(dbSession,tests.getDocs());
  }
  finally {
    MyBatis.closeQuietly(dbSession);
  }
  WsTests.ListResponse.Builder responseBuilder=WsTests.ListResponse.newBuilder();
  responseBuilder.setPaging(Common.Paging.newBuilder().setPageIndex(searchOptions.getPage()).setPageSize(searchOptions.getLimit()).setTotal((int)tests.getTotal()).build());
  for (  TestDoc testDoc : tests.getDocs()) {
    WsTests.Test.Builder testBuilder=WsTests.Test.newBuilder();
    testBuilder.setId(testDoc.testUuid());
    testBuilder.setName(StringUtils.defaultString(testDoc.name()));
    testBuilder.setFileId(testDoc.fileUuid());
    ComponentDto component=componentsByTestFileUuid.get(testDoc.fileUuid());
    if (component != null) {
      testBuilder.setFileKey(component.getKey());
      testBuilder.setFileName(component.longName());
    }
    testBuilder.setStatus(WsTests.TestStatus.valueOf(testDoc.status()));
    if (testDoc.durationInMs() != null) {
      testBuilder.setDurationInMs(testDoc.durationInMs());
    }
    testBuilder.setCoveredLines(coveredLines(testDoc.coveredFiles()));
    if (testDoc.message() != null) {
      testBuilder.setMessage(testDoc.message());
    }
    if (testDoc.stackTrace() != null) {
      testBuilder.setStacktrace(testDoc.stackTrace());
    }
    responseBuilder.addTests(testBuilder.build());
  }
  WsUtils.writeProtobuf(responseBuilder.build(),request,response);
}
