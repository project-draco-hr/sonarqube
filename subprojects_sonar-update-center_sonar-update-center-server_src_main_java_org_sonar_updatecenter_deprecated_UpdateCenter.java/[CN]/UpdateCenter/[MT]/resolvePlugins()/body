{
  List<String> plugins=FileUtils.readLines(FileUtils.toFile(getClass().getResource("/plugins.txt")));
  String pluginInfoWidgetTemplate=FileUtils.readFileToString(FileUtils.toFile(getClass().getResource("/plugin-info-widget-template.html")));
  if (outputDirectory != null) {
    FileUtils.copyURLToFile(getClass().getResource("/style.css"),new File(outputDirectory,"plugins/style.css"));
  }
  JSONArray json=new JSONArray();
  for (  String plugin : plugins) {
    if (plugin.startsWith("#")) {
      continue;
    }
    History<Plugin> history=resolvePluginHistory(plugin);
    if (history.latest() == null) {
      System.out.println("WTF? " + plugin);
      continue;
    }
    json.add(history.latest().toJsonObject());
    Plugin latest=history.latest();
    if (outputDirectory != null) {
      String pluginInfoWidget=StringUtils.replaceEach(pluginInfoWidgetTemplate,new String[]{"%name%","%version%","%date%","%downloadUrl%","%sonarVersion%","%issueTracker%","%sources%","%license%","%developers%"},new String[]{latest.getName(),latest.getVersion(),latest.getReleaseDate(),latest.getDownloadUrl(),latest.getRequiredSonarVersion(),formatLink(latest.getIssueTracker()),formatLink(latest.getSources()),latest.getLicense() == null ? "Unknown" : latest.getLicense(),formatDevelopers(latest.getDevelopers())});
      FileUtils.writeStringToFile(new File(outputDirectory,"plugins/" + latest.getKey() + ".html"),pluginInfoWidget);
    }
    System.out.println(latest.getName() + " : " + history.getAllVersions()+ ", latest "+ latest.getVersion());
  }
  return json;
}
