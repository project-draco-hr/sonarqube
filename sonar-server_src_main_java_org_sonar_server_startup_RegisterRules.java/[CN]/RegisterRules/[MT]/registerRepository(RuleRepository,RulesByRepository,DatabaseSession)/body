{
  List<Rule> registeredRules=newArrayList();
  Map<String,Rule> ruleByKey=newHashMap();
  for (  Rule rule : repository.createRules()) {
    rule.setRepositoryKey(repository.getKey());
    rule.setLanguage(repository.getLanguage());
    rule.setStatus(!Strings.isNullOrEmpty(rule.getStatus()) ? rule.getStatus() : RuleStatus.defaultValue());
    validateRule(rule,repository.getKey());
    ruleByKey.put(rule.getKey(),rule);
    registeredRules.add(rule);
  }
  LOG.debug(ruleByKey.size() + " rules");
  for (  Rule persistedRule : existingRules.get(repository.getKey())) {
    Rule rule=ruleByKey.get(persistedRule.getKey());
    if (rule != null) {
      updateRule(persistedRule,rule,session);
      session.saveWithoutFlush(persistedRule);
      ruleByKey.remove(rule.getKey());
    }
  }
  saveNewRules(ruleByKey.values(),session);
  return registeredRules;
}
