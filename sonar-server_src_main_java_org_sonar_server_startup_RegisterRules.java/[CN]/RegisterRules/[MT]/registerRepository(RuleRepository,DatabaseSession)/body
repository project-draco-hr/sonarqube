{
  Map<String,Rule> rulesByKey=Maps.newHashMap();
  for (  Rule rule : repository.createRules()) {
    validateRule(rule,repository.getKey());
    rule.setRepositoryKey(repository.getKey());
    rule.setLanguage(repository.getLanguage());
    rule.setStatus(!Strings.isNullOrEmpty(rule.getStatus()) ? rule.getStatus() : Status.defaultValue().name());
    rulesByKey.put(rule.getKey(),rule);
  }
  LOG.info(rulesByKey.size() + " rules");
  List<Rule> persistedRules=session.getResults(Rule.class,"pluginName",repository.getKey());
  for (  Rule persistedRule : persistedRules) {
    Rule rule=rulesByKey.get(persistedRule.getKey());
    if (rule != null) {
      updateRule(persistedRule,rule,session);
      rulesByKey.remove(rule.getKey());
    }
  }
  saveNewRules(rulesByKey.values(),session);
}
