{
  setupData("file_sources");
  Date now=DateUtils.parseDateTime("2014-10-29T16:44:02+0100");
  when(system2.newDate()).thenReturn(now);
  String relativePathNew="src/new.java";
  java.io.File newFile=new java.io.File(basedir,relativePathNew);
  FileUtils.write(newFile,"foo\nbar\nbiz");
  DefaultInputFile inputFileNew=new DefaultInputFile(PROJECT_KEY,relativePathNew).setLines(3).setAbsolutePath(newFile.getAbsolutePath()).setLineHashes(new byte[][]{md5("foo"),md5("bar"),md5("biz")});
  when(inputPathCache.all()).thenReturn(Arrays.<InputPath>asList(inputFileNew));
  mockResourceCache(relativePathNew,PROJECT_KEY,"uuidnew");
  sourcePersister.persist();
  FileSourceDto fileSourceDto=new FileSourceDao(getMyBatis()).select("uuidnew");
  assertThat(fileSourceDto.getCreatedAt()).isEqualTo(now.getTime());
  assertThat(fileSourceDto.getUpdatedAt()).isEqualTo(now.getTime());
  assertThat(fileSourceDto.getData()).isEqualTo(",,,,,,,,,,,,,foo\r\n,,,,,,,,,,,,,bar\r\n,,,,,,,,,,,,,biz\r\n");
  assertThat(fileSourceDto.getLineHashes()).isEqualTo(md5Hex("foo") + "\n" + md5Hex("bar")+ "\n"+ md5Hex("biz"));
  assertThat(fileSourceDto.getDataHash()).isEqualTo("e6860232a097eb0616b9fe1bad760941");
}
