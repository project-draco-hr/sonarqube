{
  json.name("issues").beginArray();
  for (  TrackedIssue issue : getIssues()) {
    if (issue.resolution() == null) {
      json.beginObject().prop("key",issue.key()).prop("component",issue.componentKey()).prop("line",issue.startLine()).prop("startLine",issue.startLine()).prop("startOffset",issue.startLineOffset()).prop("endLine",issue.endLine()).prop("endOffset",issue.endLineOffset()).prop("message",issue.getMessage()).prop("severity",issue.severity()).prop("rule",issue.getRuleKey().toString()).prop("status",issue.status()).prop("resolution",issue.resolution()).prop("isNew",issue.isNew()).prop("assignee",issue.assignee()).prop("effortToFix",issue.gap()).propDateTime("creationDate",issue.creationDate());
      if (!StringUtils.isEmpty(issue.reporter())) {
        logins.add(issue.reporter());
      }
      if (!StringUtils.isEmpty(issue.assignee())) {
        logins.add(issue.assignee());
      }
      json.endObject();
      ruleKeys.add(issue.getRuleKey());
    }
  }
  json.endArray();
}
