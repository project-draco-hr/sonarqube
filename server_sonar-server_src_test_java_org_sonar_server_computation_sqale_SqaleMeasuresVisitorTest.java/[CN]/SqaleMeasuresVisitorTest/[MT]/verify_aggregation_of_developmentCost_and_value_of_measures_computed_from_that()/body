{
  DumbComponent root=DumbComponent.builder(PROJECT,1).addChildren(DumbComponent.builder(MODULE,11).addChildren(DumbComponent.builder(DIRECTORY,111).addChildren(createFileComponent(LANGUAGE_KEY_1,1111),createFileComponent(LANGUAGE_KEY_2,1112)).build(),DumbComponent.builder(DIRECTORY,112).addChildren(createFileComponent(LANGUAGE_KEY_2,1121)).build()).build(),DumbComponent.builder(MODULE,12).addChildren(DumbComponent.builder(DIRECTORY,121).addChildren(createFileComponent(LANGUAGE_KEY_1,1211)).build(),DumbComponent.builder(DIRECTORY,122).build()).build(),DumbComponent.builder(MODULE,13).build()).build();
  treeRootHolder.setRoot(root);
  long measureValue1111=10;
  long debt1111=66000l;
  measureRepository.addRawMeasure(1111,METRIC_KEY_1,newMeasureBuilder().create(measureValue1111));
  measureRepository.addRawMeasure(1111,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt1111));
  long measureValue1112=10;
  long debt1112=4200l;
  measureRepository.addRawMeasure(1112,METRIC_KEY_2,newMeasureBuilder().create(measureValue1112));
  measureRepository.addRawMeasure(1112,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt1112));
  long debt111=96325l;
  measureRepository.addRawMeasure(111,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt111));
  long measureValue1121=30;
  long debt1121=25200l;
  measureRepository.addRawMeasure(1121,METRIC_KEY_2,newMeasureBuilder().create(measureValue1121));
  measureRepository.addRawMeasure(1121,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt1121));
  long debt112=99633l;
  measureRepository.addRawMeasure(112,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt112));
  long measureValue1211=20;
  long debt1211=33000l;
  measureRepository.addRawMeasure(1211,METRIC_KEY_1,newMeasureBuilder().create(measureValue1211));
  measureRepository.addRawMeasure(1211,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt1211));
  long debt121=7524l;
  measureRepository.addRawMeasure(121,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt121));
  long debt1=9999l;
  measureRepository.addRawMeasure(1,TECHNICAL_DEBT_KEY,newMeasureBuilder().create(debt1));
  underTest.visit(root);
  verifyFileMeasures(1111,measureValue1111,debt1111,DEV_COST_LANGUAGE_1,C);
  verifyFileMeasures(1112,measureValue1112,debt1112,DEV_COST_LANGUAGE_2,A);
  verifyFileMeasures(1121,measureValue1121,debt1121,DEV_COST_LANGUAGE_2,A);
  verifyFileMeasures(1211,measureValue1211,debt1211,DEV_COST_LANGUAGE_1,C);
  verifyComponentMeasures(122,0,0,A);
  long devCost111=measureValue1111 * DEV_COST_LANGUAGE_1 + measureValue1112 * DEV_COST_LANGUAGE_2;
  verifyComponentMeasures(111,devCost111,debt111 / (double)devCost111,C);
  long devCost112=measureValue1121 * DEV_COST_LANGUAGE_2;
  verifyComponentMeasures(112,devCost112,debt112 / (double)devCost112,C);
  long devCost121=measureValue1211 * DEV_COST_LANGUAGE_1;
  verifyComponentMeasures(121,devCost121,debt121 / (double)devCost121,A);
  long devCost11=devCost111 + devCost112;
  verifyComponentMeasures(11,devCost11,0,A);
  long devCost12=devCost121;
  verifyComponentMeasures(12,devCost12,0,A);
  long devCost13=0;
  verifyComponentMeasures(13,devCost13,0,A);
  long devCost1=devCost11 + devCost12 + devCost13;
  verifyComponentMeasures(1,devCost1,debt1 / (double)devCost1,A);
}
