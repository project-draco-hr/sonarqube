{
  Map<String,String> data=ImmutableMap.of("ruleKey",A_RULE_KEY.toString(),"severity","MINOR","inheritance",ActiveRule.Inheritance.INHERITED.name(),"param_foo","foo_value","param_bar","bar_value");
  insertChange("C1",ActiveRuleChange.Type.ACTIVATED,A_DATE,A_USER_LOGIN,data);
  QProfileChangeQuery query=new QProfileChangeQuery(A_PROFILE_KEY);
  ChangelogLoader.Change change=underTest.load(query).getChanges().get(0);
  assertThat(change.getKey()).isEqualTo("C1");
  assertThat(change.getCreatedAt()).isEqualTo(A_DATE);
  assertThat(change.getType()).isEqualTo(ActiveRuleChange.Type.ACTIVATED.name());
  assertThat(change.getInheritance()).isEqualTo(ActiveRule.Inheritance.INHERITED.name());
  assertThat(change.getRuleKey()).isEqualTo(A_RULE_KEY);
  assertThat(change.getRuleName()).isNull();
  assertThat(change.getSeverity()).isEqualTo("MINOR");
  assertThat(change.getUserLogin()).isEqualTo(A_USER_LOGIN);
  assertThat(change.getUserName()).isNull();
  assertThat(change.getParams()).containsOnly(entry("foo","foo_value"),entry("bar","bar_value"));
}
