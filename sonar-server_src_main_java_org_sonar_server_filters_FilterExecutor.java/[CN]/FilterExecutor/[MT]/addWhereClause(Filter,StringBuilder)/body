{
  sql.append(" WHERE ");
  if (filter.mustJoinMeasuresTable()) {
    if (filter.hasMeasureCriteria()) {
      sql.append(" ( ");
      int index=0;
      while (index < filter.getMeasureCriteria().size()) {
        if (index > 0) {
          sql.append(" OR ");
        }
        MeasureCriterion criteria=filter.getMeasureCriteria().get(index);
        sql.append("(pm.metric_id=").append(criteria.getMetricId()).append(" and pm.value").append(criteria.getOperator()).append(criteria.getValue()).append(")");
        index++;
      }
      if (filter.getSortedMetricId() != null && !filter.hasMeasureCriteriaOnMetric(filter.getSortedMetricId())) {
        sql.append(" OR (pm.metric_id=").append(filter.getSortedMetricId()).append(") ");
      }
      sql.append(" ) AND ");
    }
    sql.append(" pm.rule_id is null AND pm.rules_category_id is null AND pm.rule_priority is null AND pm.characteristic_id IS NULL AND ");
  }
  sql.append(" s.status=:status AND s.islast=:islast ");
  if (filter.getScopes() != null) {
    sql.append(filter.getScopes().isEmpty() ? " AND s.scope IS NULL " : " AND s.scope IN (:scopes) ");
  }
  if (filter.hasQualifiers()) {
    sql.append(" AND s.qualifier IN (:qualifiers) ");
  }
 else {
    sql.append(" AND s.qualifier IS NULL ");
  }
  if (filter.hasLanguages()) {
    sql.append(" AND p.language IN (:languages) ");
  }
  if (filter.getFavouriteIds() != null) {
    sql.append(filter.getFavouriteIds().isEmpty() ? " AND s.project_id IS NULL " : " AND s.project_id IN (:favourites) ");
  }
  if (filter.hasBaseSnapshot()) {
    sql.append(" AND s.root_snapshot_id=:root_sid AND s.path LIKE :path ");
  }
  if (filter.getDateCriterion() != null) {
    sql.append(" AND s.created_at");
    sql.append(filter.getDateCriterion().getOperator());
    sql.append(" :date ");
  }
  if (StringUtils.isNotBlank(filter.getKeyRegexp())) {
    sql.append(" AND UPPER(p.kee) LIKE :kee");
  }
  if (StringUtils.isNotBlank(filter.getNameRegexp())) {
    sql.append(" AND UPPER(p.long_name) LIKE :name");
  }
  if (!filter.isViewContext()) {
    sql.append(" AND p.copy_resource_id IS NULL ");
  }
  sql.append(" GROUP BY s.id");
}
