{
  RuleKey ruleKey=RuleKey.of(XooConstants.REPOSITORY_KEY,RULE_KEY);
  Measure<Integer> linesMeasure=context.getMeasure(file,CoreMetrics.LINES);
  if (linesMeasure == null) {
    LoggerFactory.getLogger(getClass()).warn("Missing measure " + CoreMetrics.LINES_KEY + " on "+ file);
  }
 else {
    IssueBuilder issueBuilder=context.issueBuilder();
    for (int line=1; line <= (Integer)linesMeasure.value(); line++) {
      context.addIssue(issueBuilder.ruleKey(ruleKey).onFile(file).atLine(line).effortToFix(context.settings().getDouble(EFFORT_TO_FIX_PROPERTY)).severity(context.settings().getString(FORCE_SEVERITY_PROPERTY)).message("This issue is generated on each line").build());
    }
  }
}
