{
  List<PermissionTemplateUserDto> usersPermissions=Lists.newArrayList(buildUserPermission("user_scan",GlobalPermissions.SCAN_EXECUTION),buildUserPermission("user_dry_run",GlobalPermissions.PREVIEW_EXECUTION),buildUserPermission("user_scan_and_dry_run",GlobalPermissions.SCAN_EXECUTION),buildUserPermission("user_scan_and_dry_run",GlobalPermissions.PREVIEW_EXECUTION));
  List<PermissionTemplateGroupDto> groupsPermissions=Lists.newArrayList(buildGroupPermission("admin_group",GlobalPermissions.SYSTEM_ADMIN),buildGroupPermission("scan_group",GlobalPermissions.SCAN_EXECUTION),buildGroupPermission(null,GlobalPermissions.PREVIEW_EXECUTION));
  PermissionTemplateDto permissionTemplateDto=new PermissionTemplateDto().setId(1L).setName("my template").setDescription("my description").setUsersPermissions(usersPermissions).setGroupsByPermission(groupsPermissions);
  when(permissionTemplateDao.selectPermissionTemplate("my template")).thenReturn(permissionTemplateDto);
  PermissionTemplate permissionTemplate=underTest.selectPermissionTemplate("my template");
  assertThat(permissionTemplate.getUsersForPermission(GlobalPermissions.DASHBOARD_SHARING)).isEmpty();
  assertThat(permissionTemplate.getUsersForPermission(GlobalPermissions.SCAN_EXECUTION)).extracting("userName").containsOnly("user_scan","user_scan_and_dry_run");
  assertThat(permissionTemplate.getUsersForPermission(GlobalPermissions.PREVIEW_EXECUTION)).extracting("userName").containsOnly("user_dry_run","user_scan_and_dry_run");
  assertThat(permissionTemplate.getGroupsForPermission(GlobalPermissions.DASHBOARD_SHARING)).isEmpty();
  assertThat(permissionTemplate.getGroupsForPermission(GlobalPermissions.SCAN_EXECUTION)).extracting("groupName").containsOnly("scan_group");
  assertThat(permissionTemplate.getGroupsForPermission(GlobalPermissions.SYSTEM_ADMIN)).extracting("groupName").containsOnly("admin_group");
}
