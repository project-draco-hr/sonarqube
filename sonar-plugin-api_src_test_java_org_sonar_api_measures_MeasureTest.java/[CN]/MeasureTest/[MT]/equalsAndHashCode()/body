{
  Measure measure1=new Measure();
  Measure measure2=new Measure();
  assertThat(measure1.equals(null),is(false));
  assertThat(measure1.equals(""),is(false));
  assertThat(measure1.equals(measure1),is(true));
  assertThat(measure1.hashCode(),equalTo(measure2.hashCode()));
  assertThat(measure1.equals(measure2),is(true));
  assertThat(measure2.equals(measure1),is(true));
  assertThat(measure1.hashCode(),equalTo(measure2.hashCode()));
  measure1.setMetric(CoreMetrics.COVERAGE);
  assertThat(measure1.equals(measure2),is(false));
  assertThat(measure2.equals(measure1),is(false));
  assertThat(measure1.hashCode(),not(equalTo(measure2.hashCode())));
  measure2.setMetric(CoreMetrics.LINES);
  assertThat(measure1.equals(measure2),is(false));
  assertThat(measure2.equals(measure1),is(false));
  assertThat(measure1.hashCode(),not(equalTo(measure2.hashCode())));
  measure2.setMetric(CoreMetrics.COVERAGE);
  assertThat(measure1.equals(measure2),is(true));
  assertThat(measure2.equals(measure1),is(true));
  assertThat(measure1.hashCode(),equalTo(measure2.hashCode()));
  measure1.setCommitter("simon");
  assertThat(measure1.equals(measure2),is(false));
  assertThat(measure2.equals(measure1),is(false));
  assertThat(measure1.hashCode(),not(equalTo(measure2.hashCode())));
  measure2.setCommitter("evgeny");
  assertThat(measure1.equals(measure2),is(false));
  assertThat(measure2.equals(measure1),is(false));
  assertThat(measure1.hashCode(),not(equalTo(measure2.hashCode())));
  measure2.setCommitter("simon");
  assertThat(measure1.equals(measure2),is(true));
  assertThat(measure2.equals(measure1),is(true));
  assertThat(measure1.hashCode(),equalTo(measure2.hashCode()));
  measure1.setValue(1.0);
  measure2.setValue(2.0);
  assertThat(measure1.equals(measure2),is(true));
  assertThat(measure2.equals(measure1),is(true));
  assertThat(measure1.hashCode(),equalTo(measure2.hashCode()));
}
