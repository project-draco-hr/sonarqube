{
  lock=new DefaultResourceCreationLock(new Settings());
  MetricFinder metricFinder=mock(MetricFinder.class);
  when(metricFinder.findByKey("ncloc")).thenReturn(CoreMetrics.NCLOC);
  index=new DefaultIndex(mock(PersistenceManager.class),lock,mock(ProjectTree.class),metricFinder,mock(ScanGraph.class));
  Project project=new Project("project");
  ResourceFilter filter=new ResourceFilter(){
    public boolean isIgnored(    Resource resource){
      return StringUtils.containsIgnoreCase(resource.getKey(),"excluded");
    }
  }
;
  RulesProfile rulesProfile=RulesProfile.create();
  rule=Rule.create("repoKey","ruleKey","Rule");
  rulesProfile.activateRule(rule,null);
  index.setCurrentProject(project,new ResourceFilters(new ResourceFilter[]{filter}),new ViolationFilters(),rulesProfile);
  index.doStart(project);
}
