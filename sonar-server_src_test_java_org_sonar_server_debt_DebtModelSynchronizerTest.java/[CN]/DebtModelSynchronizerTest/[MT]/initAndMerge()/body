{
  when(myBatis.openSession()).thenReturn(session);
  defaultModel=new DefaultTechnicalDebtModel();
  Reader defaultModelReader=mock(Reader.class);
  when(technicalDebtModelRepository.createReaderForXMLFile("technical-debt")).thenReturn(defaultModelReader);
  when(xmlImporter.importXML(eq(defaultModelReader),any(ValidationMessages.class))).thenReturn(defaultModel);
  doAnswer(new Answer(){
    public Object answer(    InvocationOnMock invocation){
      Object[] args=invocation.getArguments();
      CharacteristicDto dto=(CharacteristicDto)args[0];
      dto.setId(currentId++);
      return null;
    }
  }
).when(dao).insert(any(CharacteristicDto.class),any(SqlSession.class));
  manager=new DebtModelSynchronizer(myBatis,dao,technicalDebtModelRepository,xmlImporter);
}
