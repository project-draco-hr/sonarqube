{
  Settings settings=new Settings();
  ExclusionFilters filter=new ExclusionFilters(new FileExclusions(settings));
  when(fs.sourceDirs()).thenReturn(Arrays.asList(new File(basedir,"src/main/java")));
  when(fs.testDirs()).thenReturn(Arrays.asList(new File(basedir,"src/test/java")));
  filter.logConfiguration(fs);
  java.io.File file=temp.newFile();
  InputFile inputFile=DefaultInputFile.create(file,Charsets.UTF_8,"src/main/java/com/mycompany/Foo.java",ImmutableMap.of(InputFile.ATTRIBUTE_TYPE,InputFile.TYPE_MAIN));
  assertThat(filter.accept(inputFile,fs)).isTrue();
  inputFile=DefaultInputFile.create(file,Charsets.UTF_8,"src/main/java/com/mycompany/Foo.java",ImmutableMap.of(InputFile.ATTRIBUTE_TYPE,InputFile.TYPE_TEST));
  assertThat(filter.accept(inputFile,fs)).isFalse();
  inputFile=DefaultInputFile.create(file,Charsets.UTF_8,"src/test/java/com/mycompany/Foo.java",ImmutableMap.of(InputFile.ATTRIBUTE_TYPE,InputFile.TYPE_TEST));
  assertThat(filter.accept(inputFile,fs)).isTrue();
}
