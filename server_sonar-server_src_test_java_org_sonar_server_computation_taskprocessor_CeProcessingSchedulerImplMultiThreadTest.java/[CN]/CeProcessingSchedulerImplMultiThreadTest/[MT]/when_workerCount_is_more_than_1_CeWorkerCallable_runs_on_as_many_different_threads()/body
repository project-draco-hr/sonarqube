{
  int workerCount=2;
  ceConfiguration.setWorkerCount(workerCount).setQueuePollingDelay(10);
  CeProcessingSchedulerExecutorService processingExecutorService=null;
  CeProcessingSchedulerImpl underTest=null;
  try {
    processingExecutorService=new CeProcessingSchedulerExecutorServiceImpl(ceConfiguration);
    underTest=new CeProcessingSchedulerImpl(ceConfiguration,processingExecutorService,ceWorkerRunnable);
    underTest.startScheduling();
    Thread.sleep(500);
    assertThat(ceWorkerRunnable.getThreadNames()).hasSize(workerCount);
  }
  finally {
    if (underTest != null) {
      underTest.stop();
    }
    if (processingExecutorService != null) {
      processingExecutorService.stop();
    }
  }
}
