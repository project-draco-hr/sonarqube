{
  File outputDir=TestUtils.getResource(JaCoCoOverallSensorTest.class,".");
  Files.copy(TestUtils.getResource("HelloWorld.class.toCopy"),new File(outputDir,"HelloWorld.class"));
  JavaFile resource=new JavaFile("com.sonar.coverages.HelloWorld");
  when(project.getFileSystem()).thenReturn(pfs);
  when(context.getResource(any(Resource.class))).thenReturn(resource);
  when(configuration.getReportPath()).thenReturn("ut.exec");
  when(configuration.getItReportPath()).thenReturn("it.exec");
  when(pfs.getBuildOutputDir()).thenReturn(outputDir);
  when(pfs.resolvePath("ut.exec")).thenReturn(new File(outputDir,"ut.exec"));
  when(pfs.resolvePath("it.exec")).thenReturn(new File(outputDir,"it.exec"));
  when(pfs.getSonarWorkingDirectory()).thenReturn(new File("target/sonar"));
  when(pfs.resolvePath(new File("target/sonar/jacoco-overall.exec").getAbsolutePath())).thenReturn(new File("target/sonar/jacoco-overall.exec"));
  sensor.analyse(project,context);
  verify(context).getResource(resource);
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_LINES_TO_COVER,12.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_UNCOVERED_LINES,2.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_COVERAGE_LINE_HITS_DATA,"3=1;6=1;7=1;10=1;11=1;14=1;15=1;17=1;18=1;20=1;23=0;24=0")));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_CONDITIONS_TO_COVER,2.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_UNCOVERED_CONDITIONS,0.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_CONDITIONS_BY_LINE,"14=2")));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.OVERALL_COVERED_CONDITIONS_BY_LINE,(String)null)));
  verifyNoMoreInteractions(context);
}
