{
  builder.put("node.name","node-mem-" + System.currentTimeMillis()).put("node.data",true).put("cluster.name","cluster-mem-" + NetworkUtils.getLocalAddress().getHostName()).put("index.store.type","memory").put("index.store.fs.memory.enabled","true").put("gateway.type","none").put("index.number_of_shards","1").put("index.number_of_replicas","0").put("node.local",true).put("script.default_lang","native").put("script.native." + ListUpdate.NAME + ".type",ListUpdate.UpdateListScriptFactory.class.getName()).put("index.search.slowlog.threshold.query.warn","10ms").put("index.search.slowlog.threshold.query.info","10ms").put("index.search.slowlog.threshold.query.debug","10ms").put("index.search.slowlog.threshold.query.trace","10ms").put("index.search.slowlog.threshold.fetch.warn","10ms").put("index.search.slowlog.threshold.fetch.info","10ms").put("index.search.slowlog.threshold.fetch.debug","10ms").put("index.search.slowlog.threshold.fetch.trace","10ms").put("index.indexing.slowlog.threshold.index.warn","10ms").put("index.indexing.slowlog.threshold.index.info","10ms").put("index.indexing.slowlog.threshold.index.debug","10ms").put("index.indexing.slowlog.threshold.index.trace","10ms").put("path.data",esDataDir().getAbsolutePath()).put("path.logs",esLogDir().getAbsolutePath());
  int httpPort=settings.getInt(IndexProperties.HTTP_PORT);
  if (httpPort > 0) {
    LOG.warn("Elasticsearch HTTP console enabled on port {}. Only for debugging purpose.",httpPort);
    builder.put(HTTP_ENABLED,true);
    builder.put("http.host","127.0.0.1");
    builder.put("http.port",httpPort);
  }
 else {
    builder.put(HTTP_ENABLED,false);
  }
}
