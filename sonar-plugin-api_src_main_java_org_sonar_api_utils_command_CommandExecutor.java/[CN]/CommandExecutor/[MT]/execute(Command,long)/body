{
  ExecutorService executorService=null;
  Process process=null;
  try {
    LoggerFactory.getLogger(getClass()).debug("Executing command: " + command);
    ProcessBuilder builder=new ProcessBuilder(command.toStrings());
    process=builder.start();
    StreamGobbler outputGobbler=new StreamGobbler(process.getInputStream());
    StreamGobbler errorGobbler=new StreamGobbler(process.getErrorStream());
    outputGobbler.start();
    errorGobbler.start();
    final Process finalProcess=process;
    Callable<Integer> call=new Callable<Integer>(){
      public Integer call() throws Exception {
        finalProcess.waitFor();
        return finalProcess.exitValue();
      }
    }
;
    executorService=Executors.newSingleThreadExecutor();
    Future<Integer> ft=executorService.submit(call);
    return ft.get(timeoutMilliseconds,TimeUnit.MILLISECONDS);
  }
 catch (  TimeoutException te) {
    if (process != null) {
      process.destroy();
    }
    throw new CommandException(command,"Timeout exceeded: " + timeoutMilliseconds + " ms",te);
  }
catch (  Exception e) {
    throw new CommandException(command,e);
  }
 finally {
    if (executorService != null) {
      executorService.shutdown();
    }
  }
}
