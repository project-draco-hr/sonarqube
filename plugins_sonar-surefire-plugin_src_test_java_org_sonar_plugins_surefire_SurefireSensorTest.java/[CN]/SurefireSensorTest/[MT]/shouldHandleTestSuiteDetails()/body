{
  SensorContext context=mockContext();
  new SurefireSensor().collect(newJarProject(),context,new File(getClass().getResource("/org/sonar/plugins/surefire/SurefireSensorTest/shouldHandleTestSuiteDetails/").toURI()));
  verify(context,times(3)).saveMeasure(argThat(new IsResource(JavaFile.SCOPE_ENTITY,Qualifiers.UNIT_TEST_FILE)),eq(CoreMetrics.SKIPPED_TESTS),anyDouble());
  verify(context,times(3)).saveMeasure(argThat(new IsResource(JavaFile.SCOPE_ENTITY,Qualifiers.UNIT_TEST_FILE)),eq(CoreMetrics.TESTS),anyDouble());
  verify(context,times(18)).saveMeasure(argThat(new IsResource(JavaFile.SCOPE_ENTITY,Qualifiers.UNIT_TEST_FILE)),(Metric)anyObject(),anyDouble());
  verify(context,times(3)).saveMeasure(argThat(new IsResource(JavaFile.SCOPE_ENTITY,Qualifiers.UNIT_TEST_FILE)),argThat(new IsMeasure(CoreMetrics.TEST_DATA)));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest",true)),eq(CoreMetrics.TESTS),eq(4d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest",true)),eq(CoreMetrics.TEST_EXECUTION_TIME),eq(111d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest",true)),eq(CoreMetrics.TEST_FAILURES),eq(1d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest",true)),eq(CoreMetrics.TEST_ERRORS),eq(1d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest",true)),eq(CoreMetrics.SKIPPED_TESTS),eq(0d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest",true)),argThat(getTestDetailsMatcher("shouldHandleTestSuiteDetails/ExtensionsFinderTest-expected-result.xml")));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest2",true)),eq(CoreMetrics.TESTS),eq(2d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest2",true)),eq(CoreMetrics.TEST_EXECUTION_TIME),eq(2d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest2",true)),eq(CoreMetrics.TEST_FAILURES),eq(0d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest2",true)),eq(CoreMetrics.TEST_ERRORS),eq(0d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest2",true)),eq(CoreMetrics.SKIPPED_TESTS),eq(0d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest2",true)),argThat(getTestDetailsMatcher("shouldHandleTestSuiteDetails/ExtensionsFinderTest2-expected-result.xml")));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest3",true)),eq(CoreMetrics.TESTS),eq(1d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest3",true)),eq(CoreMetrics.TEST_EXECUTION_TIME),eq(16d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest3",true)),eq(CoreMetrics.TEST_FAILURES),eq(0d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest3",true)),eq(CoreMetrics.TEST_ERRORS),eq(0d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest3",true)),eq(CoreMetrics.SKIPPED_TESTS),eq(1d));
  verify(context).saveMeasure(eq(new JavaFile("org.sonar.core.ExtensionsFinderTest3",true)),argThat(getTestDetailsMatcher("shouldHandleTestSuiteDetails/ExtensionsFinderTest3-expected-result.xml")));
}
