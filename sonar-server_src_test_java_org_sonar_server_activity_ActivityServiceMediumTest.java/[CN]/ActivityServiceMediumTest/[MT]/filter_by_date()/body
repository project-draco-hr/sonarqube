{
  ActivityDto activity=ActivityDto.createFor(testValue).setType(Activity.Type.NONE).setAuthor("testing");
  DateTime t0=new DateTime();
  activity.setCreatedAt(t0.toDate());
  dao.insert(dbSession,activity);
  dao.insert(dbSession,activity);
  dbSession.commit();
  DateTime t1=new DateTime();
  activity.setCreatedAt(t1.toDate());
  dao.insert(dbSession,activity);
  dbSession.commit();
  DateTime t2=new DateTime();
  assertThat(service.search(new ActivityQuery().setSince(t0.minus(10L).toDate()),new QueryOptions()).getHits()).hasSize(3);
  assertThat(service.search(new ActivityQuery().setSince(t1.minus(10L).toDate()),new QueryOptions()).getHits()).hasSize(1);
  assertThat(service.search(new ActivityQuery().setSince(t2.minus(10L).toDate()),new QueryOptions()).getHits()).hasSize(0);
  assertThat(service.search(new ActivityQuery().setTo(t1.minus(10L).toDate()),new QueryOptions()).getHits()).hasSize(2);
  assertThat(service.search(new ActivityQuery().setSince(t1.minus(10L).toDate()).setTo(t2.plus(10L).toDate()),new QueryOptions()).getHits()).hasSize(1);
}
