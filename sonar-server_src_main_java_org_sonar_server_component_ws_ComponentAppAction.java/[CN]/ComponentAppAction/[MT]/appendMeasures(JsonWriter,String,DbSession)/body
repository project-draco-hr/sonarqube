{
  json.name("measures").beginObject();
  List<MeasureDto> measures=dbClient.measureDao().findByComponentKeyAndMetricKeys(fileKey,newArrayList(CoreMetrics.NCLOC_KEY,CoreMetrics.COVERAGE_KEY,CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,CoreMetrics.TECHNICAL_DEBT_KEY,CoreMetrics.VIOLATIONS_KEY,CoreMetrics.BLOCKER_VIOLATIONS_KEY,CoreMetrics.MAJOR_VIOLATIONS_KEY,CoreMetrics.MAJOR_VIOLATIONS_KEY,CoreMetrics.MINOR_VIOLATIONS_KEY,CoreMetrics.INFO_VIOLATIONS_KEY),session);
  json.prop("fNcloc",formattedMeasure(CoreMetrics.NCLOC_KEY,measures));
  json.prop("fCoverage",formattedMeasure(CoreMetrics.COVERAGE_KEY,measures));
  json.prop("fDuplicationDensity",formattedMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,measures));
  json.prop("fDebt",formattedMeasure(CoreMetrics.TECHNICAL_DEBT_KEY,measures));
  json.prop("fIssues",formattedMeasure(CoreMetrics.VIOLATIONS_KEY,measures));
  json.prop("fBlockerIssues",formattedMeasure(CoreMetrics.BLOCKER_VIOLATIONS_KEY,measures));
  json.prop("fCriticalIssues",formattedMeasure(CoreMetrics.CRITICAL_VIOLATIONS_KEY,measures));
  json.prop("fMajorIssues",formattedMeasure(CoreMetrics.MAJOR_VIOLATIONS_KEY,measures));
  json.prop("fMinorIssues",formattedMeasure(CoreMetrics.MINOR_VIOLATIONS_KEY,measures));
  json.prop("fInfoIssues",formattedMeasure(CoreMetrics.INFO_VIOLATIONS_KEY,measures));
  json.endObject();
}
