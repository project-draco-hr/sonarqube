{
  json.name("measures").beginObject();
  String fileKey=component.getKey();
  List<MeasureDto> measures=dbClient.measureDao().findByComponentKeyAndMetricKeys(fileKey,newArrayList(CoreMetrics.NCLOC_KEY,CoreMetrics.COVERAGE_KEY,CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,CoreMetrics.TECHNICAL_DEBT_KEY,CoreMetrics.VIOLATIONS_KEY,CoreMetrics.BLOCKER_VIOLATIONS_KEY,CoreMetrics.CRITICAL_VIOLATIONS_KEY,CoreMetrics.MAJOR_VIOLATIONS_KEY,CoreMetrics.MINOR_VIOLATIONS_KEY,CoreMetrics.INFO_VIOLATIONS_KEY,CoreMetrics.TESTS_KEY),session);
  json.prop("fNcloc",formatMeasure(CoreMetrics.NCLOC_KEY,measures));
  json.prop("fCoverage",formatMeasure(CoreMetrics.COVERAGE_KEY,measures));
  json.prop("fDuplicationDensity",formatMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,measures));
  json.prop("fDebt",formatMeasure(CoreMetrics.TECHNICAL_DEBT_KEY,measures));
  json.prop("fIssues",formatMeasure(CoreMetrics.VIOLATIONS_KEY,measures));
  json.prop("fBlockerIssues",formatMeasure(CoreMetrics.BLOCKER_VIOLATIONS_KEY,measures));
  json.prop("fCriticalIssues",formatMeasure(CoreMetrics.CRITICAL_VIOLATIONS_KEY,measures));
  json.prop("fMajorIssues",formatMeasure(CoreMetrics.MAJOR_VIOLATIONS_KEY,measures));
  json.prop("fMinorIssues",formatMeasure(CoreMetrics.MINOR_VIOLATIONS_KEY,measures));
  json.prop("fInfoIssues",formatMeasure(CoreMetrics.INFO_VIOLATIONS_KEY,measures));
  json.prop("fTests",formatMeasure(CoreMetrics.TESTS_KEY,measures));
  json.endObject();
}
