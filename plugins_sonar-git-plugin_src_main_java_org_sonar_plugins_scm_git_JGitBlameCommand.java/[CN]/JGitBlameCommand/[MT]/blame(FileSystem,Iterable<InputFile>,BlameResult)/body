{
  Git git=null;
  File basedir=fs.baseDir();
  try {
    git=Git.open(basedir);
    for (    InputFile inputFile : files) {
      String filename=inputFile.relativePath();
      org.eclipse.jgit.blame.BlameResult blameResult=git.blame().setFilePath(filename).call();
      List<BlameLine> lines=new ArrayList<BlameLine>();
      for (int i=0; i < blameResult.getResultContents().size(); i++) {
        if (blameResult.getSourceAuthor(i) == null || blameResult.getSourceCommit(i) == null || blameResult.getSourceCommitter(i) == null) {
          throw new IllegalStateException("Unable to blame file " + inputFile.relativePath() + ". No blame info at line "+ (i + 1)+ ". Is file commited?");
        }
        lines.add(new org.sonar.api.batch.scm.BlameLine(blameResult.getSourceAuthor(i).getWhen(),blameResult.getSourceCommit(i).getName(),blameResult.getSourceAuthor(i).getEmailAddress(),blameResult.getSourceCommitter(i).getEmailAddress()));
      }
      result.add(inputFile,lines);
    }
  }
 catch (  IOException e) {
    throw new IllegalStateException("Unable to open Git repository",e);
  }
catch (  GitAPIException e) {
    throw new IllegalStateException("Unable to blame",e);
  }
 finally {
    if (git != null && git.getRepository() != null) {
      git.getRepository().close();
    }
  }
}
