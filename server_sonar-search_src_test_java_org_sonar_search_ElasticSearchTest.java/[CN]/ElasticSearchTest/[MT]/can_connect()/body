{
  int port=NetworkUtils.freePort();
  Properties properties=new Properties();
  properties.setProperty(Process.NAME_PROPERTY,"ES");
  properties.setProperty(Process.HEARTBEAT_PROPERTY,Integer.toString(socket.getLocalPort()));
  properties.setProperty(ElasticSearch.ES_HOME_PROPERTY,tempDirectory.getAbsolutePath());
  properties.setProperty(ElasticSearch.ES_PORT_PROPERTY,Integer.toString(port));
  elasticSearch=new ElasticSearch(Props.create(properties));
  assertHeartBeat();
  Settings settings=ImmutableSettings.settingsBuilder().put("cluster.name","sonarqube").build();
  TransportClient client=new TransportClient(settings).addTransportAddress(new InetSocketTransportAddress("localhost",port));
  assertThat(client.admin().cluster().prepareClusterStats().get().getStatus()).isEqualTo(ClusterHealthStatus.GREEN);
  assertHeartBeat();
  elasticSearch.shutdown();
  try {
    client.admin().cluster().prepareClusterStats().get().getStatus();
    fail();
  }
 catch (  Exception e) {
    assertThat(e.getMessage()).isEqualTo("No node available");
  }
}
