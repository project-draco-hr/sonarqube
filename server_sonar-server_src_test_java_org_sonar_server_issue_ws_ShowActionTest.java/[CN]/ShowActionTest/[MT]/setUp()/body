{
  when(dbClient.openSession(false)).thenReturn(session);
  when(dbClient.componentDao()).thenReturn(componentDao);
  rule=mock(Rule.class);
  when(rule.key()).thenReturn(RuleKey.of("squid","AvoidCycle"));
  when(rule.name()).thenReturn("Avoid cycle");
  when(ruleService.getNonNullByKey(rule.key())).thenReturn(rule);
  when(issueChangelogService.changelog(any(Issue.class))).thenReturn(mock(IssueChangelog.class));
  issueCreationDate=DateUtils.parseDateTime("2014-01-22T19:10:03+0100");
  when(i18n.formatDateTime(any(Locale.class),eq(issueCreationDate))).thenReturn("Jan 22, 2014 10:03 AM");
  when(i18n.message(any(Locale.class),eq("created"),eq((String)null))).thenReturn("Created");
  when(componentDao.selectById(eq(session),anyLong())).thenReturn(Optional.<ComponentDto>absent());
  tester=new WsTester(new IssuesWs(new ShowAction(dbClient,issueService,issueChangelogService,commentService,new IssueActionsWriter(issueService,actionService,userSessionRule),actionPlanService,userFinder,ruleService,i18n,durations,userSessionRule)));
}
