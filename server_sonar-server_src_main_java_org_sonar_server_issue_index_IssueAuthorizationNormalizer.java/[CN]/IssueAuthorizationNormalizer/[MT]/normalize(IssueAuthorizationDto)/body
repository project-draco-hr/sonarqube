{
  Map<String,Object> update=new HashMap<String,Object>();
  Preconditions.checkNotNull(dto.getProjectUuid(),"Project uuid is null");
  update.put(IssueAuthorizationField.PROJECT.field(),dto.getProjectUuid());
  update.put(IssueAuthorizationField.PERMISSION.field(),dto.getPermission());
  update.put(IssueAuthorizationField.USERS.field(),dto.getUsers());
  update.put(IssueAuthorizationField.GROUPS.field(),dto.getGroups());
  update.put(IssueAuthorizationField.UPDATED_AT.field(),dto.getUpdatedAt());
  Map<String,Object> upsert=getUpsertFor(IssueAuthorizationField.ALL_FIELDS,update);
  upsert.put(IssueAuthorizationField.PROJECT.field(),dto.getKey());
  return ImmutableList.of(new UpdateRequest().id(dto.getKey()).doc(update).upsert(upsert));
}
