{
  DefaultIssue unresolved1=newIssue(10);
  DefaultIssue unresolved2=newIssue(30);
  DefaultIssue unresolvedWithoutDebt=newIssue();
  DefaultIssue resolved=newIssue(50).setResolution(RESOLUTION_FIXED);
  underTest.beforeComponent(FILE);
  underTest.onIssue(FILE,unresolved1);
  underTest.onIssue(FILE,unresolved2);
  underTest.onIssue(FILE,unresolvedWithoutDebt);
  underTest.onIssue(FILE,resolved);
  underTest.afterComponent(FILE);
  assertThat(debtMeasure(FILE).get().getLongValue()).isEqualTo(10 + 30);
  assertThat(debtRuleMeasure(FILE,RULE.getId()).get().getLongValue()).isEqualTo(10 + 30);
  assertThat(debtCharacteristicMeasure(FILE,PORTABILITY_ID).get().getLongValue()).isEqualTo(10 + 30);
  assertThat(debtCharacteristicMeasure(FILE,PORTABILITY_SOFT_ID).get().getLongValue()).isEqualTo(10 + 30);
  assertThat(debtCharacteristicMeasure(FILE,PORTABILITY_HARD_ID)).isAbsent();
  assertThat(debtCharacteristicMeasure(FILE,RELIABILITY_ID)).isAbsent();
}
