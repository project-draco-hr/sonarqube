{
  QualityProfileDto profile=createProfile("java");
  RuleDto rule0=createRule(profile.getLanguage(),"toto");
  RuleDto rule1=createRule(profile.getLanguage(),"tata");
  session.commit();
  ruIndexer.index();
  assertThat(db.activeRuleDao().selectByProfileKey(session,profile.getKey())).isEmpty();
  assertThat(tester.get(RuleIndex.class).search(new RuleQuery().setSeverities(ImmutableSet.of("BLOCKER")),new SearchOptions()).getIds()).hasSize(2);
  WsTester.TestRequest request=wsTester.newPostRequest(QProfilesWs.API_ENDPOINT,BulkRuleActivationActions.BULK_ACTIVATE_ACTION);
  request.setParam(BulkRuleActivationActions.PROFILE_KEY,profile.getKey());
  request.setParam(BulkRuleActivationActions.SEVERITY,"MINOR");
  request.execute();
  session.commit();
  assertThat(tester.get(ActiveRuleDao.class).selectByRuleId(session,rule0.getId()).get(0).getSeverityString()).isEqualTo("MINOR");
  assertThat(tester.get(RuleIndex.class).searchAll(new RuleQuery().setQProfileKey(profile.getKey()).setKey(rule0.getKey().toString()).setActiveSeverities(Collections.singleton("MINOR")).setActivation(true))).hasSize(1);
}
