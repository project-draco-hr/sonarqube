{
  List<InputFile> result=Lists.newArrayList();
  if (directories == null) {
    return result;
  }
  IOFileFilter suffixFilter=getFileSuffixFilter(langs);
  WildcardPattern[] exclusionPatterns=getExclusionPatterns(applyExclusionPatterns);
  for (  File dir : directories) {
    if (dir.exists()) {
      IOFileFilter exclusionFilter=new ExclusionFilter(dir,exclusionPatterns);
      IOFileFilter visibleFileFilter=HiddenFileFilter.VISIBLE;
      List<IOFileFilter> dirFilters=Lists.newArrayList(visibleFileFilter,suffixFilter,exclusionFilter);
      dirFilters.addAll(this.filters);
      List<File> files=(List<File>)FileUtils.listFiles(dir,new AndFileFilter(dirFilters),HiddenFileFilter.VISIBLE);
      for (      File file : files) {
        String relativePath=DefaultProjectFileSystem.getRelativePath(file,dir);
        result.add(new DefaultInputFile(dir,relativePath));
      }
    }
  }
  return result;
}
