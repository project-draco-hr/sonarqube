{
  ComponentMonitor componentMonitor=instanceComponentMonitor();
  ReflectionLifecycleStrategy lifecycleStrategy=new ReflectionLifecycleStrategy(componentMonitor,"start","stop","close"){
    @Override public boolean isLazy(    ComponentAdapter<?> adapter){
      return adapter.getComponentImplementation().getAnnotation(EagerStart.class) == null;
    }
  }
;
  return new DefaultPicoContainer(new OptInCaching(),lifecycleStrategy,parent.getPicoContainer(),componentMonitor);
}
