{
  if (reference == null) {
    return null;
  }
  if (StringUtils.isNotBlank(reference.getKey())) {
    return buckets.get(reference);
  }
  String relativePathFromSourceDir=null;
  boolean isTest=false;
  boolean isDir=false;
  if (reference instanceof File) {
    File referenceFile=(File)reference;
    isTest=Qualifiers.UNIT_TEST_FILE.equals(referenceFile.getQualifier());
    relativePathFromSourceDir=referenceFile.relativePathFromSourceDir();
  }
 else   if (reference instanceof Directory) {
    isDir=true;
    Directory referenceDir=(Directory)reference;
    relativePathFromSourceDir=referenceDir.relativePathFromSourceDir();
    if (Directory.ROOT.equals(relativePathFromSourceDir)) {
      relativePathFromSourceDir="";
    }
  }
  if (relativePathFromSourceDir != null) {
    List<java.io.File> dirs;
    if (isTest) {
      dirs=getProject().getFileSystem().getTestDirs();
    }
 else {
      dirs=getProject().getFileSystem().getSourceDirs();
    }
    for (    java.io.File src : dirs) {
      java.io.File abs=new java.io.File(src,relativePathFromSourceDir);
      Bucket b=getBucket(isDir ? Directory.fromIOFile(abs,getProject()) : File.fromIOFile(abs,getProject()));
      if (b != null) {
        return b;
      }
    }
  }
  return null;
}
