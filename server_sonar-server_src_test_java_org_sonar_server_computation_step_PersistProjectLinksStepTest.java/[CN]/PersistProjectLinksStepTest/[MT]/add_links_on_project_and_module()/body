{
  dbTester.prepareDbUnit(getClass(),"empty.xml");
  treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").addChildren(ReportComponent.builder(Component.Type.MODULE,2).setUuid("BCDE").build()).build());
  reportReader.putComponent(ScannerReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).addChildRef(2).addLink(ScannerReport.ComponentLink.newBuilder().setType(Constants.ComponentLinkType.HOME).setHref("http://www.sonarqube.org").build()).addLink(ScannerReport.ComponentLink.newBuilder().setType(Constants.ComponentLinkType.SCM).setHref("https://github.com/SonarSource/sonar").build()).addLink(ScannerReport.ComponentLink.newBuilder().setType(Constants.ComponentLinkType.SCM_DEV).setHref("scm:git:git@github.com:SonarSource/sonar.git/sonar").build()).addLink(ScannerReport.ComponentLink.newBuilder().setType(Constants.ComponentLinkType.ISSUE).setHref("http://jira.sonarsource.com/").build()).addLink(ScannerReport.ComponentLink.newBuilder().setType(Constants.ComponentLinkType.CI).setHref("http://bamboo.ci.codehaus.org/browse/SONAR").build()).build());
  reportReader.putComponent(ScannerReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).addLink(ScannerReport.ComponentLink.newBuilder().setType(Constants.ComponentLinkType.SCM).setHref("https://github.com/SonarSource/sonar/server").build()).build());
  step.execute();
  dbTester.assertDbUnit(getClass(),"add_links_on_project_and_module-result.xml","project_links");
}
