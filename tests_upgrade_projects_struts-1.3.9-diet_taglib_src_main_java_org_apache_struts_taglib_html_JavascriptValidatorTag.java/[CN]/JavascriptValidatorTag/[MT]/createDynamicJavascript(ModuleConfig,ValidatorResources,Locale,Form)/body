{
  StringBuffer results=new StringBuffer();
  MessageResources messages=TagUtils.getInstance().retrieveMessageResources(pageContext,bundle,true);
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  ServletContext application=pageContext.getServletContext();
  List actions=this.createActionList(resources,form);
  final String methods=this.createMethods(actions,this.stopOnError(config));
  String formName=form.getName();
  jsFormName=formName;
  if (jsFormName.charAt(0) == '/') {
    String mappingName=TagUtils.getInstance().getActionMappingName(jsFormName);
    ActionMapping mapping=(ActionMapping)config.findActionConfig(mappingName);
    if (mapping == null) {
      JspException e=new JspException(messages.getMessage("formTag.mapping",mappingName));
      pageContext.setAttribute(Globals.EXCEPTION_KEY,e,PageContext.REQUEST_SCOPE);
      throw e;
    }
    jsFormName=mapping.getAttribute();
  }
  results.append(this.getJavascriptBegin(methods));
  for (Iterator i=actions.iterator(); i.hasNext(); ) {
    ValidatorAction va=(ValidatorAction)i.next();
    int jscriptVar=0;
    String functionName=null;
    if ((va.getJsFunctionName() != null) && (va.getJsFunctionName().length() > 0)) {
      functionName=va.getJsFunctionName();
    }
 else {
      functionName=va.getName();
    }
    results.append("    function " + jsFormName + "_"+ functionName+ " () { \n");
    for (Iterator x=form.getFields().iterator(); x.hasNext(); ) {
      Field field=(Field)x.next();
      if (field.isIndexed() || (field.getPage() != page) || !field.isDependency(va.getName())) {
        continue;
      }
      String message=Resources.getMessage(application,request,messages,locale,va,field);
      message=(message != null) ? message : "";
      results.append("     this.a" + jscriptVar++ + " = new Array(\""+ field.getKey()+ "\", \""+ escapeQuotes(message)+ "\", ");
      results.append("new Function (\"varName\", \"");
      Map vars=field.getVars();
      Iterator varsIterator=vars.keySet().iterator();
      while (varsIterator.hasNext()) {
        String varName=(String)varsIterator.next();
        Var var=(Var)vars.get(varName);
        String varValue=Resources.getVarValue(var,application,request,false);
        String jsType=var.getJsType();
        if (varName.startsWith("field")) {
          continue;
        }
        String varValueEscaped=escapeJavascript(varValue);
        if (Var.JSTYPE_INT.equalsIgnoreCase(jsType)) {
          results.append("this." + varName + "="+ varValueEscaped+ "; ");
        }
 else         if (Var.JSTYPE_REGEXP.equalsIgnoreCase(jsType)) {
          results.append("this." + varName + "=/"+ varValueEscaped+ "/; ");
        }
 else         if (Var.JSTYPE_STRING.equalsIgnoreCase(jsType)) {
          results.append("this." + varName + "='"+ varValueEscaped+ "'; ");
        }
 else         if ("mask".equalsIgnoreCase(varName)) {
          results.append("this." + varName + "=/"+ varValueEscaped+ "/; ");
        }
 else {
          results.append("this." + varName + "='"+ varValueEscaped+ "'; ");
        }
      }
      results.append(" return this[varName];\"));\n");
    }
    results.append("    } \n\n");
  }
  return results.toString();
}
