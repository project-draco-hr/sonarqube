{
  Preconditions.checkNotNull(file);
  Preconditions.checkNotNull(lines);
  Preconditions.checkArgument(lines.size() == file.lines(),"Expected one blame result per line but provider returned " + lines.size() + " blame lines while file has "+ file.lines()+ " lines");
  PropertiesBuilder<Integer,String> authors=propertiesBuilder(CoreMetrics.SCM_AUTHORS_BY_LINE);
  PropertiesBuilder<Integer,String> dates=propertiesBuilder(CoreMetrics.SCM_LAST_COMMIT_DATETIMES_BY_LINE);
  PropertiesBuilder<Integer,String> revisions=propertiesBuilder(CoreMetrics.SCM_REVISIONS_BY_LINE);
  int lineNumber=1;
  for (  BlameLine line : lines) {
    authors.add(lineNumber,normalizeString(line.getAuthor()));
    Date date=line.getDate();
    dates.add(lineNumber,date != null ? DateUtils.formatDateTime(date) : "");
    revisions.add(lineNumber,line.getRevision());
    lineNumber++;
  }
  ScmSensor.saveMeasures(context,file,authors.buildData(),dates.buildData(),revisions.buildData());
}
