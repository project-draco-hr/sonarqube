{
  insertDebtCharacteristics(dbSession);
  ruleDao.insert(dbSession,RuleTesting.newDto(RULE_KEY).setDefaultSubCharacteristicId(hardReliabilityId).setDefaultRemediationFunction(DebtRemediationFunction.Type.LINEAR.name()).setDefaultRemediationCoefficient("1d").setDefaultRemediationOffset("5min").setSubCharacteristicId(softReliabilityId).setRemediationFunction(DebtRemediationFunction.Type.CONSTANT_ISSUE.name()).setRemediationCoefficient(null).setRemediationOffset("1min"));
  dbSession.commit();
  RuleUpdate update=RuleUpdate.createForPluginRule(RULE_KEY).setDebtSubCharacteristic(null);
  updater.update(update,UserSession.get());
  dbSession.clearCache();
  RuleDto rule=ruleDao.getNullableByKey(dbSession,RULE_KEY);
  assertThat(rule.getSubCharacteristicId()).isEqualTo(-1);
  assertThat(rule.getRemediationFunction()).isNull();
  assertThat(rule.getRemediationCoefficient()).isNull();
  assertThat(rule.getRemediationOffset()).isNull();
  assertThat(rule.getDefaultSubCharacteristicId()).isNotNull();
  assertThat(rule.getDefaultRemediationFunction()).isNotNull();
  assertThat(rule.getDefaultRemediationCoefficient()).isNotNull();
  assertThat(rule.getDefaultRemediationOffset()).isNotNull();
  Rule indexedRule=tester.get(RuleIndex.class).getByKey(RULE_KEY);
  assertThat(indexedRule.debtCharacteristicKey()).isNull();
  assertThat(indexedRule.debtSubCharacteristicKey()).isNull();
  assertThat(indexedRule.debtOverloaded()).isTrue();
}
