{
  issueBuilder.setKey(issue.key());
  issueBuilder.setModuleKey(keysByUUid.get(issue.moduleUuid()));
  String path=issue.filePath();
  if (path != null) {
    issueBuilder.setPath(path);
  }
  issueBuilder.setRuleRepository(issue.ruleKey().repository());
  issueBuilder.setRuleKey(issue.ruleKey().rule());
  String checksum=issue.checksum();
  if (checksum != null) {
    issueBuilder.setChecksum(checksum);
  }
  String assigneeLogin=issue.assignee();
  if (assigneeLogin != null) {
    issueBuilder.setAssigneeLogin(assigneeLogin);
  }
  Integer line=issue.line();
  if (line != null) {
    issueBuilder.setLine(line);
  }
  String message=issue.message();
  if (message != null) {
    issueBuilder.setMsg(message);
  }
  issueBuilder.setSeverity(org.sonar.batch.protocol.Constants.Severity.valueOf(issue.severity()));
  issueBuilder.setManualSeverity(issue.isManualSeverity());
  issueBuilder.setStatus(issue.status());
  String resolution=issue.resolution();
  if (resolution != null) {
    issueBuilder.setResolution(resolution);
  }
  issueBuilder.setCreationDate(issue.creationDate().getTime());
  try {
    issueBuilder.build().writeDelimitedTo(out);
  }
 catch (  IOException e) {
    throw new IllegalStateException("Unable to serialize issue",e);
  }
  issueBuilder.clear();
}
