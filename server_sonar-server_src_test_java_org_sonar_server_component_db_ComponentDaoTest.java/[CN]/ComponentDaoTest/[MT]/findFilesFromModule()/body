{
  setupData("multi-modules","files_hashes");
  List<FilePathWithHashDto> files=dao.findFilesFromModule(session,"org.struts:struts");
  assertThat(files).extracting("uuid").containsOnly("HIJK");
  assertThat(files).extracting("moduleUuid").containsOnly("FGHI");
  assertThat(files).extracting("srcHash").containsOnly("123456");
  assertThat(files).extracting("path").containsOnly("src/org/struts/RequestContext.java");
  files=dao.findFilesFromModule(session,"org.struts:struts-core");
  assertThat(files).extracting("uuid").containsOnly("HIJK");
  assertThat(files).extracting("moduleUuid").containsOnly("FGHI");
  assertThat(files).extracting("srcHash").containsOnly("123456");
  assertThat(files).extracting("path").containsOnly("src/org/struts/RequestContext.java");
  files=dao.findFilesFromModule(session,"org.struts:struts-data");
  assertThat(files).extracting("uuid").containsOnly("HIJK");
  assertThat(files).extracting("moduleUuid").containsOnly("FGHI");
  assertThat(files).extracting("srcHash").containsOnly("123456");
  assertThat(files).extracting("path").containsOnly("src/org/struts/RequestContext.java");
  assertThat(dao.findFilesFromModule(session,"unknown")).isEmpty();
}
