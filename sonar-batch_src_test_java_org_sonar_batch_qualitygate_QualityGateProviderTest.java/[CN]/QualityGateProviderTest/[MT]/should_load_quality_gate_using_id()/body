{
  long qGateId=12345L;
  String qGateName="Sonar way";
  when(settings.getString("sonar.qualitygate")).thenReturn(Long.toString(qGateId));
  when(client.request("/api/qualitygates/show?id=12345")).thenReturn("{'id':12345,'name':'Sonar way','conditions':[" + "{'id':1,'metric':'metric1','op':'EQ','warning':'POLOP'}," + "{'id':2,'metric':'metric2','op':'NE','error':'PALAP','period':3}"+ "]}");
  QualityGate qGate=new QualityGateProvider().init(settings,client,metricFinder,logger);
  assertThat(qGate.name()).isEqualTo(qGateName);
  assertThat(qGate.conditions()).hasSize(2);
  Iterator<ResolvedCondition> conditions=qGate.conditions().iterator();
  ResolvedCondition cond1=conditions.next();
  assertThat(cond1.warningThreshold()).isEqualTo("POLOP");
  assertThat(cond1.errorThreshold()).isNull();
  assertThat(cond1.period()).isNull();
  ResolvedCondition cond2=conditions.next();
  assertThat(cond2.warningThreshold()).isNull();
  assertThat(cond2.errorThreshold()).isEqualTo("PALAP");
  assertThat(cond2.period()).isEqualTo(3);
  verify(logger).info("Loaded quality gate '{}'",qGateName);
  verify(metricFinder).findByKey("metric1");
  verify(metricFinder).findByKey("metric2");
}
