{
  String effectiveKey=generateEffectiveKey(bucket);
  ResourceModel model;
  try {
    model=session.getSingleResult(ResourceModel.class,"key",effectiveKey);
  }
 catch (  NonUniqueResultException e) {
    throw new SonarException("The resource '" + effectiveKey + "' is duplicated in the Sonar DB.");
  }
  RESOURCE resource=bucket.getResource();
  if (model == null) {
    model=ResourceModel.build(resource);
    model.setKey(effectiveKey);
  }
 else {
    model.setEnabled(true);
    if (StringUtils.isNotBlank(resource.getName())) {
      model.setName(resource.getName());
    }
    if (StringUtils.isNotBlank(resource.getLongName())) {
      model.setLongName(resource.getLongName());
    }
    if (StringUtils.isNotBlank(resource.getDescription())) {
      model.setDescription(resource.getDescription());
    }
    if (!ResourceUtils.isLibrary(resource)) {
      model.setScope(resource.getScope());
      model.setQualifier(resource.getQualifier());
    }
    if (resource.getLanguage() != null) {
      model.setLanguageKey(resource.getLanguage().getKey());
    }
  }
  prepareResourceModel(model,bucket);
  model=session.save(model);
  resource.setId(model.getId());
  resource.setEffectiveKey(model.getKey());
  Snapshot snapshot=createSnapshot(bucket,model);
  if (snapshot.getId() == null) {
    session.save(snapshot);
  }
  bucket.setSnapshot(snapshot);
}
