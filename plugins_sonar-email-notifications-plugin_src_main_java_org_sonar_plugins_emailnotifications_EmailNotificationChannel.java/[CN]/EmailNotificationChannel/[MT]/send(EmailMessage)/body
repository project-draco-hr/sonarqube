{
  ClassLoader classloader=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
  try {
    LOG.debug("Sending email: {}",emailMessage);
    String host=null;
    try {
      host=new URL(configuration.getServerBaseURL()).getHost();
    }
 catch (    MalformedURLException e) {
    }
    SimpleEmail email=new SimpleEmail();
    if (StringUtils.isNotBlank(host)) {
      if (StringUtils.isNotEmpty(emailMessage.getMessageId())) {
        String messageId="<" + emailMessage.getMessageId() + "@"+ host+ ">";
        email.addHeader(IN_REPLY_TO_HEADER,messageId);
        email.addHeader(REFERENCES_HEADER,messageId);
      }
      email.addHeader(LIST_ID_HEADER,"Sonar <sonar." + host + ">");
      email.addHeader(LIST_ARCHIVE_HEADER,configuration.getServerBaseURL());
    }
    email.setCharset("UTF-8");
    String from=StringUtils.isBlank(emailMessage.getFrom()) ? FROM_NAME_DEFAULT : emailMessage.getFrom() + " (Sonar)";
    email.setFrom(configuration.getFrom(),from);
    email.addTo(emailMessage.getTo()," ");
    String subject=StringUtils.defaultIfBlank(StringUtils.trimToEmpty(configuration.getPrefix()) + " ","") + StringUtils.defaultString(emailMessage.getSubject(),SUBJECT_DEFAULT);
    email.setSubject(subject);
    email.setMsg(emailMessage.getMessage());
    email.setHostName(configuration.getSmtpHost());
    if (StringUtils.equalsIgnoreCase(configuration.getSecureConnection(),"SSL")) {
      email.setSSL(true);
      email.setSslSmtpPort(String.valueOf(configuration.getSmtpPort()));
      email.setSmtpPort(configuration.getSmtpPort());
    }
 else     if (StringUtils.isBlank(configuration.getSecureConnection())) {
      email.setSmtpPort(configuration.getSmtpPort());
    }
 else {
      throw new SonarException("Unknown type of SMTP secure connection: " + configuration.getSecureConnection());
    }
    if (StringUtils.isNotBlank(configuration.getSmtpUsername()) || StringUtils.isNotBlank(configuration.getSmtpPassword())) {
      email.setAuthentication(configuration.getSmtpUsername(),configuration.getSmtpPassword());
    }
    email.setSocketConnectionTimeout(SOCKET_TIMEOUT);
    email.setSocketTimeout(SOCKET_TIMEOUT);
    email.send();
  }
  finally {
    Thread.currentThread().setContextClassLoader(classloader);
  }
}
