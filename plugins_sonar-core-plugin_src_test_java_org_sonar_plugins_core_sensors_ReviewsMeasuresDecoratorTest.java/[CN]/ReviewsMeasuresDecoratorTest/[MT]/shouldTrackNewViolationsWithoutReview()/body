{
  Resource<?> resource=new File("foo").setId(1);
  Violation v1=Violation.create((Rule)null,resource).setPermanentId(1);
  Violation v2=Violation.create((Rule)null,resource).setPermanentId(2).setCreatedAt(rightNow);
  Violation v3=Violation.create((Rule)null,resource).setPermanentId(3).setCreatedAt(fiveDaysAgo);
  Violation v4=Violation.create((Rule)null,resource).setPermanentId(4).setCreatedAt(fiveDaysAgo);
  Violation v5=Violation.create((Rule)null,resource).setPermanentId(5).setCreatedAt(fiveDaysAgo);
  Violation v6=Violation.create((Rule)null,resource).setPermanentId(6).setCreatedAt(tenDaysAgo);
  when(context.getViolations()).thenReturn(Arrays.asList(v1,v2,v3,v4,v5,v6));
  Map<Integer,ReviewDto> openReviewsByViolationPermanentIds=Maps.newHashMap();
  openReviewsByViolationPermanentIds.put(1,new ReviewDto());
  openReviewsByViolationPermanentIds.put(3,new ReviewDto());
  decorator.trackNewViolationsWithoutReview(context,openReviewsByViolationPermanentIds);
  verify(context).saveMeasure(argThat(new IsVariationMeasure(CoreMetrics.NEW_UNREVIEWED_VIOLATIONS,1.0,3.0)));
}
