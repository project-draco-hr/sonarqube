{
  orchestrator.getServer().restoreProfile(FileLocation.ofClasspath("/qualityModel/with-many-rules.xml"));
  orchestrator.getServer().associateProjectToQualityProfile(PROJECT,"xoo","with-many-rules");
  orchestrator.executeBuild(SonarScanner.create(projectDir("shared/xoo-multi-modules-sample")));
  assertThat(getMeasure(PROJECT,BUGS_METRIC).getIntValue()).isEqualTo(61);
  assertThat(getMeasure(PROJECT,RELIABILITY_REMEDIATION_EFFORT_METRIC).getIntValue()).isEqualTo(305);
  assertThat(getMeasure(PROJECT,RELIABILITY_RATING_METRIC).getData()).isEqualTo("D");
  assertThat(getMeasure(MODULE,BUGS_METRIC).getIntValue()).isEqualTo(37);
  assertThat(getMeasure(MODULE,RELIABILITY_REMEDIATION_EFFORT_METRIC).getIntValue()).isEqualTo(185);
  assertThat(getMeasure(MODULE,RELIABILITY_RATING_METRIC).getData()).isEqualTo("D");
  assertThat(getMeasure(SUB_MODULE,BUGS_METRIC).getIntValue()).isEqualTo(16);
  assertThat(getMeasure(SUB_MODULE,RELIABILITY_REMEDIATION_EFFORT_METRIC).getIntValue()).isEqualTo(80);
  assertThat(getMeasure(SUB_MODULE,RELIABILITY_RATING_METRIC).getData()).isEqualTo("D");
  assertThat(getMeasure(DIRECTORY,BUGS_METRIC).getIntValue()).isEqualTo(16);
  assertThat(getMeasure(DIRECTORY,RELIABILITY_REMEDIATION_EFFORT_METRIC).getIntValue()).isEqualTo(80);
  assertThat(getMeasure(DIRECTORY,RELIABILITY_RATING_METRIC).getData()).isEqualTo("D");
  assertThat(getMeasure(FILE,BUGS_METRIC).getIntValue()).isEqualTo(16);
  assertThat(getMeasure(FILE,RELIABILITY_REMEDIATION_EFFORT_METRIC).getIntValue()).isEqualTo(80);
  assertThat(getMeasure(FILE,RELIABILITY_RATING_METRIC).getData()).isEqualTo("D");
}
