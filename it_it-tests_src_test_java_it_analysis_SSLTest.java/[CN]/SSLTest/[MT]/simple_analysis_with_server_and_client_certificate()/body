{
  startSSLTransparentReverseProxy(true);
  SonarScanner sonarScanner=SonarScanner.create(ItUtils.projectDir("shared/xoo-sample")).setScannerVersion("2.7").setProperty("sonar.host.url","https://localhost:" + httpsPort);
  BuildResult buildResult=orchestrator.executeBuildQuietly(sonarScanner);
  assertThat(buildResult.getLastStatus()).isNotEqualTo(0);
  assertThat(buildResult.getLogs()).contains("javax.net.ssl.SSLHandshakeException");
  Path clientTruststore=Paths.get(SSLTest.class.getResource(CLIENT_TRUSTSTORE).toURI()).toAbsolutePath();
  String truststorePassword=CLIENT_TRUSTSTORE_PWD;
  Path clientKeystore=Paths.get(SSLTest.class.getResource(CLIENT_KEYSTORE).toURI()).toAbsolutePath();
  String keystorePassword=CLIENT_KEYSTORE_PWD;
  buildResult=orchestrator.executeBuild(sonarScanner.setEnvironmentVariable("SONAR_SCANNER_OPTS","-Djavax.net.ssl.trustStore=" + clientTruststore.toString() + " -Djavax.net.ssl.trustStorePassword="+ truststorePassword+ " -Djavax.net.ssl.keyStore="+ clientKeystore.toString()+ " -Djavax.net.ssl.keyStorePassword="+ keystorePassword));
}
