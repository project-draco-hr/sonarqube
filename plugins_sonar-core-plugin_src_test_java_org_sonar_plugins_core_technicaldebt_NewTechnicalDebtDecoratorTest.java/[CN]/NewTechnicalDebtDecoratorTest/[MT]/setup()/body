{
  when(technicalDebtConverter.toDays(oneDaysDebt)).thenReturn(1d);
  when(technicalDebtConverter.toDays(twoDaysDebt)).thenReturn(2d);
  when(technicalDebtConverter.toDays(fiveDaysDebt)).thenReturn(5d);
  ResourcePerspectives perspectives=mock(ResourcePerspectives.class);
  when(perspectives.as(Issuable.class,resource)).thenReturn(issuable);
  rightNow=new Date();
  elevenDaysAgo=org.apache.commons.lang.time.DateUtils.addDays(rightNow,-11);
  tenDaysAgo=org.apache.commons.lang.time.DateUtils.addDays(rightNow,-10);
  nineDaysAgo=org.apache.commons.lang.time.DateUtils.addDays(rightNow,-9);
  fiveDaysAgo=org.apache.commons.lang.time.DateUtils.addDays(rightNow,-5);
  fourDaysAgo=org.apache.commons.lang.time.DateUtils.addDays(rightNow,-4);
  when(timeMachineConfiguration.periods()).thenReturn(newArrayList(new Period(1,fiveDaysAgo),new Period(2,tenDaysAgo)));
  decorator=new NewTechnicalDebtDecorator(perspectives,timeMachineConfiguration,technicalDebtConverter);
}
