{
  org.sonarqube.ws.Issues.Search result=new org.sonarqube.ws.Issues.Search(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.total_=total_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.p_=p_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.ps_=ps_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  if (pagingBuilder_ == null) {
    result.paging_=paging_;
  }
 else {
    result.paging_=pagingBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  result.debtTotal_=debtTotal_;
  if (issuesBuilder_ == null) {
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      issues_=java.util.Collections.unmodifiableList(issues_);
      bitField0_=(bitField0_ & ~0x00000020);
    }
    result.issues_=issues_;
  }
 else {
    result.issues_=issuesBuilder_.build();
  }
  if (componentsBuilder_ == null) {
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      components_=java.util.Collections.unmodifiableList(components_);
      bitField0_=(bitField0_ & ~0x00000040);
    }
    result.components_=components_;
  }
 else {
    result.components_=componentsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000020;
  }
  result.rulesPresentIfEmpty_=rulesPresentIfEmpty_;
  if (rulesBuilder_ == null) {
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      rules_=java.util.Collections.unmodifiableList(rules_);
      bitField0_=(bitField0_ & ~0x00000100);
    }
    result.rules_=rules_;
  }
 else {
    result.rules_=rulesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
    to_bitField0_|=0x00000040;
  }
  result.usersPresentIfEmpty_=usersPresentIfEmpty_;
  if (usersBuilder_ == null) {
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      users_=java.util.Collections.unmodifiableList(users_);
      bitField0_=(bitField0_ & ~0x00000400);
    }
    result.users_=users_;
  }
 else {
    result.users_=usersBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
    to_bitField0_|=0x00000080;
  }
  result.actionPlansPresentIfEmpty_=actionPlansPresentIfEmpty_;
  if (actionPlansBuilder_ == null) {
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      actionPlans_=java.util.Collections.unmodifiableList(actionPlans_);
      bitField0_=(bitField0_ & ~0x00001000);
    }
    result.actionPlans_=actionPlans_;
  }
 else {
    result.actionPlans_=actionPlansBuilder_.build();
  }
  if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
    to_bitField0_|=0x00000100;
  }
  result.languagesPresentIfEmpty_=languagesPresentIfEmpty_;
  if (languagesBuilder_ == null) {
    if (((bitField0_ & 0x00004000) == 0x00004000)) {
      languages_=java.util.Collections.unmodifiableList(languages_);
      bitField0_=(bitField0_ & ~0x00004000);
    }
    result.languages_=languages_;
  }
 else {
    result.languages_=languagesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
    to_bitField0_|=0x00000200;
  }
  result.facetsPresentIfEmpty_=facetsPresentIfEmpty_;
  if (facetsBuilder_ == null) {
    if (((bitField0_ & 0x00010000) == 0x00010000)) {
      facets_=java.util.Collections.unmodifiableList(facets_);
      bitField0_=(bitField0_ & ~0x00010000);
    }
    result.facets_=facets_;
  }
 else {
    result.facets_=facetsBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
