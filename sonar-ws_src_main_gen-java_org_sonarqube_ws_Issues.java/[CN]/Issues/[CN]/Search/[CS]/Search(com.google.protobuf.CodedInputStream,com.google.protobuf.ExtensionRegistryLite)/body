{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    total_=input.readInt64();
    break;
  }
case 16:
{
  bitField0_|=0x00000002;
  p_=input.readInt64();
  break;
}
case 24:
{
bitField0_|=0x00000004;
ps_=input.readInt32();
break;
}
case 34:
{
org.sonarqube.ws.Common.Paging.Builder subBuilder=null;
if (((bitField0_ & 0x00000008) == 0x00000008)) {
subBuilder=paging_.toBuilder();
}
paging_=input.readMessage(org.sonarqube.ws.Common.Paging.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(paging_);
paging_=subBuilder.buildPartial();
}
bitField0_|=0x00000008;
break;
}
case 40:
{
bitField0_|=0x00000010;
debtTotal_=input.readInt64();
break;
}
case 50:
{
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
issues_=new java.util.ArrayList<org.sonarqube.ws.Issues.Issue>();
mutable_bitField0_|=0x00000020;
}
issues_.add(input.readMessage(org.sonarqube.ws.Issues.Issue.PARSER,extensionRegistry));
break;
}
case 64:
{
bitField0_|=0x00000020;
projectsPresentIfEmpty_=input.readBool();
break;
}
case 74:
{
if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
projects_=new java.util.ArrayList<org.sonarqube.ws.Common.Component>();
mutable_bitField0_|=0x00000080;
}
projects_.add(input.readMessage(org.sonarqube.ws.Common.Component.PARSER,extensionRegistry));
break;
}
case 80:
{
bitField0_|=0x00000040;
componentsPresentIfEmpty_=input.readBool();
break;
}
case 90:
{
if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
components_=new java.util.ArrayList<org.sonarqube.ws.Common.Component>();
mutable_bitField0_|=0x00000200;
}
components_.add(input.readMessage(org.sonarqube.ws.Common.Component.PARSER,extensionRegistry));
break;
}
case 96:
{
bitField0_|=0x00000080;
rulesPresentIfEmpty_=input.readBool();
break;
}
case 106:
{
if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
rules_=new java.util.ArrayList<org.sonarqube.ws.Common.Rule>();
mutable_bitField0_|=0x00000800;
}
rules_.add(input.readMessage(org.sonarqube.ws.Common.Rule.PARSER,extensionRegistry));
break;
}
case 112:
{
bitField0_|=0x00000100;
usersPresentIfEmpty_=input.readBool();
break;
}
case 122:
{
if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
users_=new java.util.ArrayList<org.sonarqube.ws.Common.User>();
mutable_bitField0_|=0x00002000;
}
users_.add(input.readMessage(org.sonarqube.ws.Common.User.PARSER,extensionRegistry));
break;
}
case 128:
{
bitField0_|=0x00000200;
actionPlansPresentIfEmpty_=input.readBool();
break;
}
case 138:
{
if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
actionPlans_=new java.util.ArrayList<org.sonarqube.ws.Issues.ActionPlan>();
mutable_bitField0_|=0x00008000;
}
actionPlans_.add(input.readMessage(org.sonarqube.ws.Issues.ActionPlan.PARSER,extensionRegistry));
break;
}
case 144:
{
bitField0_|=0x00000400;
languagesPresentIfEmpty_=input.readBool();
break;
}
case 154:
{
if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
languages_=new java.util.ArrayList<org.sonarqube.ws.Issues.Language>();
mutable_bitField0_|=0x00020000;
}
languages_.add(input.readMessage(org.sonarqube.ws.Issues.Language.PARSER,extensionRegistry));
break;
}
case 162:
{
if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
facets_=new java.util.ArrayList<org.sonarqube.ws.Common.Facet>();
mutable_bitField0_|=0x00040000;
}
facets_.add(input.readMessage(org.sonarqube.ws.Common.Facet.PARSER,extensionRegistry));
break;
}
case 168:
{
bitField0_|=0x00000800;
facetsPresentIfEmpty_=input.readBool();
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
issues_=java.util.Collections.unmodifiableList(issues_);
}
if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
projects_=java.util.Collections.unmodifiableList(projects_);
}
if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
components_=java.util.Collections.unmodifiableList(components_);
}
if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
rules_=java.util.Collections.unmodifiableList(rules_);
}
if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
users_=java.util.Collections.unmodifiableList(users_);
}
if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
actionPlans_=java.util.Collections.unmodifiableList(actionPlans_);
}
if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
languages_=java.util.Collections.unmodifiableList(languages_);
}
if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
facets_=java.util.Collections.unmodifiableList(facets_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
