{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeInt64(1,total_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeInt64(2,p_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeInt32(3,ps_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeMessage(4,paging_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeInt64(5,debtTotal_);
  }
  for (int i=0; i < issues_.size(); i++) {
    output.writeMessage(6,issues_.get(i));
  }
  for (int i=0; i < components_.size(); i++) {
    output.writeMessage(7,components_.get(i));
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeBool(8,rulesPresentIfEmpty_);
  }
  for (int i=0; i < rules_.size(); i++) {
    output.writeMessage(9,rules_.get(i));
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeBool(10,usersPresentIfEmpty_);
  }
  for (int i=0; i < users_.size(); i++) {
    output.writeMessage(11,users_.get(i));
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeBool(12,actionPlansPresentIfEmpty_);
  }
  for (int i=0; i < actionPlans_.size(); i++) {
    output.writeMessage(13,actionPlans_.get(i));
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeBool(14,languagesPresentIfEmpty_);
  }
  for (int i=0; i < languages_.size(); i++) {
    output.writeMessage(15,languages_.get(i));
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeBool(16,facetsPresentIfEmpty_);
  }
  for (int i=0; i < facets_.size(); i++) {
    output.writeMessage(17,facets_.get(i));
  }
  getUnknownFields().writeTo(output);
}
