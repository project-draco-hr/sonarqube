{
  if (other == org.sonarqube.ws.Issues.Issue.getDefaultInstance())   return this;
  if (other.hasKey()) {
    bitField0_|=0x00000001;
    key_=other.key_;
    onChanged();
  }
  if (other.hasRule()) {
    bitField0_|=0x00000002;
    rule_=other.rule_;
    onChanged();
  }
  if (other.hasSeverity()) {
    setSeverity(other.getSeverity());
  }
  if (other.hasComponent()) {
    bitField0_|=0x00000008;
    component_=other.component_;
    onChanged();
  }
  if (other.hasComponentId()) {
    setComponentId(other.getComponentId());
  }
  if (other.hasProject()) {
    bitField0_|=0x00000020;
    project_=other.project_;
    onChanged();
  }
  if (other.hasSubProject()) {
    bitField0_|=0x00000040;
    subProject_=other.subProject_;
    onChanged();
  }
  if (other.hasLine()) {
    setLine(other.getLine());
  }
  if (other.hasTextRange()) {
    mergeTextRange(other.getTextRange());
  }
  if (flowsBuilder_ == null) {
    if (!other.flows_.isEmpty()) {
      if (flows_.isEmpty()) {
        flows_=other.flows_;
        bitField0_=(bitField0_ & ~0x00000200);
      }
 else {
        ensureFlowsIsMutable();
        flows_.addAll(other.flows_);
      }
      onChanged();
    }
  }
 else {
    if (!other.flows_.isEmpty()) {
      if (flowsBuilder_.isEmpty()) {
        flowsBuilder_.dispose();
        flowsBuilder_=null;
        flows_=other.flows_;
        bitField0_=(bitField0_ & ~0x00000200);
        flowsBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getFlowsFieldBuilder() : null;
      }
 else {
        flowsBuilder_.addAllMessages(other.flows_);
      }
    }
  }
  if (other.hasResolution()) {
    bitField0_|=0x00000400;
    resolution_=other.resolution_;
    onChanged();
  }
  if (other.hasStatus()) {
    bitField0_|=0x00000800;
    status_=other.status_;
    onChanged();
  }
  if (other.hasMessage()) {
    bitField0_|=0x00001000;
    message_=other.message_;
    onChanged();
  }
  if (other.hasDebt()) {
    bitField0_|=0x00002000;
    debt_=other.debt_;
    onChanged();
  }
  if (other.hasAssignee()) {
    bitField0_|=0x00004000;
    assignee_=other.assignee_;
    onChanged();
  }
  if (other.hasReporter()) {
    bitField0_|=0x00008000;
    reporter_=other.reporter_;
    onChanged();
  }
  if (other.hasAuthor()) {
    bitField0_|=0x00010000;
    author_=other.author_;
    onChanged();
  }
  if (other.hasActionPlan()) {
    bitField0_|=0x00020000;
    actionPlan_=other.actionPlan_;
    onChanged();
  }
  if (!other.tags_.isEmpty()) {
    if (tags_.isEmpty()) {
      tags_=other.tags_;
      bitField0_=(bitField0_ & ~0x00040000);
    }
 else {
      ensureTagsIsMutable();
      tags_.addAll(other.tags_);
    }
    onChanged();
  }
  if (other.hasTransitions()) {
    mergeTransitions(other.getTransitions());
  }
  if (other.hasActions()) {
    mergeActions(other.getActions());
  }
  if (other.hasComments()) {
    mergeComments(other.getComments());
  }
  if (other.hasCreationDate()) {
    bitField0_|=0x00400000;
    creationDate_=other.creationDate_;
    onChanged();
  }
  if (other.hasUpdateDate()) {
    bitField0_|=0x00800000;
    updateDate_=other.updateDate_;
    onChanged();
  }
  if (other.hasFUpdateAge()) {
    bitField0_|=0x01000000;
    fUpdateAge_=other.fUpdateAge_;
    onChanged();
  }
  if (other.hasCloseDate()) {
    bitField0_|=0x02000000;
    closeDate_=other.closeDate_;
    onChanged();
  }
  this.mergeUnknownFields(other.unknownFields);
  onChanged();
  return this;
}
