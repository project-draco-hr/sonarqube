{
  org.sonarqube.ws.Issues.Issue result=new org.sonarqube.ws.Issues.Issue(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.key_=key_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.rule_=rule_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.severity_=severity_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.component_=component_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  result.componentId_=componentId_;
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000020;
  }
  result.project_=project_;
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000040;
  }
  result.subProject_=subProject_;
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000080;
  }
  result.line_=line_;
  if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
    to_bitField0_|=0x00000100;
  }
  if (textRangeBuilder_ == null) {
    result.textRange_=textRange_;
  }
 else {
    result.textRange_=textRangeBuilder_.build();
  }
  if (flowsBuilder_ == null) {
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      flows_=java.util.Collections.unmodifiableList(flows_);
      bitField0_=(bitField0_ & ~0x00000200);
    }
    result.flows_=flows_;
  }
 else {
    result.flows_=flowsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
    to_bitField0_|=0x00000200;
  }
  result.resolution_=resolution_;
  if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
    to_bitField0_|=0x00000400;
  }
  result.status_=status_;
  if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
    to_bitField0_|=0x00000800;
  }
  result.message_=message_;
  if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
    to_bitField0_|=0x00001000;
  }
  result.debt_=debt_;
  if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
    to_bitField0_|=0x00002000;
  }
  result.assignee_=assignee_;
  if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
    to_bitField0_|=0x00004000;
  }
  result.reporter_=reporter_;
  if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
    to_bitField0_|=0x00008000;
  }
  result.author_=author_;
  if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
    to_bitField0_|=0x00010000;
  }
  result.actionPlan_=actionPlan_;
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    tags_=tags_.getUnmodifiableView();
    bitField0_=(bitField0_ & ~0x00040000);
  }
  result.tags_=tags_;
  if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
    to_bitField0_|=0x00020000;
  }
  if (transitionsBuilder_ == null) {
    result.transitions_=transitions_;
  }
 else {
    result.transitions_=transitionsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
    to_bitField0_|=0x00040000;
  }
  if (actionsBuilder_ == null) {
    result.actions_=actions_;
  }
 else {
    result.actions_=actionsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
    to_bitField0_|=0x00080000;
  }
  if (commentsBuilder_ == null) {
    result.comments_=comments_;
  }
 else {
    result.comments_=commentsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
    to_bitField0_|=0x00100000;
  }
  result.creationDate_=creationDate_;
  if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
    to_bitField0_|=0x00200000;
  }
  result.updateDate_=updateDate_;
  if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
    to_bitField0_|=0x00400000;
  }
  result.fUpdateAge_=fUpdateAge_;
  if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
    to_bitField0_|=0x00800000;
  }
  result.closeDate_=closeDate_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
