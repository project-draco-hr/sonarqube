{
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeBytes(1,getKeyBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeBytes(2,getRuleBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeEnum(3,severity_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeBytes(4,getComponentBytes());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeInt64(5,componentId_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeBytes(6,getProjectBytes());
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeBytes(7,getSubProjectBytes());
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeInt32(8,line_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeMessage(9,getTextRange());
  }
  for (int i=0; i < flows_.size(); i++) {
    output.writeMessage(10,flows_.get(i));
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeBytes(11,getResolutionBytes());
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeBytes(12,getStatusBytes());
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeBytes(13,getMessageBytes());
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeBytes(14,getDebtBytes());
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeBytes(15,getAssigneeBytes());
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeBytes(16,getReporterBytes());
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeBytes(17,getAuthorBytes());
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    output.writeBytes(18,getActionPlanBytes());
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    output.writeBool(19,tagsPresentIfEmpty_);
  }
  for (int i=0; i < tags_.size(); i++) {
    output.writeBytes(20,tags_.getByteString(i));
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    output.writeBool(21,transitionsPresentIfEmpty_);
  }
  for (int i=0; i < transitions_.size(); i++) {
    output.writeBytes(22,transitions_.getByteString(i));
  }
  if (((bitField0_ & 0x00080000) == 0x00080000)) {
    output.writeBool(23,actionsPresentIfEmpty_);
  }
  for (int i=0; i < actions_.size(); i++) {
    output.writeBytes(24,actions_.getByteString(i));
  }
  if (((bitField0_ & 0x00100000) == 0x00100000)) {
    output.writeBool(25,commentsPresentIfEmpty_);
  }
  for (int i=0; i < comments_.size(); i++) {
    output.writeMessage(26,comments_.get(i));
  }
  if (((bitField0_ & 0x00200000) == 0x00200000)) {
    output.writeBytes(27,getCreationDateBytes());
  }
  if (((bitField0_ & 0x00400000) == 0x00400000)) {
    output.writeBytes(28,getUpdateDateBytes());
  }
  if (((bitField0_ & 0x00800000) == 0x00800000)) {
    output.writeBytes(29,getFUpdateAgeBytes());
  }
  if (((bitField0_ & 0x01000000) == 0x01000000)) {
    output.writeBytes(30,getCloseDateBytes());
  }
  unknownFields.writeTo(output);
}
