{
  String actionPlanKey=issue.actionPlanKey();
  ActionPlan actionPlan=actionPlanKey == null ? null : actionPlanService.findByKey(actionPlanKey,userSession);
  Duration debt=issue.debt();
  Rule rule=ruleService.getNonNullByKey(issue.ruleKey());
  String actionPlanName=actionPlan != null ? actionPlan.name() : null;
  String debtValue=debt != null ? durations.encode(debt) : null;
  Date updateDate=issue.updateDate();
  Date closeDate=issue.closeDate();
  json.prop("key",issue.key()).prop("rule",issue.ruleKey().toString()).prop("ruleName",rule.name()).prop("line",issue.line()).prop("message",issue.message()).prop("resolution",issue.resolution()).prop("status",issue.status()).prop("severity",issue.severity()).prop("author",issue.authorLogin()).prop("actionPlan",actionPlanKey).prop("actionPlanName",actionPlanName).prop("debt",debtValue).prop("creationDate",DateUtils.formatDateTime(issue.creationDate())).prop("fCreationDate",formatDate(issue.creationDate())).prop("updateDate",DateUtils.formatDateTimeNullSafe(updateDate)).prop("fUpdateDate",formatDate(updateDate)).prop("fUpdateAge",formatAgeDate(updateDate)).prop("closeDate",DateUtils.formatDateTimeNullSafe(closeDate)).prop("fCloseDate",formatDate(issue.closeDate()));
  addComponents(session,issue,json);
  addUserWithLabel(issue.assignee(),"assignee",json);
  addUserWithLabel(issue.reporter(),"reporter",json);
  addCharacteristics(rule,json);
}
