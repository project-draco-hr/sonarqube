{
  if (component.getKey() == null) {
    return null;
  }
  Map<Class<Perspective>,Perspective> perspectives=components.get(component);
  if (perspectives == null) {
    perspectives=Maps.newHashMap();
    components.put(component,perspectives);
  }
  P perspective=(P)perspectives.get(toClass);
  if (perspective == null) {
    ComponentWrapper componentWrapper=graph.wrap(component,ComponentWrapper.class);
    PerspectiveBuilder<P> perspectiveBuilder=builderFor(toClass);
    perspective=perspectiveBuilder.load(componentWrapper);
    if (perspective == null) {
      perspective=perspectiveBuilder.create(componentWrapper);
    }
    perspectives.put((Class)toClass,perspective);
  }
  return perspective;
}
