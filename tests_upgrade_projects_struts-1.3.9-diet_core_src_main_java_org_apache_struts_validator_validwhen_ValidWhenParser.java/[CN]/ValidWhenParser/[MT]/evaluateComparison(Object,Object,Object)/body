{
  boolean intCompare=true;
  if ((v1 == null) || (v2 == null)) {
    if (String.class.isInstance(v1)) {
      if (((String)v1).length() == 0) {
        v1=null;
      }
    }
    if (String.class.isInstance(v2)) {
      if (((String)v2).length() == 0) {
        v2=null;
      }
    }
switch (((Integer)compare).intValue()) {
case LESS_EQUAL:
case GREATER_THAN:
case LESS_THAN:
case GREATER_EQUAL:
      return false;
case EQUAL:
    return (v1 == v2);
case NOT_EQUAL:
  return (v1 != v2);
}
}
if ((Integer.class.isInstance(v1) || String.class.isInstance(v1)) && (Integer.class.isInstance(v2) || String.class.isInstance(v2))) {
intCompare=true;
}
 else {
intCompare=false;
}
if (intCompare) {
try {
int v1i=0, v2i=0;
if (Integer.class.isInstance(v1)) {
  v1i=((Integer)v1).intValue();
}
 else {
  v1i=Integer.parseInt((String)v1);
}
if (Integer.class.isInstance(v2)) {
  v2i=((Integer)v2).intValue();
}
 else {
  v2i=Integer.parseInt((String)v2);
}
switch (((Integer)compare).intValue()) {
case LESS_EQUAL:
  return (v1i <= v2i);
case LESS_THAN:
return (v1i < v2i);
case EQUAL:
return (v1i == v2i);
case GREATER_THAN:
return (v1i > v2i);
case GREATER_EQUAL:
return (v1i >= v2i);
case NOT_EQUAL:
return (v1i != v2i);
}
}
 catch (NumberFormatException ex) {
}
;
}
String v1s="", v2s="";
if (Integer.class.isInstance(v1)) {
v1s=((Integer)v1).toString();
}
 else {
v1s=(String)v1;
}
if (Integer.class.isInstance(v2)) {
v2s=((Integer)v2).toString();
}
 else {
v2s=(String)v2;
}
int res=v1s.compareTo(v2s);
switch (((Integer)compare).intValue()) {
case LESS_EQUAL:
return (res <= 0);
case LESS_THAN:
return (res < 0);
case EQUAL:
return (res == 0);
case GREATER_THAN:
return (res > 0);
case GREATER_EQUAL:
return (res >= 0);
case NOT_EQUAL:
return (res != 0);
}
return true;
}
