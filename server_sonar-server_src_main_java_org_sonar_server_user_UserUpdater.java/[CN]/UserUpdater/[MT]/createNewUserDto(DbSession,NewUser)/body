{
  UserDto userDto=new UserDto();
  List<Message> messages=newArrayList();
  String login=newUser.login();
  validateLoginFormat(login,messages);
  userDto.setLogin(login);
  String name=newUser.name();
  validateNameFormat(name,messages);
  userDto.setName(name);
  String email=newUser.email();
  if (email != null) {
    validateEmailFormat(email,messages);
    userDto.setEmail(email);
  }
  String password=newUser.password();
  if (password != null) {
    validatePasswords(password,messages);
    setEncryptedPassWord(password,userDto);
  }
  List<String> scmAccounts=sanitizeScmAccounts(newUser.scmAccounts());
  if (scmAccounts != null && !scmAccounts.isEmpty()) {
    validateScmAccounts(dbSession,scmAccounts,login,email,null,messages);
    userDto.setScmAccounts(scmAccounts);
  }
  NewUser.ExternalIdentity externalIdentity=newUser.externalIdentity();
  if (externalIdentity == null) {
    userDto.setExternalIdentity(login);
    userDto.setExternalIdentityProvider(SQ_AUTHORITY);
  }
 else {
    userDto.setExternalIdentity(externalIdentity.getId());
    userDto.setExternalIdentityProvider(externalIdentity.getProvider());
  }
  if (!messages.isEmpty()) {
    throw new BadRequestException(messages);
  }
  return userDto;
}
