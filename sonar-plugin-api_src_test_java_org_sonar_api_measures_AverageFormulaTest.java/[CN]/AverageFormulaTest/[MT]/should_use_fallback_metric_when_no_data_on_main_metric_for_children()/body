{
  List<FormulaData> childrenData=newArrayList();
  FormulaData data1=mock(FormulaData.class);
  childrenData.add(data1);
  when(data1.getMeasure(CoreMetrics.COMPLEXITY_IN_FUNCTIONS)).thenReturn(null);
  when(data1.getMeasure(CoreMetrics.COMPLEXITY)).thenReturn(new Measure(CoreMetrics.COMPLEXITY,107.0));
  when(data1.getMeasure(CoreMetrics.FUNCTIONS)).thenReturn(new Measure(CoreMetrics.FUNCTIONS,43.0));
  when(data.getChildren()).thenReturn(childrenData);
  Measure measure=AverageFormula.create(CoreMetrics.COMPLEXITY_IN_FUNCTIONS,CoreMetrics.FUNCTIONS).setFallbackForMainMetric(CoreMetrics.COMPLEXITY).calculate(data,context);
  assertThat(measure.getValue()).isEqualTo(2.5);
}
