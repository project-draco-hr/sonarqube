{
  List<FormulaData> childrenData=newArrayList();
  FormulaData data1=mock(FormulaData.class);
  childrenData.add(data1);
  when(data1.getMeasure(CoreMetrics.FUNCTIONS)).thenReturn(new Measure(CoreMetrics.FUNCTIONS,43.0));
  when(data1.getMeasure(CoreMetrics.COMPLEXITY)).thenReturn(new Measure(CoreMetrics.COMPLEXITY,107.0));
  FormulaData data2=mock(FormulaData.class);
  childrenData.add(data2);
  when(data2.getMeasure(CoreMetrics.STATEMENTS)).thenReturn(new Measure(CoreMetrics.STATEMENTS,127.0));
  when(data2.getMeasure(CoreMetrics.COMPLEXITY)).thenReturn(new Measure(CoreMetrics.COMPLEXITY,233.0));
  when(data.getChildren()).thenReturn(childrenData);
  Measure measure=AverageFormula.create(CoreMetrics.COMPLEXITY,CoreMetrics.FUNCTIONS).calculate(data,context);
  assertThat(measure.getValue()).isEqualTo(2.5);
}
