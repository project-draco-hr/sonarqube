{
  AsmClass asmClass=asmClassProvider.getClass("java/lang/String");
  assertNotNull(asmClass.getMethod("charAt(I)C"));
  assertTrue(asmClass.getMethod("charAt(I)C").isPublic());
  assertFalse(asmClass.getMethod("charAt(I)C").isDeprecated());
  assertFalse(asmClass.getMethod("charAt(I)C").isStatic());
  assertTrue(asmClass.getMethod("valueOf(C)Ljava/lang/String;").isStatic());
  asmClass=asmClassProvider.getClass("tags/File");
  AsmMethod getLines=asmClass.getMethod("read(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;");
  assertTrue(getLines.getDistinctUsedAsmClasses().contains(new AsmClass("java/util/Collection")));
  assertTrue(getLines.getDistinctUsedAsmClasses().contains(new AsmClass("tags/File")));
  assertTrue(getLines.getDistinctUsedAsmClasses().contains(new AsmClass("java/lang/String")));
  assertTrue(getLines.getDistinctUsedAsmClasses().contains(new AsmClass("java/lang/RuntimeException")));
}
