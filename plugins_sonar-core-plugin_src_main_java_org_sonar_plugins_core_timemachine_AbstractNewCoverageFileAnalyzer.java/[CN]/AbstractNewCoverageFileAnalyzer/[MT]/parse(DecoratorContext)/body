{
  BatchReportReader reader=new BatchReportReader(publishReportJob.getReportDir());
  Scm componentScm=reader.readComponentScm(resourceCache.get(context.getResource()).batchId());
  Measure hitsByLineMeasure=context.getMeasure(getCoverageLineHitsDataMetric());
  if (componentScm != null && hitsByLineMeasure != null && hitsByLineMeasure.hasData()) {
    Map<Integer,Integer> hitsByLine=parseCountByLine(hitsByLineMeasure);
    Map<Integer,Integer> conditionsByLine=parseCountByLine(context.getMeasure(getConditionsByLineMetric()));
    Map<Integer,Integer> coveredConditionsByLine=parseCountByLine(context.getMeasure(getCoveredConditionsByLineMetric()));
    reset();
    for (    Map.Entry<Integer,Integer> entry : hitsByLine.entrySet()) {
      int lineId=entry.getKey();
      int hits=entry.getValue();
      int conditions=(Integer)ObjectUtils.defaultIfNull(conditionsByLine.get(lineId),0);
      int coveredConditions=(Integer)ObjectUtils.defaultIfNull(coveredConditionsByLine.get(lineId),0);
      Changeset changeset=componentScm.getChangeset(componentScm.getChangesetIndexByLine(lineId - 1));
      Date date=changeset.hasDate() ? new Date(changeset.getDate()) : null;
      for (      PeriodStruct struct : structs) {
        struct.analyze(date,hits,conditions,coveredConditions);
      }
    }
    return true;
  }
  return false;
}
