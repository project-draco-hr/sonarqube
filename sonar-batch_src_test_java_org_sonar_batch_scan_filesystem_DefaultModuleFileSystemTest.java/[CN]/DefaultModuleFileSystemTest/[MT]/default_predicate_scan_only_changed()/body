{
  when(mode.onlyAnalyzeChanged()).thenReturn(true);
  DefaultModuleFileSystem fs=new DefaultModuleFileSystem(moduleInputFileCache,new Project("foo"),settings,fileIndexer,initializer,componentIndexer,mode);
  File baseDir=temp.newFile();
  InputFile mainInput=new DefaultInputFile("foo","Main.java").setModuleBaseDir(baseDir.toPath()).setType(InputFile.Type.MAIN);
  InputFile testInput=new DefaultInputFile("foo","Test.java").setModuleBaseDir(baseDir.toPath()).setType(InputFile.Type.TEST);
  InputFile mainSameInput=new DefaultInputFile("foo","MainSame.java").setModuleBaseDir(baseDir.toPath()).setType(InputFile.Type.TEST).setStatus(Status.SAME);
  when(moduleInputFileCache.inputFiles()).thenReturn(Lists.newArrayList(mainInput,testInput,mainSameInput));
  fs.index();
  Iterable<InputFile> inputFiles=fs.inputFiles(fs.predicates().all());
  assertThat(inputFiles).containsOnly(mainInput,testInput);
  Iterable<InputFile> allInputFiles=fs.inputFiles();
  assertThat(allInputFiles).containsOnly(mainInput,mainSameInput,testInput);
}
