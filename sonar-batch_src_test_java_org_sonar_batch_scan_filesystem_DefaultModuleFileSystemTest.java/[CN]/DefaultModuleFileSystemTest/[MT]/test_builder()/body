{
  File basedir=temp.newFolder("base");
  File workingDir=temp.newFolder("work");
  PathResolver pathResolver=mock(PathResolver.class);
  LanguageFileFilters languageFileFilters=mock(LanguageFileFilters.class);
  FileFilter fileFilter=mock(FileFilter.class);
  DefaultModuleFileSystem fileSystem=new DefaultModuleFileSystem.Builder().baseDir(basedir).workingDir(workingDir).addBinaryDir(new File(basedir,"target/classes")).addSourceDir(new File(basedir,"src/main/java")).addSourceDir(new File(basedir,"src/main/groovy")).addTestDir(new File(basedir,"src/test/java")).addFileFilter(fileFilter).sourceCharset(Charsets.UTF_8).pathResolver(pathResolver).languageFileFilters(languageFileFilters).build();
  assertThat(fileSystem).isNotNull();
  assertThat(fileSystem.baseDir().getCanonicalPath()).isEqualTo(basedir.getCanonicalPath());
  assertThat(fileSystem.workingDir().getCanonicalPath()).isEqualTo(workingDir.getCanonicalPath());
  assertThat(fileSystem.sourceDirs()).hasSize(2);
  assertThat(fileSystem.testDirs()).hasSize(1);
  assertThat(fileSystem.binaryDirs()).hasSize(1);
  assertThat(fileSystem.sourceCharset().name()).isEqualTo("UTF-8");
  assertThat(fileSystem.pathResolver()).isSameAs(pathResolver);
  assertThat(fileSystem.fileFilters()).containsOnly(fileFilter);
  assertThat(fileSystem.languageFileFilters()).isSameAs(languageFileFilters);
}
