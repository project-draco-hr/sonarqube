{
  Node lastParentNode=null;
  Node parentNode;
  while (true) {
    Edge edge;
    parentNode=active.getOriginNode();
    if (active.isExplicit()) {
      edge=active.getOriginNode().findEdge(symbolAt(endIndex));
      if (edge != null) {
        break;
      }
    }
 else {
      edge=active.getOriginNode().findEdge(symbolAt(active.getBeginIndex()));
      int span=active.getSpan();
      if (Objects.equal(symbolAt(edge.getBeginIndex() + span + 1),symbolAt(endIndex))) {
        break;
      }
      parentNode=edge.splitEdge(active);
    }
    Edge newEdge=new Edge(endIndex,text.length() - 1,parentNode);
    newEdge.insert();
    updateSuffixNode(lastParentNode,parentNode);
    lastParentNode=parentNode;
    if (active.getOriginNode() == root) {
      active.incBeginIndex();
    }
 else {
      active.changeOriginNode();
    }
    active.canonize();
  }
  updateSuffixNode(lastParentNode,parentNode);
  active.incEndIndex();
  active.canonize();
}
