{
  Set<String> linkType=newHashSet();
  for (  final ScannerReport.ComponentLink link : links) {
    String type=convertType(link.getType());
    if (!linkType.contains(type)) {
      linkType.add(type);
    }
 else {
      throw new IllegalArgumentException(String.format("Link of type '%s' has already been declared on component '%s'",type,componentUuid));
    }
    ComponentLinkDto previousLink=Iterables.find(previousLinks,new Predicate<ComponentLinkDto>(){
      @Override public boolean apply(      @Nullable ComponentLinkDto input){
        return input != null && input.getType().equals(convertType(link.getType()));
      }
    }
,null);
    if (previousLink == null) {
      dbClient.componentLinkDao().insert(session,new ComponentLinkDto().setComponentUuid(componentUuid).setType(type).setName(i18n.message(Locale.ENGLISH,"project_links." + type,null)).setHref(link.getHref()));
    }
 else {
      previousLink.setHref(link.getHref());
      dbClient.componentLinkDao().update(session,previousLink);
    }
  }
  for (  ComponentLinkDto dto : previousLinks) {
    if (!linkType.contains(dto.getType()) && ComponentLinkDto.PROVIDED_TYPES.contains(dto.getType())) {
      dbClient.componentLinkDao().delete(session,dto.getId());
    }
  }
}
