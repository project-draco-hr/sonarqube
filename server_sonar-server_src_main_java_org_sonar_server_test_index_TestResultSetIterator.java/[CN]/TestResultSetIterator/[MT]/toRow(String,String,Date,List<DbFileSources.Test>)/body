{
  Row result=new Row(projectUuid,fileUuid,updatedAt.getTime());
  for (  DbFileSources.Test test : tests) {
    ByteArrayOutputStream bytes=new ByteArrayOutputStream();
    JsonWriter writer=JsonWriter.of(new OutputStreamWriter(bytes,StandardCharsets.UTF_8)).setSerializeNulls(true);
    writer.beginObject();
    writer.prop(FIELD_PROJECT_UUID,projectUuid);
    writer.prop(FIELD_FILE_UUID,fileUuid);
    writer.prop(FIELD_TEST_UUID,test.getUuid());
    writer.prop(FIELD_NAME,test.getName());
    writer.prop(FIELD_STATUS,test.hasStatus() ? test.getStatus().toString() : null);
    writer.prop(FIELD_DURATION_IN_MS,test.hasExecutionTimeMs() ? test.getExecutionTimeMs() : null);
    writer.prop(FIELD_MESSAGE,test.hasMsg() ? test.getMsg() : null);
    writer.prop(FIELD_STACKTRACE,test.hasStacktrace() ? test.getStacktrace() : null);
    writer.prop(FIELD_UPDATED_AT,updatedAt.getTime());
    writer.name(FIELD_COVERED_FILES);
    writer.beginArray();
    for (    DbFileSources.Test.CoveredFile coveredFile : test.getCoveredFileList()) {
      writer.beginObject();
      writer.prop(FIELD_COVERED_FILE_UUID,coveredFile.getFileUuid());
      writer.name(FIELD_COVERED_FILE_LINES).valueObject(coveredFile.getCoveredLineList());
      writer.endObject();
    }
    writer.endArray();
    writer.endObject().close();
    byte[] jsonDoc=bytes.toByteArray();
    UpdateRequest updateRequest=new UpdateRequest(INDEX,TYPE,test.getUuid()).routing(projectUuid).doc(jsonDoc).upsert(jsonDoc);
    result.getUpdateRequests().add(updateRequest);
  }
  return result;
}
