{
  DbSession dbSession=dbTester.getSession();
  RuleRepositoryDto repo1=new RuleRepositoryDto("xoo","xoo","SonarQube");
  RuleRepositoryDto repo2=new RuleRepositoryDto("squid","ws","SonarQube");
  RuleRepositoryDto repo3=new RuleRepositoryDto("common-ws","ws","SonarQube Common");
  dbTester.getDbClient().ruleRepositoryDao().insert(dbSession,asList(repo1,repo2,repo3));
  dbSession.commit();
  wsTester=new WsTester(new RulesWs(new RepositoriesAction(dbTester.getDbClient())));
  newRequest().execute().assertJson(this.getClass(),"repositories.json");
  newRequest().setParam("language","xoo").execute().assertJson(this.getClass(),"repositories_xoo.json");
  newRequest().setParam("language","ws").execute().assertJson(this.getClass(),"repositories_ws.json");
  newRequest().setParam("q","common").execute().assertJson(this.getClass(),"repositories_common.json");
  newRequest().setParam("q","squid").execute().assertJson(this.getClass(),"repositories_squid.json");
  newRequest().setParam("q","sonar").execute().assertJson(this.getClass(),"repositories_sonar.json");
  newRequest().setParam("ps","4").execute().assertJson(this.getClass(),"repositories.json");
  newRequest().setParam("ps","100").execute().assertJson(this.getClass(),"repositories.json");
}
