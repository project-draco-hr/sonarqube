{
  IssueQuery.Builder builder=IssueQuery.builder();
  builder.issueKeys(toStrings(props.get("issueKeys")));
  builder.severities(toStrings(props.get("severities")));
  builder.statuses(toStrings(props.get("statuses")));
  builder.resolutions(toStrings(props.get("resolutions")));
  builder.components(toStrings(props.get("components")));
  builder.componentRoots(toStrings(props.get("componentRoots")));
  builder.rules(toRules(props.get("rules")));
  builder.userLogins(toStrings(props.get("userLogins")));
  builder.assignees(toStrings(props.get("assignees")));
  builder.assigned(toBoolean(props.get("assigned")));
  builder.createdAfter(toDate(props.get("createdAfter")));
  builder.createdBefore(toDate(props.get("createdBefore")));
  builder.pageSize(toInteger(props.get("pageSize")));
  builder.pageIndex(toInteger(props.get("pageIndex")));
  String sort=(String)props.get("sort");
  if (sort != null) {
    builder.sort(IssueQuery.Sort.valueOf(sort));
  }
  return builder.build();
}
