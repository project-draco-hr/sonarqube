{
  List<RuleParam> ruleParameters=context.prepareSelect("select id,rule_id,name,default_value from rules_parameters where default_value is not null").list(new Select.RowReader<RuleParam>(){
    @Override public RuleParam read(    Select.Row row) throws SQLException {
      return new RuleParam(row.getLong(1),row.getLong(2),row.getString(3),row.getString(4));
    }
  }
);
  for (  RuleParam ruleParameter : ruleParameters) {
    List<ActiveRule> activeRules=context.prepareSelect("select ar.id, ar.profile_id from active_rules ar " + "left outer join active_rule_parameters arp on arp.active_rule_id=ar.id and arp.rules_parameter_id=? " + "where ar.rule_id=? and arp.id is null").setLong(1,ruleParameter.id).setLong(2,ruleParameter.ruleId).list(new Select.RowReader<ActiveRule>(){
      @Override public ActiveRule read(      Select.Row row) throws SQLException {
        return new ActiveRule(row.getLong(1),row.getLong(2));
      }
    }
);
    Upsert upsert=context.prepareUpsert("insert into active_rule_parameters(active_rule_id, rules_parameter_id, value, rules_parameter_key) values (?, ?, ?, ?)");
    for (    ActiveRule activeRule : activeRules) {
      upsert.setLong(1,activeRule.id).setLong(2,ruleParameter.id).setString(3,ruleParameter.defaultValue).setString(4,ruleParameter.name).addBatch();
    }
    upsert.execute().commit().close();
    upsert=context.prepareUpsert("update active_rules set updated_at=? where id=?");
    Date now=new Date(system.now());
    for (    ActiveRule activeRule : activeRules) {
      upsert.setDate(1,now).setLong(2,activeRule.id).addBatch();
    }
    upsert.execute().commit().close();
  }
}
