{
  DbSession session=mybatis.openSession(true);
  try {
    MeasureMapper mapper=session.getMapper(MeasureMapper.class);
    for (    Entry<Measure> entry : measureCache.entries()) {
      String effectiveKey=entry.key()[0].toString();
      Measure measure=entry.value();
      Resource resource=resourceCache.get(effectiveKey);
      if (shouldPersistMeasure(resource,measure)) {
        Snapshot snapshot=snapshotCache.get(effectiveKey);
        MeasureModel measureModel=model(measure).setSnapshotId(snapshot.getId());
        mapper.insert(measureModel);
      }
    }
    org.sonar.api.measures.Metric duplicationMetricWithId=metricFinder.findByKey(CoreMetrics.DUPLICATIONS_DATA_KEY);
    for (    Entry<ArrayList<DuplicationGroup>> entry : duplicationCache.entries()) {
      String effectiveKey=entry.key()[0].toString();
      Measure measure=new Measure(duplicationMetricWithId,toXml(entry.value())).setPersistenceMode(PersistenceMode.DATABASE);
      Resource resource=resourceCache.get(effectiveKey);
      if (shouldPersistMeasure(resource,measure)) {
        Snapshot snapshot=snapshotCache.get(effectiveKey);
        MeasureModel measureModel=model(measure).setSnapshotId(snapshot.getId());
        mapper.insert(measureModel);
      }
    }
    session.commit();
  }
 catch (  Exception e) {
    throw new IllegalStateException("Unable to save some measures",e);
  }
 finally {
    MyBatis.closeQuietly(session);
  }
}
