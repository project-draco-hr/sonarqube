{
  MeasuresDistribution distribution=new MeasuresDistribution(squid.search(new QueryByParent(unit),new QueryByType(SourceClass.class)));
  Map<Integer,Integer> distrib=distribution.distributeAccordingTo(Metric.COMPLEXITY,CLASSES_DISTRIB_BOTTOM_LIMITS);
  StringBuilder distribString=new StringBuilder(32);
  for (  Map.Entry<Integer,Integer> entry : distrib.entrySet()) {
    distribString.append(entry.getKey()).append('=').append(entry.getValue().toString()).append(';');
  }
  distribString.setLength(distribString.length() - 1);
  return distribString.toString();
}
