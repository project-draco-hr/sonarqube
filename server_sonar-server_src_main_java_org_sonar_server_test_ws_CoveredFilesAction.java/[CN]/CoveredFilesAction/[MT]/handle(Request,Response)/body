{
  String testId=request.mandatoryParam(TEST_ID);
  TestDoc testDoc=checkFoundWithOptional(index.getNullableByTestUuid(testId),"Test with id '%s' is not found",testId);
  userSession.checkComponentUuidPermission(UserRole.CODEVIEWER,testDoc.fileUuid());
  List<CoveredFileDoc> coveredFiles=index.coveredFiles(testId);
  Map<String,ComponentDto> componentsByUuid=buildComponentsByUuid(coveredFiles);
  WsTests.CoveredFilesResponse.Builder responseBuilder=WsTests.CoveredFilesResponse.newBuilder();
  if (!coveredFiles.isEmpty()) {
    for (    CoveredFileDoc doc : coveredFiles) {
      WsTests.CoveredFilesResponse.CoveredFile.Builder fileBuilder=WsTests.CoveredFilesResponse.CoveredFile.newBuilder();
      fileBuilder.setId(doc.fileUuid());
      fileBuilder.setCoveredLines(doc.coveredLines().size());
      ComponentDto component=componentsByUuid.get(doc.fileUuid());
      if (component != null) {
        fileBuilder.setKey(component.key());
        fileBuilder.setLongName(component.longName());
      }
      responseBuilder.addFiles(fileBuilder);
    }
  }
  writeProtobuf(responseBuilder.build(),request,response);
}
