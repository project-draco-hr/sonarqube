{
  String jarPath=null;
  JarFile jar=null;
  try {
    Collection<String> paths=Lists.newArrayList();
    rootPath=StringUtils.removeStart(rootPath,"/");
    URL root=classLoader.getResource(rootPath);
    if (root != null) {
      checkJarFile(root);
      String rootDirectory=rootPath;
      if (StringUtils.substringAfterLast(rootPath,"/").indexOf('.') >= 0) {
        rootDirectory=StringUtils.substringBeforeLast(rootPath,"/");
      }
      jarPath=root.getPath().substring(5,root.getPath().indexOf("!"));
      jar=new JarFile(URLDecoder.decode(jarPath,CharEncoding.UTF_8));
      Enumeration<JarEntry> entries=jar.entries();
      while (entries.hasMoreElements()) {
        String name=entries.nextElement().getName();
        if (name.startsWith(rootDirectory) && predicate.apply(name)) {
          paths.add(name);
        }
      }
    }
    return paths;
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
 finally {
    if (jar != null) {
      try {
        jar.close();
      }
 catch (      Exception e) {
        LoggerFactory.getLogger(ClassLoaderUtils.class).error("Fail to close JAR file: " + jarPath,e);
      }
    }
  }
}
