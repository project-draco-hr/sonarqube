{
  generateData();
  long start=System.currentTimeMillis();
  for (  ComponentDto project : projects) {
    for (    ComponentDto file : componentsByProjectId.get(project)) {
      for (int issueIndex=1; issueIndex < NUMBER_ISSUES_PER_FILE + 1; issueIndex++) {
        batchSession.enqueue(new InsertDto<IssueDto>(IndexDefinition.ISSUES.getIndexType(),newIssue(issueIndex,file,project,rules.next()),false));
      }
    }
  }
  batchSession.enqueue(new RefreshIndex(IndexDefinition.ISSUES.getIndexType()));
  batchSession.commit();
  batchSession.clearCache();
  long stop=System.currentTimeMillis();
  assertThat(issueIndex.countAll()).isEqualTo(ISSUE_COUNT);
  long time=stop - start;
  LOGGER.info("processed {} Issues in {} ms with avg {} Issue/second",ISSUE_COUNT,time,documentPerSecond(time));
  assertDurationAround(time,Long.parseLong(getProperty("IssuesIndexInjectionTest.inject_issues")));
}
