{
  json.name("rules").beginArray();
  for (  Rule rule : result.getHits()) {
    json.beginObject();
    json.prop("repo",rule.key().repository()).prop("key",rule.key().toString()).prop("lang",rule.language()).prop("name",rule.name()).prop("htmlDesc",rule.htmlDescription()).prop("status",rule.status()).prop("template",rule.template()).prop("internalKey",rule.internalKey()).prop("severity",rule.severity()).prop("markdownNote",rule.markdownNote()).prop("noteLogin",rule.noteLogin()).name("tags").beginArray().values(rule.tags()).endArray().name("sysTags").beginArray().values(rule.systemTags()).endArray().prop("debtSubCharacteristicKey",rule.debtSubCharacteristicKey());
    if (rule.debtRemediationFunction() != null) {
      json.prop("debtRemediationFunctionType",rule.debtRemediationFunction().type().name()).prop("debtRemediationFunctionCoefficient",rule.debtRemediationFunction().coefficient()).prop("debtRemediationFunctionOffset",rule.debtRemediationFunction().offset());
    }
    json.name("params").beginArray();
    for (    RuleParam param : rule.params()) {
      json.beginObject().prop("key",param.key()).prop("desc",param.description()).prop("defaultValue",param.defaultValue()).endObject();
    }
    json.endArray();
    json.name("actives").beginArray();
    for (    ActiveRule activeRule : result.getActiveRules().get(rule.key().toString())) {
      json.beginObject().prop("key",activeRule.key()).prop("inherit",activeRule.inheritance()).prop("severity",activeRule.severity());
      if (activeRule.parentKey() != null) {
        json.prop("parent",activeRule.parentKey());
      }
      json.name("params").beginArray();
      for (      Map.Entry<String,String> param : activeRule.params().entrySet()) {
        json.beginObject().prop("key",param.getKey()).prop("value",param.getValue()).endObject();
      }
      json.endArray();
      json.endObject();
    }
    json.endArray();
    json.endObject();
  }
  json.endArray();
}
