{
  servicesContainer=coreContainer.makeChildContainer();
  ServerPluginRepository pluginRepository=servicesContainer.getComponent(ServerPluginRepository.class);
  pluginRepository.registerExtensions(servicesContainer);
  servicesContainer.as(Characteristics.CACHE).addComponent(DefaultModelFinder.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(DefaultModelManager.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(Plugins.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(ChartFactory.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(Languages.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(Views.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(CodeColorizers.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(RulesDao.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(MeasuresDao.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(org.sonar.api.database.daos.MeasuresDao.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(ProfilesDao.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(DaoFacade.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(DefaultRulesManager.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(ProfilesManager.class);
  servicesContainer.as(Characteristics.NO_CACHE).addComponent(Backup.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(AuthenticatorFactory.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(ServerLifecycleNotifier.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(AnnotationProfileParser.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(XMLProfileParser.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(XMLProfileSerializer.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(AnnotationRuleParser.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(XMLRuleParser.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(DefaultRuleFinder.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(DefaultMetricFinder.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(ProfilesConsole.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(RulesConsole.class);
  servicesContainer.as(Characteristics.CACHE).addComponent(JRubyI18n.class);
  servicesContainer.start();
}
