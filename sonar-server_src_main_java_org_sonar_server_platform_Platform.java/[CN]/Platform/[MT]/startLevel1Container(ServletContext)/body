{
  level1Container=new ComponentContainer();
  level1Container.addSingleton(this);
  level1Container.addSingleton(servletContext);
  level1Container.addSingleton(new BaseConfiguration());
  level1Container.addSingleton(ServerSettings.class);
  level1Container.addSingleton(ServerImpl.class);
  level1Container.addSingleton(Logback.class);
  level1Container.addSingleton(Profiling.class);
  level1Container.addSingleton(JRubyProfiling.class);
  level1Container.addSingleton(EmbeddedDatabaseFactory.class);
  level1Container.addSingleton(DefaultDatabase.class);
  level1Container.addSingleton(MyBatis.class);
  level1Container.addSingleton(DefaultServerUpgradeStatus.class);
  level1Container.addSingleton(DatabaseServerCompatibility.class);
  for (  Class<? extends DatabaseMigration> migrationClass : DatabaseMigrations.CLASSES) {
    level1Container.addSingleton(migrationClass);
  }
  level1Container.addSingleton(DatabaseMigrator.class);
  level1Container.addSingleton(DatabaseVersion.class);
  for (  Class daoClass : DaoUtils.getDaoClasses()) {
    level1Container.addSingleton(daoClass);
  }
  level1Container.addSingleton(PurgeProfiler.class);
  level1Container.addSingleton(PluginDeployer.class);
  level1Container.addSingleton(ServerPluginInstaller.class);
  level1Container.addSingleton(InstalledPluginReferentialFactory.class);
  level1Container.addSingleton(DefaultServerPluginRepository.class);
  level1Container.addSingleton(DefaultServerFileSystem.class);
  level1Container.addSingleton(RailsAppsDeployer.class);
  level1Container.addSingleton(JRubyI18n.class);
  level1Container.addSingleton(DefaultI18n.class);
  level1Container.addSingleton(RuleI18nManager.class);
  level1Container.addSingleton(GwtI18n.class);
  level1Container.addSingleton(Durations.class);
  level1Container.addSingleton(PreviewDatabaseFactory.class);
  level1Container.addSingleton(SemaphoreUpdater.class);
  level1Container.addSingleton(SemaphoresImpl.class);
  level1Container.addPicoAdapter(new TempFolderProvider());
  level1Container.addSingleton(TempFolderCleaner.class);
  level1Container.startComponents();
}
