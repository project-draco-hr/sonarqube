{
  ComponentDto projectDto=ComponentTesting.newProjectDto("ABCD").setKey(PROJECT_KEY).setName("Project");
  dbClient.componentDao().insert(session,projectDto);
  ComponentDto moduleDto=ComponentTesting.newModuleDto("BCDE",projectDto).setKey("MODULE_KEY").setName("Module");
  dbClient.componentDao().insert(session,moduleDto);
  ComponentDto directoryDto=ComponentTesting.newDirectory(moduleDto,"CDEF","MODULE_KEY:src/test/java/dir").setKey("MODULE_KEY:src/test/java/dir");
  dbClient.componentDao().insert(session,directoryDto);
  ComponentDto fileDto=ComponentTesting.newFileDto(moduleDto,"DEFG").setKey("MODULE_KEY:src/test/java/dir/FooTest.java").setQualifier("UTS");
  dbClient.componentDao().insert(session,fileDto);
  session.commit();
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.DIRECTORY).addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setIsTest(true).build());
  Component file=new DumbComponent(Component.Type.FILE,3,"DEFG",PROJECT_KEY + ":src/test/java/dir/FooTest.java");
  Component directory=new DumbComponent(Component.Type.DIRECTORY,2,"CDEF",PROJECT_KEY + ":src/test/java/dir",file);
  Component project=new DumbComponent(Component.Type.PROJECT,1,"ABCD",PROJECT_KEY,directory);
  treeRootHolder.setRoot(project);
  dbIdsRepository.setComponentId(project,projectDto.getId());
  dbIdsRepository.setComponentId(directory,directoryDto.getId());
  dbIdsRepository.setComponentId(file,fileDto.getId());
  sut.execute();
  SnapshotDto fileSnapshot=getUnprocessedSnapshot(fileDto.getId());
  assertThat(fileSnapshot.getQualifier()).isEqualTo("UTS");
  assertThat(fileSnapshot.getScope()).isEqualTo("FIL");
}
