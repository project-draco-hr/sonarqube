{
  RuleDto manualRule=RuleTesting.newManualRule("My manual").setName("Old name").setDescription("Old description").setSeverity(Severity.INFO);
  ruleDao.insert(dbSession,manualRule);
  dbSession.commit();
  RuleUpdate update=RuleUpdate.createForManualRule(manualRule.getKey()).setName("New name").setMarkdownDescription("New description").setSeverity(Severity.CRITICAL);
  underTest.update(update,userSessionRule);
  dbSession.clearCache();
  RuleDto manualRuleReloaded=ruleDao.selectOrFailByKey(dbSession,manualRule.getKey());
  assertThat(manualRuleReloaded).isNotNull();
  assertThat(manualRuleReloaded.getName()).isEqualTo("New name");
  assertThat(manualRuleReloaded.getDescription()).isEqualTo("New description");
  assertThat(manualRuleReloaded.getSeverityString()).isEqualTo(Severity.CRITICAL);
  assertThat(ruleIndex.search(new RuleQuery().setQueryText("New name"),new SearchOptions()).getIds()).containsOnly(manualRule.getKey());
  assertThat(ruleIndex.search(new RuleQuery().setQueryText("New description"),new SearchOptions()).getIds()).containsOnly(manualRule.getKey());
  assertThat(ruleIndex.search(new RuleQuery().setQueryText("Old name"),new SearchOptions()).getTotal()).isZero();
  assertThat(ruleIndex.search(new RuleQuery().setQueryText("Old description"),new SearchOptions()).getTotal()).isZero();
}
