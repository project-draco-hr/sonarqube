{
  RuleDto templateRule=RuleTesting.newTemplateRule(RuleKey.of("java","S001"));
  ruleDao.insert(dbSession,templateRule);
  RuleParamDto templateRuleParam=RuleParamDto.createFor(templateRule).setName("regex").setType("STRING").setDescription("Reg ex").setDefaultValue(".*");
  ruleDao.addRuleParam(dbSession,templateRule,templateRuleParam);
  RuleDto customRule=RuleTesting.newCustomRule(templateRule).setName("Old name").setDescription("Old description").setSeverity(Severity.MINOR).setStatus(RuleStatus.BETA);
  ruleDao.insert(dbSession,customRule);
  ruleDao.addRuleParam(dbSession,customRule,templateRuleParam.setDefaultValue("a.*"));
  dbSession.commit();
  RuleUpdate update=RuleUpdate.createForCustomRule(customRule.getKey()).setName("New name").setHtmlDescription("New description").setSeverity("MAJOR").setStatus(RuleStatus.READY).setParameters(ImmutableMap.of("regex","b.*"));
  updater.update(update,UserSession.get());
  dbSession.clearCache();
  Rule customRuleReloaded=ruleIndex.getByKey(customRule.getKey());
  assertThat(customRuleReloaded).isNotNull();
  assertThat(customRuleReloaded.name()).isEqualTo("New name");
  assertThat(customRuleReloaded.htmlDescription()).isEqualTo("New description");
  assertThat(customRuleReloaded.severity()).isEqualTo("MAJOR");
  assertThat(customRuleReloaded.status()).isEqualTo(RuleStatus.READY);
  assertThat(customRuleReloaded.params()).hasSize(1);
  RuleParam param=customRuleReloaded.params().get(0);
  assertThat(param.defaultValue()).isEqualTo("b.*");
}
