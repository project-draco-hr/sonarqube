{
  ruleDao.insert(dbSession,RuleTesting.newDto(RULE_KEY).setDefaultRemediationFunction(DebtRemediationFunction.Type.LINEAR.name()).setDefaultRemediationGapMultiplier("1d").setDefaultRemediationBaseEffort(null).setRemediationFunction(null).setRemediationGapMultiplier(null).setRemediationBaseEffort(null));
  dbSession.commit();
  RuleUpdate update=RuleUpdate.createForPluginRule(RULE_KEY).setDebtRemediationFunction(new DefaultDebtRemediationFunction(DebtRemediationFunction.Type.LINEAR,"2d",null));
  underTest.update(update,userSessionRule);
  dbSession.clearCache();
  RuleDto rule=ruleDao.selectOrFailByKey(dbSession,RULE_KEY);
  assertThat(rule.getRemediationFunction()).isEqualTo(DebtRemediationFunction.Type.LINEAR.name());
  assertThat(rule.getRemediationGapMultiplier()).isEqualTo("2d");
  assertThat(rule.getRemediationBaseEffort()).isNull();
  assertThat(rule.getDefaultRemediationFunction()).isEqualTo(DebtRemediationFunction.Type.LINEAR.name());
  assertThat(rule.getDefaultRemediationGapMultiplier()).isEqualTo("1d");
  assertThat(rule.getDefaultRemediationBaseEffort()).isNull();
}
