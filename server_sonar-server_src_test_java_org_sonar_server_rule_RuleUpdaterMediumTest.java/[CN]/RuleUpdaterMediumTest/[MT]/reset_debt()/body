{
  insertDebtCharacteristics(dbSession);
  ruleDao.insert(dbSession,RuleTesting.newDto(RULE_KEY).setDefaultSubCharacteristicId(hardReliabilityId).setDefaultRemediationFunction(DebtRemediationFunction.Type.LINEAR.name()).setDefaultRemediationCoefficient("1d").setDefaultRemediationOffset("5min").setSubCharacteristicId(softReliabilityId).setRemediationFunction(DebtRemediationFunction.Type.CONSTANT_ISSUE.name()).setRemediationCoefficient(null).setRemediationOffset("1min"));
  dbSession.commit();
  RuleUpdate update=RuleUpdate.createForPluginRule(RULE_KEY).setDebtSubCharacteristic(RuleUpdate.DEFAULT_DEBT_CHARACTERISTIC);
  updater.update(update,UserSession.get());
  dbSession.clearCache();
  Rule indexedRule=tester.get(RuleIndex.class).getByKey(RULE_KEY);
  assertThat(indexedRule.debtCharacteristicKey()).isEqualTo("RELIABILITY");
  assertThat(indexedRule.debtSubCharacteristicKey()).isEqualTo("HARD_RELIABILITY");
  assertThat(indexedRule.debtRemediationFunction().type()).isEqualTo(DebtRemediationFunction.Type.LINEAR);
  assertThat(indexedRule.debtRemediationFunction().coefficient()).isEqualTo("1d");
  assertThat(indexedRule.debtRemediationFunction().offset()).isEqualTo("5min");
  assertThat(indexedRule.debtOverloaded()).isFalse();
  assertThat(indexedRule.defaultDebtCharacteristicKey()).isEqualTo("RELIABILITY");
  assertThat(indexedRule.defaultDebtSubCharacteristicKey()).isEqualTo("HARD_RELIABILITY");
  assertThat(indexedRule.defaultDebtRemediationFunction().type()).isEqualTo(DebtRemediationFunction.Type.LINEAR);
  assertThat(indexedRule.defaultDebtRemediationFunction().coefficient()).isEqualTo("1d");
  assertThat(indexedRule.defaultDebtRemediationFunction().offset()).isEqualTo("5min");
}
