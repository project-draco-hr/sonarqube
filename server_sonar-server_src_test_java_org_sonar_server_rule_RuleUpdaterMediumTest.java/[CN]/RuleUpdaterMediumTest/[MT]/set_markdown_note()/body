{
  userSessionRule.login("me");
  ruleDao.insert(dbSession,RuleTesting.newDto(RULE_KEY).setNoteData(null).setNoteUserLogin(null).setTags(ImmutableSet.of("tag1")).setRemediationFunction(DebtRemediationFunction.Type.CONSTANT_ISSUE.name()).setRemediationGapMultiplier("1d").setRemediationBaseEffort("5min"));
  dbSession.commit();
  RuleUpdate update=RuleUpdate.createForPluginRule(RULE_KEY);
  update.setMarkdownNote("my *note*");
  underTest.update(update,userSessionRule);
  dbSession.clearCache();
  RuleDto rule=ruleDao.selectOrFailByKey(dbSession,RULE_KEY);
  assertThat(rule.getNoteData()).isEqualTo("my *note*");
  assertThat(rule.getNoteUserLogin()).isEqualTo("me");
  assertThat(rule.getNoteCreatedAt()).isNotNull();
  assertThat(rule.getNoteUpdatedAt()).isNotNull();
  assertThat(rule.getTags()).containsOnly("tag1");
  assertThat(rule.getRemediationFunction()).isEqualTo(DebtRemediationFunction.Type.CONSTANT_ISSUE.name());
  assertThat(rule.getRemediationGapMultiplier()).isEqualTo("1d");
  assertThat(rule.getRemediationBaseEffort()).isEqualTo("5min");
}
