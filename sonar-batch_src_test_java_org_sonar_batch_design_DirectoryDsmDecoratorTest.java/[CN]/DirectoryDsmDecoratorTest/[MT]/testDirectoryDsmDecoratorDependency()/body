{
  Dependency dependency=new Dependency(file1,file2).setWeight(1).setId(51L);
  when(index.getEdge(file1,file2)).thenReturn(dependency);
  when(index.hasEdge(file1,file2)).thenReturn(true);
  when(index.getOutgoingEdges(file1)).thenReturn(Arrays.asList(dependency));
  when(index.getIncomingEdges(file2)).thenReturn(Arrays.asList(dependency));
  decorator.decorate(dir,dirContext);
  verify(dirContext,times(5)).saveMeasure(any(Measure.class));
  verify(dirContext).saveMeasure(isMeasureWithValue(CoreMetrics.FILE_CYCLES,0.0));
  verify(dirContext).saveMeasure(isMeasureWithValue(CoreMetrics.FILE_FEEDBACK_EDGES,0.0));
  verify(dirContext).saveMeasure(isMeasureWithValue(CoreMetrics.FILE_TANGLES,0.0));
  verify(dirContext).saveMeasure(isMeasureWithValue(CoreMetrics.FILE_EDGES_WEIGHT,1.0));
  verify(dirContext).saveMeasure(isMeasureWithValue(CoreMetrics.DEPENDENCY_MATRIX,"[{\"i\":1,\"n\":\"Foo1.java\",\"q\":\"FIL\",\"v\":[{},{}]},{\"i\":2,\"n\":\"Foo2.java\",\"q\":\"FIL\",\"v\":[{\"i\":51,\"w\":1},{}]}]"));
}
