{
  String fileKey=request.param(KEY);
  String fileUuid=request.param(UUID);
  Preconditions.checkArgument(fileKey != null || fileUuid != null,"At least one of 'key' or 'uuid' must be provided");
  if (fileKey != null) {
    UserSession.get().checkComponentPermission(UserRole.CODEVIEWER,fileKey);
  }
 else {
    ComponentDto component=componentService.getByUuid(fileUuid);
    fileKey=component.getKey();
    UserSession.get().checkComponentPermission(UserRole.CODEVIEWER,fileKey);
  }
  int line=request.mandatoryParamAsInt(LINE);
  Testable testable=snapshotPerspectives.as(MutableTestable.class,fileKey);
  JsonWriter json=response.newJsonWriter().beginObject();
  if (testable != null) {
    Map<String,Integer> refByTestPlan=newHashMap();
    Map<String,Component> componentsByKey=newHashMap();
    writeTests(testable,line,refByTestPlan,componentsByKey,json);
    writeFiles(refByTestPlan,componentsByKey,json);
  }
  json.endObject().close();
}
