{
  List<Object> components=Lists.newArrayList(new SonarQubeVersionProvider(),DefaultResourceTypes.get(),Tasks.class,ListTask.DEFINITION,ListTask.class,ScanTask.DEFINITION,ScanTask.class);
  components.addAll(CorePropertyDefinitions.all());
  if (!analysisMode.isIssues()) {
    components.add(ScmConfiguration.class);
    components.add(ScmSensor.class);
    components.add(LinesSensor.class);
    components.add(ZeroCoverageSensor.class);
    components.add(CodeColorizerSensor.class);
    components.addAll(CpdComponents.all());
  }
 else {
    components.add(new Tracker<TrackedIssue,ServerIssueFromWs>());
    components.add(ConsoleReport.class);
    components.add(JSONReport.class);
    components.add(HtmlReport.class);
    components.add(IssuesReportBuilder.class);
    components.add(SourceProvider.class);
    components.add(RuleNameProvider.class);
  }
  return components;
}
