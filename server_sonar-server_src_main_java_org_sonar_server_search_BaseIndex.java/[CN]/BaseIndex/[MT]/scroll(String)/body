{
  return new Iterator<DOMAIN>(){
    private final Queue<SearchHit> hits=new ArrayDeque<SearchHit>();
    private void fillQueue(){
      try {
        SearchScrollRequestBuilder esRequest=getClient().prepareSearchScroll(scrollId).setScroll(TimeValue.timeValueMinutes(3));
        Collections.addAll(hits,((SearchResponse)node.execute(esRequest)).getHits().getHits());
      }
 catch (      Exception e) {
        throw new IllegalStateException("Error while filling in the scroll buffer",e);
      }
    }
    @Override public boolean hasNext(){
      if (hits.isEmpty()) {
        fillQueue();
      }
      return !hits.isEmpty();
    }
    @Override public DOMAIN next(){
      if (hits.isEmpty()) {
        fillQueue();
      }
      return toDoc(hits.poll().getSource());
    }
    @Override public void remove(){
      throw new IllegalStateException("Cannot remove item from scroll Iterable!!!" + " Use Service or DAO classes instead");
    }
  }
;
}
