{
  SearchClient searchClient=tester.get(SearchClient.class);
  createIssueAuthorizationIndex(searchClient,IndexDefinition.ISSUES_AUTHENTICATION.getIndexName(),IndexDefinition.ISSUES_AUTHENTICATION.getIndexType());
  RuleDto rule=RuleTesting.newXooX1();
  tester.get(RuleDao.class).insert(dbSession,rule);
  ComponentDto project=new ComponentDto().setId(1L).setProjectId(1L).setKey("SonarQube");
  tester.get(ComponentDao.class).insert(dbSession,project);
  ComponentDto resource=new ComponentDto().setProjectId(1L).setId(2L).setKey("IssueAction.java");
  tester.get(ComponentDao.class).insert(dbSession,resource);
  IssueDto issue=new IssueDto().setId(1L).setRuleId(rule.getId()).setRootComponentKey_unit_test_only(project.key()).setRootComponentId(project.getId()).setComponentKey_unit_test_only(resource.key()).setComponentId(resource.getId()).setStatus("OPEN").setResolution("OPEN").setKee(UUID.randomUUID().toString());
  dbClient.issueDao().insert(dbSession,issue);
  dbSession.commit();
  searchClient.prepareIndex(IndexDefinition.ISSUES_AUTHENTICATION.getIndexName(),IndexDefinition.ISSUES_AUTHENTICATION.getIndexType()).setId(project.key()).setSource(ImmutableMap.<String,Object>of("permission","read","project",project.key(),"group","user")).setRefresh(true).get();
  assertThat(searchIssueWithAuthorization(searchClient,"user","").getHits().getTotalHits()).isEqualTo(1);
  assertThat(searchIssueWithAuthorization(searchClient,"reviewer","").getHits().getTotalHits()).isEqualTo(0);
}
