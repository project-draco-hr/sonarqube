{
  SearchClient searchClient=tester.get(SearchClient.class);
  RuleDto rule=RuleTesting.newXooX1();
  tester.get(RuleDao.class).insert(dbSession,rule);
  ComponentDto project1=addComponent(1L,1L,"SonarQube :: Server");
  ComponentDto file1=addComponent(2L,1L,"IssueAction.java");
  addIssue(rule,project1,file1);
  addIssueAuthorization(searchClient,project1,null,newArrayList("user")).get();
  ComponentDto project2=addComponent(10L,10L,"SonarQube :: Core");
  ComponentDto file2=addComponent(11L,10L,"IssueDao.java");
  addIssue(rule,project2,file2);
  addIssueAuthorization(searchClient,project2,null,newArrayList("reviewer")).get();
  ComponentDto project3=addComponent(20L,20L,"SonarQube :: WS");
  ComponentDto file3=addComponent(21L,20L,"IssueWS.java");
  addIssue(rule,project3,file3);
  addIssueAuthorization(searchClient,project3,null,newArrayList("user","reviewer")).get();
  dbSession.commit();
  assertThat(searchIssueWithAuthorization(searchClient,"julien","user","reviewer").getHits().getTotalHits()).isEqualTo(3);
  assertThat(searchIssueWithAuthorization(searchClient,"julien","user").getHits().getTotalHits()).isEqualTo(2);
  assertThat(searchIssueWithAuthorization(searchClient,"julien","reviewer").getHits().getTotalHits()).isEqualTo(2);
  assertThat(searchIssueWithAuthorization(searchClient,"julien","unknown").getHits().getTotalHits()).isEqualTo(0);
}
