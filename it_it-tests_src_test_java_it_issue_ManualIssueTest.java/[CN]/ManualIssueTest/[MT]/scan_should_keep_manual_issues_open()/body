{
  Issue newIssue=adminIssueClient().create(NewIssue.create().component(COMPONENT_KEY).rule("manual:invalidclassname").line(3).severity("CRITICAL").message("The name 'Sample' is too generic"));
  assertThat(newIssue.key()).isNotNull();
  assertThat(newIssue.creationDate()).isNotNull();
  assertThat(newIssue.updateDate()).isNotNull();
  assertThat(searchIssuesByComponent(COMPONENT_KEY)).hasSize(1);
  analyzeProject();
  Issue issue=searchIssueByKey(newIssue.key());
  assertThat(issue.ruleKey()).isEqualTo("manual:invalidclassname");
  assertThat(issue.line()).isEqualTo(3);
  assertThat(issue.severity()).isEqualTo(("CRITICAL"));
  assertThat(issue.message()).isEqualTo(("The name 'Sample' is too generic"));
  assertThat(issue.status()).isEqualTo("OPEN");
  assertThat(issue.resolution()).isNull();
  assertThat(issue.reporter()).isEqualTo("admin");
  assertThat(issue.creationDate()).isEqualTo(newIssue.creationDate());
  assertThat(issue.updateDate()).isEqualTo(newIssue.updateDate());
}
