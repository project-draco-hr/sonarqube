{
  Issue newIssue=adminIssueClient().create(NewIssue.create().component(COMPONENT_KEY).rule("manual:invalidclassname").line(3).severity("CRITICAL").message("The name 'Sample' is too generic"));
  assertThat(newIssue.key()).isNotNull();
  assertThat(newIssue.creationDate()).isNotNull();
  assertThat(newIssue.updateDate()).isNotNull();
  assertThat(newIssue.ruleKey()).isEqualTo("manual:invalidclassname");
  assertThat(newIssue.line()).isEqualTo(3);
  assertThat(newIssue.severity()).isEqualTo(("CRITICAL"));
  assertThat(newIssue.message()).isEqualTo(("The name 'Sample' is too generic"));
  assertThat(newIssue.status()).isEqualTo("OPEN");
  assertThat(newIssue.resolution()).isNull();
  assertThat(newIssue.reporter()).isEqualTo("admin");
  Issues issues=search(IssueQuery.create().issues(newIssue.key()));
  assertThat(issues.list().get(0).reporter()).isEqualTo("admin");
  assertThat(issues.user("admin").name()).isEqualTo("Administrator");
}
