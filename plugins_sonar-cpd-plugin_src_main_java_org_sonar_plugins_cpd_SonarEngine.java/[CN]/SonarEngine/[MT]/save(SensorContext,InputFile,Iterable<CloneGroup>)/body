{
  if (duplications == null || Iterables.isEmpty(duplications)) {
    return;
  }
  Set<Integer> duplicatedLines=new HashSet<Integer>();
  double duplicatedBlocks=0;
  for (  CloneGroup clone : duplications) {
    ClonePart origin=clone.getOriginPart();
    for (    ClonePart part : clone.getCloneParts()) {
      if (part.getResourceId().equals(origin.getResourceId())) {
        duplicatedBlocks++;
        for (int duplicatedLine=part.getStartLine(); duplicatedLine < part.getStartLine() + part.getLines(); duplicatedLine++) {
          duplicatedLines.add(duplicatedLine);
        }
      }
    }
  }
  context.saveMeasure(inputFile,CoreMetrics.DUPLICATED_FILES,1.0);
  context.saveMeasure(inputFile,CoreMetrics.DUPLICATED_LINES,(double)duplicatedLines.size());
  context.saveMeasure(inputFile,CoreMetrics.DUPLICATED_BLOCKS,duplicatedBlocks);
  Measure data=new Measure(CoreMetrics.DUPLICATIONS_DATA,toXml(duplications)).setPersistenceMode(PersistenceMode.DATABASE);
  context.saveMeasure(inputFile,data);
}
