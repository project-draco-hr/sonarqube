{
  final SonarDuplicationsIndex index=indexFactory.create(project);
  TokenChunker tokenChunker=JavaTokenProducer.build();
  StatementChunker statementChunker=JavaStatementBuilder.build();
  BlockChunker blockChunker=new BlockChunker(BLOCK_SIZE);
  for (  File file : sourceFiles) {
    LOG.debug("Populating index from {}",file);
    Resource resource=getResource(file);
    String resourceKey=getFullKey(project,resource);
    List<Statement> statements;
    Reader reader=null;
    try {
      reader=new InputStreamReader(new FileInputStream(file),fileSystem.sourceCharset());
      statements=statementChunker.chunk(tokenChunker.chunk(reader));
    }
 catch (    FileNotFoundException e) {
      throw new SonarException("Cannot find file " + file,e);
    }
 finally {
      IOUtils.closeQuietly(reader);
    }
    List<Block> blocks=blockChunker.chunk(resourceKey,statements);
    index.insert(resource,blocks);
  }
  return index;
}
