{
  if (o == this)   return (true);
 else   if (!(o instanceof List))   return (false);
  List lo=(List)o;
  if (fast) {
    ListIterator li1=list.listIterator();
    ListIterator li2=lo.listIterator();
    while (li1.hasNext() && li2.hasNext()) {
      Object o1=li1.next();
      Object o2=li2.next();
      if (!(o1 == null ? o2 == null : o1.equals(o2)))       return (false);
    }
    return (!(li1.hasNext() || li2.hasNext()));
  }
 else {
synchronized (list) {
      ListIterator li1=list.listIterator();
      ListIterator li2=lo.listIterator();
      while (li1.hasNext() && li2.hasNext()) {
        Object o1=li1.next();
        Object o2=li2.next();
        if (!(o1 == null ? o2 == null : o1.equals(o2)))         return (false);
      }
      return (!(li1.hasNext() || li2.hasNext()));
    }
  }
}
