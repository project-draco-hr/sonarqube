{
  RowReader<Long> simpleLongReader=new RowReader<Long>(){
    @Override public Long read(    Row row) throws SQLException {
      return row.getLong(1);
    }
  }
;
  long revisionMetricId=context.prepareSelect("SELECT id FROM metrics WHERE name = 'revisions_by_line'").get(simpleLongReader).longValue();
  long authorMetricId=context.prepareSelect("SELECT id FROM metrics WHERE name = 'authors_by_line'").get(simpleLongReader).longValue();
  long datesMetricId=context.prepareSelect("SELECT id FROM metrics WHERE name = 'last_commit_datetimes_by_line'").get(simpleLongReader).longValue();
  MassUpdate massUpdate=context.prepareMassUpdate();
  massUpdate.select("SELECT " + "p.uuid as project_uuid, " + "f.uuid as file_uuid, "+ "ss.data as source, "+ "ss.updated_at, "+ "m1.text_value as short_revisions_by_line, "+ "m1.measure_data as long_revisions_by_line, "+ "m2.text_value as short_authors_by_line, "+ "m2.measure_data as long_authors_by_line, "+ "m3.text_value as short_dates_by_line, "+ "m3.measure_data as short_dates_by_line "+ "FROM snapshots s "+ "JOIN snapshot_sources ss "+ "ON s.id = ss.snapshot_id AND s.islast = TRUE "+ "JOIN projects p "+ "ON s.root_project_id = p.id "+ "JOIN projects f "+ "ON s.project_id = f.id "+ "LEFT JOIN project_measures m1 "+ "ON m1.snapshot_id = s.id AND m1.metric_id = ? "+ "LEFT JOIN project_measures m2 "+ "ON m2.snapshot_id = s.id AND m2.metric_id = ? "+ "LEFT JOIN project_measures m3 "+ "ON m3.snapshot_id = s.id AND m3.metric_id = ? "+ "WHERE "+ "f.enabled = TRUE "+ "AND f.scope = 'FIL' "+ "AND p.scope = 'PRJ' AND p.qualifier = 'TRK' ").setLong(1,revisionMetricId).setLong(2,authorMetricId).setLong(3,datesMetricId);
  massUpdate.update("INSERT INTO file_sources" + "(project_uuid, file_uuid, created_at, updated_at, data, data_hash)" + "VALUES "+ "(?, ?, ?, ?, ?, ?)");
  massUpdate.execute(new MassUpdate.Handler(){
    final Date now=new Date(system.now());
    @Override public boolean handle(    Row row,    SqlStatement update) throws SQLException {
      String projectUuid=row.getString(1);
      String fileUuid=row.getString(2);
      String source=row.getString(3);
      Date updatedAt=row.getDate(4);
      String shortRevisions=row.getString(5);
      String longRevisions=row.getString(6);
      String shortAuthors=row.getString(7);
      String longAuthors=row.getString(8);
      String shortDates=row.getString(9);
      String longDates=row.getString(10);
      String sourceData=new FileSourceDto(source,shortRevisions,longRevisions,shortAuthors,longAuthors,shortDates,longDates).getSourceData();
      update.setString(1,projectUuid).setString(2,fileUuid).setDate(3,now).setDate(4,updatedAt == null ? now : updatedAt).setString(5,sourceData).setString(6,"");
      return true;
    }
  }
);
}
