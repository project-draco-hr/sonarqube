{
  if (duplications == null || Iterables.isEmpty(duplications)) {
    return;
  }
  Set<Integer> duplicatedLines=new HashSet<Integer>();
  int duplicatedBlocks=computeBlockAndLineCount(duplications,duplicatedLines);
  FileLinesContext linesContext=contextFactory.createFor(inputFile);
  for (int i=1; i <= inputFile.lines(); i++) {
    linesContext.setIntValue(CoreMetrics.DUPLICATION_LINES_DATA_KEY,i,duplicatedLines.contains(i) ? 1 : 0);
  }
  linesContext.save();
  context.addMeasure(context.<Integer>measureBuilder().forMetric(CoreMetrics.DUPLICATED_FILES).onFile(inputFile).withValue(1).build());
  context.addMeasure(context.<Integer>measureBuilder().forMetric(CoreMetrics.DUPLICATED_LINES).onFile(inputFile).withValue(duplicatedLines.size()).build());
  context.addMeasure(context.<Integer>measureBuilder().forMetric(CoreMetrics.DUPLICATED_BLOCKS).onFile(inputFile).withValue(duplicatedBlocks).build());
  DuplicationBuilder builder=context.duplicationBuilder(inputFile);
  for (  CloneGroup duplication : duplications) {
    builder.originBlock(duplication.getOriginPart().getStartLine(),duplication.getOriginPart().getEndLine());
    for (    ClonePart part : duplication.getCloneParts()) {
      if (!part.equals(duplication.getOriginPart())) {
        ((DefaultDuplicationBuilder)builder).isDuplicatedBy(part.getResourceId(),part.getStartLine(),part.getEndLine());
      }
    }
  }
  context.saveDuplications(inputFile,builder.build());
}
