{
  DbSession dbSession=dbClient.openSession(false);
  String valueAsString=request.mandatoryParam(PARAM_VALUE);
  String description=request.param(PARAM_DESCRIPTION);
  long now=system.now();
  try {
    ComponentDto component=componentFinder.getByUuidOrKey(dbSession,request.param(PARAM_PROJECT_ID),request.param(PARAM_PROJECT_KEY),PROJECT_ID_AND_KEY);
    MetricDto metric=searchMetric(dbSession,request);
    checkPermissions(userSession,component);
    checkIsProjectOrModule(component);
    checkMeasureDoesNotExistAlready(dbSession,component,metric);
    UserDto user=dbClient.userDao().selectOrFailByLogin(dbSession,userSession.getLogin());
    CustomMeasureDto measure=new CustomMeasureDto().setComponentUuid(component.uuid()).setMetricId(metric.getId()).setDescription(description).setUserLogin(user.getLogin()).setCreatedAt(now).setUpdatedAt(now);
    validator.setMeasureValue(measure,valueAsString,metric);
    dbClient.customMeasureDao().insert(dbSession,measure);
    dbSession.commit();
    JsonWriter json=response.newJsonWriter();
    customMeasureJsonWriter.write(json,measure,metric,component,user,true,CustomMeasureJsonWriter.OPTIONAL_FIELDS);
    json.close();
  }
  finally {
    dbClient.closeSession(dbSession);
  }
}
