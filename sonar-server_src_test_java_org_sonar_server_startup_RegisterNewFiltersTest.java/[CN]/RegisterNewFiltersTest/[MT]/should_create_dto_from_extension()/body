{
  when(filterTemplate.createFilter()).thenReturn(Filter.create().setFavouritesOnly(false).setDisplayAs("list").add(Criterion.create("metric","complexity",Criterion.LT,12f,false)).add(Criterion.create("metric","LCOM4",Criterion.GTE,"5",true)).add(FilterColumn.create("metric","distance","ASC",false)).add(FilterColumn.create("metric","instability","DESC",true)));
  FilterDto dto=register.createDtoFromExtension("Fake",filterTemplate.createFilter());
  assertThat(dto.getUserId()).isNull();
  assertThat(dto.getName()).isEqualTo("Fake");
  assertThat(dto.getKey()).isEqualTo("Fake");
  assertThat(dto.isShared()).isTrue();
  assertThat(dto.isFavourites()).isFalse();
  assertThat(dto.getDefaultView()).isEqualTo("list");
  assertThat(dto.getPageSize()).isNull();
  assertThat(dto.getCriteria()).hasSize(2);
  assertThat(dto.getCriteria()).satisfies(contains(new CriterionDto().setFamily("metric").setKey("complexity").setOperator("<").setValue(12f).setVariation(false)));
  assertThat(dto.getCriteria()).satisfies(contains(new CriterionDto().setFamily("metric").setKey("LCOM4").setOperator(">=").setTextValue("5").setVariation(true)));
  assertThat(dto.getColumns()).hasSize(2);
  assertThat(dto.getColumns()).satisfies(contains(new FilterColumnDto().setFamily("metric").setKey("distance").setOrderIndex(1L).setSortDirection("ASC").setVariation(false)));
  assertThat(dto.getColumns()).satisfies(contains(new FilterColumnDto().setFamily("metric").setKey("instability").setOrderIndex(2L).setSortDirection("DESC").setVariation(true)));
}
