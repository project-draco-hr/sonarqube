{
  File baseDir=temp.newFolder();
  File srcDir=new File(baseDir,"src");
  srcDir.mkdir();
  File testDir=new File(baseDir,"test");
  testDir.mkdir();
  File xooFile=new File(srcDir,"sample.xoo");
  FileUtils.write(xooFile,"foo");
  File xooFile2=new File(srcDir,"sample2.xoo");
  FileUtils.write(xooFile2,"foo");
  File xooTestFile=new File(testDir,"sampleTest.xoo");
  FileUtils.write(xooTestFile,"failure\nerror\nok\nskipped");
  File xooTestFile2=new File(testDir,"sample2Test.xoo");
  FileUtils.write(xooTestFile2,"test file tests");
  File xooTestExecutionFile=new File(testDir,"sampleTest.xoo.test");
  FileUtils.write(xooTestExecutionFile,"some test:4:::OK:UNIT\n" + "another test:10:::OK:UNIT\n" + "test without coverage:10:::OK:UNIT\n");
  File xooCoveragePerTestFile=new File(testDir,"sampleTest.xoo.testcoverage");
  FileUtils.write(xooCoveragePerTestFile,"some test;src/sample.xoo,10,11;src/sample2.xoo,1,2\n" + "another test;src/sample.xoo,10,20\n");
  TaskResult result=tester.newTask().properties(ImmutableMap.<String,String>builder().put("sonar.task","scan").put("sonar.projectBaseDir",baseDir.getAbsolutePath()).put("sonar.projectKey","com.foo.project").put("sonar.projectName","Foo Project").put("sonar.projectVersion","1.0-SNAPSHOT").put("sonar.projectDescription","Description of Foo Project").put("sonar.sources","src").put("sonar.tests","test").build()).start();
  InputFile file=result.inputFile("test/sampleTest.xoo");
  org.sonar.batch.protocol.output.BatchReport.CoverageDetail someTest=result.coveragePerTestFor(file,"some test");
  assertThat(someTest.getCoveredFileList()).hasSize(2);
  assertThat(someTest.getCoveredFile(0).getFileRef()).isGreaterThan(0);
  assertThat(someTest.getCoveredFile(0).getCoveredLineList()).containsExactly(10,11);
  assertThat(someTest.getCoveredFile(1).getFileRef()).isGreaterThan(0);
  assertThat(someTest.getCoveredFile(1).getCoveredLineList()).containsExactly(1,2);
  org.sonar.batch.protocol.output.BatchReport.CoverageDetail anotherTest=result.coveragePerTestFor(file,"another test");
  assertThat(anotherTest.getCoveredFileList()).hasSize(1);
  assertThat(anotherTest.getCoveredFile(0).getFileRef()).isGreaterThan(0);
  assertThat(anotherTest.getCoveredFile(0).getCoveredLineList()).containsExactly(10,20);
}
