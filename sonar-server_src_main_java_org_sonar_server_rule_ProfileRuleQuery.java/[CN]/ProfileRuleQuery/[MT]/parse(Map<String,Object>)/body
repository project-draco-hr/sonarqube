{
  List<BadRequestException.Message> errors=newArrayList();
  validatePresenceOf(params,errors,PARAM_PROFILE_ID);
  ProfileRuleQuery result=new ProfileRuleQuery();
  if (params.containsKey(PARAM_LANGUAGE)) {
    result.setLanguage((String)params.get(PARAM_LANGUAGE));
  }
  if (params.containsKey(PARAM_NAME_OR_KEY)) {
    result.setNameOrKey((String)params.get(PARAM_NAME_OR_KEY));
  }
  if (params.get(PARAM_REPOSITORY_KEYS) != null) {
    result.addRepositoryKeys(optionalVarargs(params.get(PARAM_REPOSITORY_KEYS)));
  }
  if (params.get(PARAM_SEVERITIES) != null) {
    result.addSeverities(optionalVarargs(params.get(PARAM_SEVERITIES)));
  }
  if (params.get(PARAM_STATUSES) != null) {
    result.addStatuses(optionalVarargs(params.get(PARAM_STATUSES)));
  }
  if (params.containsKey(PARAM_INHERITANCE)) {
    result.setInheritance((String)params.get(PARAM_INHERITANCE));
  }
  if (!errors.isEmpty()) {
    throw BadRequestException.of("Incorrect rule search parameters",errors);
  }
 else {
    result.profileId=RubyUtils.toInteger(params.get(PARAM_PROFILE_ID));
  }
  return result;
}
