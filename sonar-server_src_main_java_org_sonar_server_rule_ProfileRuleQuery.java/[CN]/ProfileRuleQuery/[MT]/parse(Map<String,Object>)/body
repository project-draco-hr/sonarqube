{
  BadRequestException validationException=BadRequestException.of("Incorrect rule search parameters");
  validatePresenceOf(params,validationException,"profileId");
  ProfileRuleQuery result=new ProfileRuleQuery();
  try {
    result.profileId=RubyUtils.toInteger(params.get("profileId"));
  }
 catch (  Exception badProfileId) {
    validationException.addError("profileId could not be parsed");
  }
  if (params.containsKey("nameOrKey")) {
    result.setNameOrKey((String)params.get("nameOrKey"));
  }
  if (params.get("repositoryKeys") != null) {
    for (    Object param : (Object[])params.get("repositoryKeys")) {
      if (!"".equals(param)) {
        result.addRepositoryKeys((String)param);
      }
    }
  }
  if (params.get("severities") != null) {
    for (    Object param : (Object[])params.get("severities")) {
      if (!"".equals(param)) {
        result.addSeverities((String)param);
      }
    }
  }
  if (params.get("statuses") != null) {
    for (    Object param : (Object[])params.get("statuses")) {
      if (!"".equals(param)) {
        result.addStatuses((String)param);
      }
    }
  }
  validationException.checkMessages();
  return result;
}
