{
  BadRequestException validationException=BadRequestException.of("Incorrect rule search parameters");
  validatePresenceOf(params,validationException,PARAM_PROFILE_ID);
  ProfileRuleQuery result=new ProfileRuleQuery();
  try {
    result.profileId=RubyUtils.toInteger(params.get(PARAM_PROFILE_ID));
  }
 catch (  Exception badProfileId) {
    validationException.addError("profileId could not be parsed");
  }
  if (params.containsKey(PARAM_NAME_OR_KEY)) {
    result.setNameOrKey((String)params.get(PARAM_NAME_OR_KEY));
  }
  if (params.get(PARAM_REPOSITORY_KEYS) != null) {
    result.addRepositoryKeys(optionalVarargs(params.get(PARAM_REPOSITORY_KEYS)));
  }
  if (params.get(PARAM_SEVERITIES) != null) {
    result.addSeverities(optionalVarargs(params.get(PARAM_SEVERITIES)));
  }
  if (params.get(PARAM_STATUSES) != null) {
    result.addStatuses(optionalVarargs(params.get(PARAM_STATUSES)));
  }
  validationException.checkMessages();
  return result;
}
