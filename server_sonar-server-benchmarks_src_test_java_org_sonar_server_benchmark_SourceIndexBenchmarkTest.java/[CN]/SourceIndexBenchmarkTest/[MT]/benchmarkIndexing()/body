{
  LOGGER.info("Indexing source lines");
  SourceIterator files=new SourceIterator(FILES,LINES_PER_FILE);
  ProgressTask progressTask=new ProgressTask(LOGGER,"files of " + LINES_PER_FILE + " lines",files.count());
  Timer timer=new Timer("SourceIndexer");
  timer.schedule(progressTask,ProgressTask.PERIOD_MS,ProgressTask.PERIOD_MS);
  long start=System.currentTimeMillis();
  tester.get(SourceLineIndexer.class).index(files);
  long end=System.currentTimeMillis();
  timer.cancel();
  long period=end - start;
  long nbLines=files.count.get() * LINES_PER_FILE;
  long throughputPerSecond=1000L * nbLines / period;
  LOGGER.info(String.format("%d lines indexed in %d ms (%d docs/second)",nbLines,period,throughputPerSecond));
  benchmark.expectAround("Throughput to index source lines",throughputPerSecond,8950,Benchmark.DEFAULT_ERROR_MARGIN_PERCENTS);
  tester.get(EsClient.class).prepareOptimize(SourceLineIndexDefinition.INDEX).setWaitForMerge(true).get();
  long dirSize=FileUtils.sizeOfDirectory(tester.getEsServerHolder().getHomeDir());
  LOGGER.info(String.format("ES dir: " + FileUtils.byteCountToDisplaySize(dirSize)));
  benchmark.expectBetween("ES dir size (b)",dirSize,172L * FileUtils.ONE_MB,182L * FileUtils.ONE_MB);
}
