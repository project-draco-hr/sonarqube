{
  List<ColumnDef> columns=select(connection,ColumnDef.SELECT_COLUMNS + "FROM INFORMATION_SCHEMA.columns " + "WHERE table_schema=database() and character_set_name is not null and collation_name is not null",ColumnDef.ColumnDefRowConverter.INSTANCE);
  List<String> utf8Errors=new ArrayList<>();
  for (  ColumnDef column : from(columns).filter(ColumnDef.IsInSonarQubeTablePredicate.INSTANCE)) {
    if (enforceUtf8 && !containsIgnoreCase(column.getCharset(),UTF8)) {
      utf8Errors.add(format("%s.%s",column.getTable(),column.getColumn()));
    }
 else     if (endsWithIgnoreCase(column.getCollation(),"_ci")) {
      repairCaseInsensitiveColumn(connection,column);
    }
  }
  if (!utf8Errors.isEmpty()) {
    throw MessageException.of(format("UTF8 case-sensitive collation is required for database columns [%s]",Joiner.on(", ").join(utf8Errors)));
  }
}
