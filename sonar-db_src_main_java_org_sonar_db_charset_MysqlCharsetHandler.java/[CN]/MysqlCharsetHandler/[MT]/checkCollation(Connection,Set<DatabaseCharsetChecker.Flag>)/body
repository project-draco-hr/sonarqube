{
  List<ColumnDef> columns=select(connection,ColumnDef.SELECT_COLUMNS + "FROM INFORMATION_SCHEMA.columns " + "WHERE table_schema=database() and character_set_name is not null and collation_name is not null",ColumnDef.ColumnDefRowConverter.INSTANCE);
  Set<String> errors=new LinkedHashSet<>();
  for (  ColumnDef column : from(columns).filter(ColumnDef.IsInSonarQubeTablePredicate.INSTANCE)) {
    if (flags.contains(ENFORCE_UTF8) && !containsIgnoreCase(column.getCharset(),UTF8)) {
      errors.add(format("%s.%s",column.getTable(),column.getColumn()));
    }
    if (endsWithIgnoreCase(column.getCollation(),"_ci")) {
      if (flags.contains(AUTO_REPAIR_COLLATION)) {
        repairCaseInsensitiveColumn(connection,column);
      }
 else {
        errors.add(format("%s.%s",column.getTable(),column.getColumn()));
      }
    }
  }
  if (!errors.isEmpty()) {
    throw MessageException.of(format("UTF8 case-sensitive collation is required for database columns [%s]",Joiner.on(", ").join(errors)));
  }
}
