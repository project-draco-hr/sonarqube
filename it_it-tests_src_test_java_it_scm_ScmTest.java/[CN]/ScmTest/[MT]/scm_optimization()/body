{
  SonarScanner build=SonarScanner.create(projectDir("scm/xoo-sample-with-scm")).setProperty("sonar.scm.provider","xoo").setProperty("sonar.scm.disabled","false");
  BuildResult buildResult=orchestrator.executeBuild(build);
  assertThat(getScmData("sample-scm:src/main/xoo/sample/Sample.xoo")).containsExactly(MapEntry.entry(1,new LineData("1","2013-01-04T00:00:00+0100","jhenry")),MapEntry.entry(3,new LineData("2","2013-01-04T00:00:00+0100","jhenry")),MapEntry.entry(4,new LineData("1","2013-01-04T00:00:00+0100","jhenry")),MapEntry.entry(8,new LineData("3","2014-01-04T00:00:00+0100","toto")));
  assertThat(buildResult.getLogs()).containsSequence("1 files to be analyzed","1/1 files analyzed");
  buildResult=orchestrator.executeBuild(build);
  assertThat(getScmData("sample-scm:src/main/xoo/sample/Sample.xoo")).containsExactly(MapEntry.entry(1,new LineData("1","2013-01-04T00:00:00+0100","jhenry")),MapEntry.entry(3,new LineData("2","2013-01-04T00:00:00+0100","jhenry")),MapEntry.entry(4,new LineData("1","2013-01-04T00:00:00+0100","jhenry")),MapEntry.entry(8,new LineData("3","2014-01-04T00:00:00+0100","toto")));
  assertThat(buildResult.getLogs()).doesNotContain("1 files to be analyzed");
  assertThat(buildResult.getLogs()).doesNotContain("1/1 files analyzed");
  buildResult=orchestrator.executeBuild(build.setProperty("sonar.scm.disabled","true"));
  assertThat(getScmData("sample-scm:src/main/xoo/sample/Sample.xoo")).isEmpty();
  assertThat(buildResult.getLogs()).doesNotContain("1 files to be analyzed");
  assertThat(buildResult.getLogs()).doesNotContain("1/1 files analyzed");
}
