{
  addCoreSingleton(reactor);
  addCoreSingleton(new PropertiesConfiguration());
  addCoreSingleton(BatchSettings.class);
  addCoreSingleton(DryRun.class);
  addCoreSingleton(Logback.class);
  addCoreSingleton(ServerMetadata.class);
  addCoreSingleton(TempDirectories.class);
  addCoreSingleton(HttpDownloader.class);
  addCoreSingleton(ArtifactDownloader.class);
  addCoreSingleton(JdbcDriverHolder.class);
  addCoreSingleton(EmailSettings.class);
  addCoreSingleton(I18nManager.class);
  addCoreSingleton(RuleI18nManager.class);
  URLClassLoader bootstrapClassLoader=getComponentByType(JdbcDriverHolder.class).getClassLoader();
  Thread.currentThread().setContextClassLoader(bootstrapClassLoader);
  addCoreSingleton(RemoteServerMetadata.class);
  addCoreSingleton(BatchDatabase.class);
  addCoreSingleton(MyBatis.class);
  addCoreSingleton(DatabaseVersion.class);
  addCoreSingleton(DatabaseBatchCompatibility.class);
  for (  Class daoClass : DaoUtils.getDaoClasses()) {
    addCoreSingleton(daoClass);
  }
  addCoreSingleton(DefaultDatabaseConnector.class);
  addCoreSingleton(ThreadLocalDatabaseSessionFactory.class);
  addAdapter(new DatabaseSessionProvider());
  for (  Object component : boostrapperComponents) {
    addCoreSingleton(component);
  }
  if (!isMavenPluginExecutorRegistered()) {
    addCoreSingleton(FakeMavenPluginExecutor.class);
  }
  addCoreSingleton(BatchPluginRepository.class);
  addCoreSingleton(BatchExtensionInstaller.class);
  addCoreSingleton(BatchDatabaseSettingsLoader.class);
}
