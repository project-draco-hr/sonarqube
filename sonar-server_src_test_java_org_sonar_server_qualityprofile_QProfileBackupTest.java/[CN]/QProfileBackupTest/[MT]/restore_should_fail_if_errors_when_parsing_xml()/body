{
  final RulesProfile profile=mock(RulesProfile.class);
  when(profile.getName()).thenReturn("Default");
  when(profile.getLanguage()).thenReturn("java");
  when(profile.getId()).thenReturn(1);
  doAnswer(new Answer(){
    public Object answer(    InvocationOnMock invocation){
      Object[] args=invocation.getArguments();
      ValidationMessages validationMessages=(ValidationMessages)args[1];
      validationMessages.addErrorText("error!");
      return profile;
    }
  }
).when(xmlProfileParser).parse(any(Reader.class),any(ValidationMessages.class));
  when(hibernateSession.getSingleResult(any(Class.class),eq("name"),eq("Default"),eq("language"),eq("java"))).thenReturn(null);
  when(qProfileLookup.profile(anyInt(),eq(session))).thenReturn(new QProfile().setId(1));
  try {
    backup.restore("<xml/>",false,userSession);
    fail();
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(BadRequestException.class).hasMessage("Fail to restore profile");
    BadRequestException badRequestException=(BadRequestException)e;
    assertThat(badRequestException.errors()).hasSize(1);
    assertThat(badRequestException.errors().get(0).text()).isEqualTo("error!");
  }
  verify(hibernateSession,never()).saveWithoutFlush(any(RulesProfile.class));
  verifyZeroInteractions(ruleRegistry);
  verifyZeroInteractions(dryRunCache);
}
