{
  JavaFile resource=new JavaFile("org.sonar.plugins.jacoco.tests.Hello");
  SensorContext context=mock(SensorContext.class);
  ProjectFileSystem pfs=mock(ProjectFileSystem.class);
  Project project=mock(Project.class);
  when(context.getResource(any(Resource.class))).thenReturn(resource);
  when(pfs.getBuildOutputDir()).thenReturn(outputDir);
  when(pfs.resolvePath(anyString())).thenReturn(jacocoExecutionData);
  when(project.getFileSystem()).thenReturn(pfs);
  sensor.analyse(project,context);
  verify(context).getResource(resource);
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_LINES_TO_COVER,7.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_UNCOVERED_LINES,3.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_COVERAGE_LINE_HITS_DATA,"6=1;7=1;8=1;11=1;15=0;16=0;18=0")));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_CONDITIONS_TO_COVER,2.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_UNCOVERED_CONDITIONS,2.0)));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_CONDITIONS_BY_LINE,"15=2")));
  verify(context).saveMeasure(eq(resource),argThat(new IsMeasure(CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE,"15=0")));
  verifyNoMoreInteractions(context);
}
