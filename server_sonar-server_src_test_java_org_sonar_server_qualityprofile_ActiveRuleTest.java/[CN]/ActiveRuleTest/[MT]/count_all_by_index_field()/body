{
  QualityProfileDto profileDto1=QProfileTesting.newXooP1();
  QualityProfileDto profileDto2=QProfileTesting.newXooP2();
  db.qualityProfileDao().insert(dbSession,profileDto1,profileDto2);
  RuleKey ruleKey=RuleTesting.XOO_X1;
  RuleDto ruleDto=newRuleDto(ruleKey);
  db.deprecatedRuleDao().insert(dbSession,ruleDto);
  ActiveRuleDto activeRule1=ActiveRuleDto.createFor(profileDto1,ruleDto).setSeverity(Severity.MAJOR);
  ActiveRuleDto activeRule2=ActiveRuleDto.createFor(profileDto2,ruleDto).setSeverity(Severity.MAJOR);
  db.deprecatedActiveRuleDao().insert(dbSession,activeRule1,activeRule2);
  dbSession.commit();
  assertThat(index.get(ActiveRuleIndex.class).countAll()).isEqualTo(2);
  Map<String,Long> counts=index.get(ActiveRuleIndex.class).countByField(ActiveRuleNormalizer.ActiveRuleField.PROFILE_KEY);
  assertThat(counts).hasSize(2);
  assertThat(counts.values()).containsOnly(1L,1L);
  assertThat(counts.keySet()).containsOnly(profileDto1.getKey(),profileDto2.getKey());
}
