{
  Organizations.Organization organization=response.getOrganization();
  assertThat(organization.getId()).isEqualTo(dto.getUuid());
  assertThat(organization.getName()).isEqualTo(name);
  assertThat(organization.getKey()).isEqualTo(dto.getKey());
  if (description == null) {
    assertThat(organization.hasDescription()).isFalse();
  }
 else {
    assertThat(organization.getDescription()).isEqualTo(description);
  }
  if (url == null) {
    assertThat(organization.hasUrl()).isFalse();
  }
 else {
    assertThat(organization.getUrl()).isEqualTo(url);
  }
  if (avatar == null) {
    assertThat(organization.hasAvatar()).isFalse();
  }
 else {
    assertThat(organization.getAvatar()).isEqualTo(avatar);
  }
  OrganizationDto newDto=dbTester.getDbClient().organizationDao().selectByUuid(dbTester.getSession(),dto.getUuid()).get();
  assertThat(newDto.getUuid()).isEqualTo(newDto.getUuid());
  assertThat(newDto.getKey()).isEqualTo(newDto.getKey());
  assertThat(newDto.getName()).isEqualTo(name);
  assertThat(newDto.getDescription()).isEqualTo(description);
  assertThat(newDto.getUrl()).isEqualTo(url);
  assertThat(newDto.getAvatarUrl()).isEqualTo(avatar);
  assertThat(newDto.getCreatedAt()).isEqualTo(newDto.getCreatedAt());
  assertThat(newDto.getUpdatedAt()).isEqualTo(updateAt);
}
