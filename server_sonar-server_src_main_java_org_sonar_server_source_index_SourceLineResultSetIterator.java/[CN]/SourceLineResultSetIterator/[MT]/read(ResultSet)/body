{
  String projectUuid=rs.getString(1);
  String fileUuid=rs.getString(2);
  long updatedAt=SqlUtil.getLong(rs,3);
  Date updatedDate=new Date(updatedAt);
  SourceFile result=new SourceFile(fileUuid,updatedAt);
  String csv=rs.getString(4);
  if (StringUtils.isNotEmpty(csv)) {
    int line=1;
    CSVParser csvParser=null;
    try {
      csvParser=new CSVParser(new StringReader(csv),CSVFormat.DEFAULT);
      for (      CSVRecord csvRecord : csvParser) {
        SourceLineDoc doc=new SourceLineDoc(Maps.<String,Object>newHashMapWithExpectedSize(9));
        doc.setProjectUuid(projectUuid);
        doc.setFileUuid(fileUuid);
        doc.setLine(line);
        doc.setUpdateDate(updatedDate);
        doc.setScmRevision(csvRecord.get(0));
        doc.setScmAuthor(csvRecord.get(1));
        doc.setScmDate(DateUtils.parseDateTimeQuietly(csvRecord.get(2)));
        doc.setHighlighting(csvRecord.get(6));
        doc.setSource(csvRecord.get(csvRecord.size() - 1));
        result.addLine(doc);
        line++;
      }
    }
 catch (    IOException ioError) {
      throw new IllegalStateException("Impossible to open stream for file_sources.data with file_uuid " + fileUuid);
    }
catch (    ArrayIndexOutOfBoundsException lineError) {
      throw new IllegalStateException(String.format("Impossible to parse source line data, stuck at line %d",line),lineError);
    }
 finally {
      IOUtils.closeQuietly(csvParser);
    }
  }
  return result;
}
