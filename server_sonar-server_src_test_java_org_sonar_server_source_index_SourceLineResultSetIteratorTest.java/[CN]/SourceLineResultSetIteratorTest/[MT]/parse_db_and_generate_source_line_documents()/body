{
  db.prepareDbUnit(getClass(),"shared.xml");
  FileSourceTesting.updateDataColumn(connection,"FILE_UUID",FileSourceTesting.newFakeData(3).build());
  SourceLineResultSetIterator iterator=SourceLineResultSetIterator.create(dbClient,connection,0L);
  assertThat(iterator.hasNext()).isTrue();
  SourceLineResultSetIterator.SourceFile file=iterator.next();
  assertThat(file.getLines()).hasSize(3);
  SourceLineDoc firstLine=file.getLines().get(0);
  assertThat(firstLine.projectUuid()).isEqualTo("PROJECT_UUID");
  assertThat(firstLine.fileUuid()).isEqualTo("FILE_UUID");
  assertThat(firstLine.line()).isEqualTo(1);
  assertThat(firstLine.scmRevision()).isEqualTo("REVISION_1");
  assertThat(firstLine.scmAuthor()).isEqualTo("AUTHOR_1");
  assertThat(firstLine.highlighting()).isEqualTo("HIGHLIGHTING_1");
  assertThat(firstLine.symbols()).isEqualTo("SYMBOLS_1");
  assertThat(firstLine.source()).isEqualTo("SOURCE_1");
  assertThat(firstLine.utLineHits()).isEqualTo(1);
  assertThat(firstLine.utConditions()).isEqualTo(2);
  assertThat(firstLine.utCoveredConditions()).isEqualTo(3);
  assertThat(firstLine.itLineHits()).isEqualTo(4);
  assertThat(firstLine.itConditions()).isEqualTo(5);
  assertThat(firstLine.itCoveredConditions()).isEqualTo(6);
  assertThat(firstLine.overallLineHits()).isEqualTo(7);
  assertThat(firstLine.overallConditions()).isEqualTo(8);
  assertThat(firstLine.overallCoveredConditions()).isEqualTo(9);
  iterator.close();
}
