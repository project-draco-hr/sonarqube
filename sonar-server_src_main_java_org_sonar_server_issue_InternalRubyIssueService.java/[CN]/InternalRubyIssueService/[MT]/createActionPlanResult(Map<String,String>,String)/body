{
  Result<ActionPlan> result=new Result<ActionPlan>();
  String name=parameters.get("name");
  String description=parameters.get("description");
  String deadLineParam=parameters.get("deadLine");
  String projectParam=parameters.get("projectKey");
  Date deadLine=null;
  if (Strings.isNullOrEmpty(name)) {
    result.addError("errors.cant_be_empty","name");
  }
 else {
    if (name.length() > 200) {
      result.addError("errors.is_too_long","name",200);
    }
  }
  if (!Strings.isNullOrEmpty(description) && description.length() > 1000) {
    result.addError("errors.is_too_long","description",1000);
  }
  if (Strings.isNullOrEmpty(projectParam)) {
    result.addError("errors.cant_be_empty","project");
  }
  if (!Strings.isNullOrEmpty(deadLineParam)) {
    try {
      SimpleDateFormat dateFormat=new SimpleDateFormat("dd/MM/yyyy");
      deadLine=dateFormat.parse(deadLineParam);
      if (deadLine.before(new Date())) {
        result.addError("issues_action_plans.date_cant_be_in_past");
      }
    }
 catch (    Exception e) {
      result.addError("errors.is_not_valid","date");
    }
  }
  if (!Strings.isNullOrEmpty(projectParam) && !Strings.isNullOrEmpty(name) && !name.equals(oldName)&& actionPlanService.isNameAlreadyUsedForProject(name,projectParam)) {
    result.addError("issues_action_plans.same_name_in_same_project");
  }
  DefaultActionPlan actionPlan=DefaultActionPlan.create(name).setDescription(description).setUserLogin(UserSession.get().login()).setDeadLine(deadLine);
  result.setObject(actionPlan);
  return result;
}
