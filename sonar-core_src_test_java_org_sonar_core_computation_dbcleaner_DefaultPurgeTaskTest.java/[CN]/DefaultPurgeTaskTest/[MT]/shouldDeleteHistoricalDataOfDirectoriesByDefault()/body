{
  PurgeDao purgeDao=mock(PurgeDao.class);
  Settings settings=new Settings(new PropertyDefinitions(DataCleanerProperties.all()));
  DefaultPurgeTask task=new DefaultPurgeTask(purgeDao,resourceDao,settings,mock(DefaultPeriodCleaner.class),mock(PurgeProfiler.class));
  task.purge(1L);
  verify(purgeDao).purge(argThat(new ArgumentMatcher<PurgeConfiguration>(){
    @Override public boolean matches(    Object o){
      PurgeConfiguration conf=(PurgeConfiguration)o;
      return conf.rootProjectIdUuid().getId() == 1L && conf.scopesWithoutHistoricalData().length == 2 && conf.scopesWithoutHistoricalData()[0].equals(Scopes.DIRECTORY) && conf.scopesWithoutHistoricalData()[1].equals(Scopes.FILE);
    }
  }
),any(PurgeListener.class));
}
