{
  when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);
  reportReader.putDuplicationBlocks(FILE_REF,Arrays.asList(CPD_TEXT_BLOCK,BatchReport.CpdTextBlock.newBuilder().setHash("b1234353e96320ff").setStartLine(20).setEndLine(15).build()));
  underTest.execute();
  List<Map<String,Object>> dtos=dbTester.select("select hash as \"hash\", start_line as \"startLine\", end_line as \"endLine\", index_in_file as \"indexInFile\", " + "snapshot_id as \"snapshotId\", project_snapshot_id as \"projectSnapshotId\" from duplications_index");
  assertThat(dtos).extracting("hash").containsOnly(CPD_TEXT_BLOCK.getHash(),"b1234353e96320ff");
  assertThat(dtos).extracting("startLine").containsOnly(30L,20L);
  assertThat(dtos).extracting("endLine").containsOnly(45L,15L);
  assertThat(dtos).extracting("indexInFile").containsOnly(0L,1L);
  assertThat(dtos).extracting("snapshotId").containsOnly(FILE_SNAPSHOT_ID);
  assertThat(dtos).extracting("projectSnapshotId").containsOnly(PROJECT_SNAPSHOT_ID);
}
