{
  Optional<Measure> developmentCostMeasure=measureRepository.getRawMeasure(projectView,developmentCostMetric);
  if (developmentCostMeasure.isPresent()) {
    try {
      path.parent().addDevCosts(Long.valueOf(developmentCostMeasure.get().getStringValue()));
    }
 catch (    NumberFormatException e) {
      LOG.trace("Failed to parse value of metric {} for component {}",developmentCostMetric.getName(),projectView.getKey());
    }
  }
  Optional<Measure> reliabilityRatingMeasure=measureRepository.getRawMeasure(projectView,reliabilityRatingMetric);
  if (reliabilityRatingMeasure.isPresent()) {
    path.parent().addReliabilityRating(Rating.valueOf(reliabilityRatingMeasure.get().getData()));
  }
  Optional<Measure> securityRatingMeasure=measureRepository.getRawMeasure(projectView,securityRatingMetric);
  if (securityRatingMeasure.isPresent()) {
    path.parent().addSecurityRating(Rating.valueOf(securityRatingMeasure.get().getData()));
  }
}
