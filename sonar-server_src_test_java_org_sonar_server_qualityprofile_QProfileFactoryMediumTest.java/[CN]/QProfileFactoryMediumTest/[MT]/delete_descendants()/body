{
  initRules();
  db.qualityProfileDao().insert(dbSession,QProfileTesting.newXooP1(),QProfileTesting.newXooP2(),QProfileTesting.newXooP3());
  tester.get(RuleActivator.class).setParent(dbSession,XOO_P2_KEY,XOO_P1_KEY);
  tester.get(RuleActivator.class).setParent(dbSession,XOO_P3_KEY,XOO_P1_KEY);
  tester.get(RuleActivator.class).activate(dbSession,new RuleActivation(RuleTesting.XOO_X1),XOO_P1_KEY);
  dbSession.commit();
  dbSession.clearCache();
  assertThat(db.qualityProfileDao().findAll(dbSession)).hasSize(3);
  assertThat(db.activeRuleDao().findAll(dbSession)).hasSize(3);
  factory.delete(XOO_P1_KEY);
  dbSession.clearCache();
  assertThat(db.qualityProfileDao().findAll(dbSession)).isEmpty();
  assertThat(db.activeRuleDao().findAll(dbSession)).isEmpty();
  assertThat(db.activeRuleDao().findAllParams(dbSession)).isEmpty();
  assertThat(index.get(ActiveRuleIndex.class).findByProfile(XOO_P1_KEY)).isEmpty();
  assertThat(index.get(ActiveRuleIndex.class).findByProfile(XOO_P2_KEY)).isEmpty();
  assertThat(index.get(ActiveRuleIndex.class).findByProfile(XOO_P3_KEY)).isEmpty();
}
