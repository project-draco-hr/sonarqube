{
  Controller controller=tester.controller("api/qualitygates");
  assertThat(controller).isNotNull();
  assertThat(controller.path()).isEqualTo("api/qualitygates");
  assertThat(controller.description()).isNotEmpty();
  assertThat(controller.actions()).hasSize(15);
  Action list=controller.action("list");
  assertThat(list).isNotNull();
  assertThat(list.handler()).isNotNull();
  assertThat(list.since()).isEqualTo("4.3");
  assertThat(list.isPost()).isFalse();
  assertThat(list.isInternal()).isFalse();
  Action show=controller.action("show");
  assertThat(show).isNotNull();
  assertThat(show.handler()).isNotNull();
  assertThat(show.since()).isEqualTo("4.3");
  assertThat(show.isPost()).isFalse();
  assertThat(show.param("id")).isNotNull();
  assertThat(show.isInternal()).isFalse();
  Action create=controller.action("create");
  assertThat(create).isNotNull();
  assertThat(create.handler()).isNotNull();
  assertThat(create.since()).isEqualTo("4.3");
  assertThat(create.isPost()).isTrue();
  assertThat(create.param("name")).isNotNull();
  assertThat(create.isInternal()).isFalse();
  Action copy=controller.action("copy");
  assertThat(copy).isNotNull();
  assertThat(copy.handler()).isNotNull();
  assertThat(copy.since()).isEqualTo("4.3");
  assertThat(copy.isPost()).isTrue();
  assertThat(copy.param("id")).isNotNull();
  assertThat(copy.param("name")).isNotNull();
  assertThat(copy.isInternal()).isFalse();
  Action destroy=controller.action("destroy");
  assertThat(destroy).isNotNull();
  assertThat(destroy.handler()).isNotNull();
  assertThat(destroy.since()).isEqualTo("4.3");
  assertThat(destroy.isPost()).isTrue();
  assertThat(destroy.param("id")).isNotNull();
  assertThat(destroy.isInternal()).isFalse();
  Action rename=controller.action("rename");
  assertThat(rename).isNotNull();
  assertThat(rename.handler()).isNotNull();
  assertThat(rename.since()).isEqualTo("4.3");
  assertThat(rename.isPost()).isTrue();
  assertThat(rename.param("id")).isNotNull();
  assertThat(rename.param("name")).isNotNull();
  assertThat(rename.isInternal()).isFalse();
  Action setDefault=controller.action("set_as_default");
  assertThat(setDefault).isNotNull();
  assertThat(setDefault.handler()).isNotNull();
  assertThat(setDefault.since()).isEqualTo("4.3");
  assertThat(setDefault.isPost()).isTrue();
  assertThat(setDefault.param("id")).isNotNull();
  assertThat(setDefault.isInternal()).isFalse();
  Action unsetDefault=controller.action("unset_default");
  assertThat(unsetDefault).isNotNull();
  assertThat(unsetDefault.handler()).isNotNull();
  assertThat(unsetDefault.since()).isEqualTo("4.3");
  assertThat(unsetDefault.isPost()).isTrue();
  assertThat(unsetDefault.isInternal()).isFalse();
  Action createCondition=controller.action("create_condition");
  assertThat(createCondition).isNotNull();
  assertThat(createCondition.handler()).isNotNull();
  assertThat(createCondition.since()).isEqualTo("4.3");
  assertThat(createCondition.isPost()).isTrue();
  assertThat(createCondition.param("gateId")).isNotNull();
  assertThat(createCondition.param("metric")).isNotNull();
  assertThat(createCondition.param("op")).isNotNull();
  assertThat(createCondition.param("warning")).isNotNull();
  assertThat(createCondition.param("error")).isNotNull();
  assertThat(createCondition.param("period")).isNotNull();
  assertThat(createCondition.isInternal()).isFalse();
  Action updateCondition=controller.action("update_condition");
  assertThat(updateCondition).isNotNull();
  assertThat(updateCondition.handler()).isNotNull();
  assertThat(updateCondition.since()).isEqualTo("4.3");
  assertThat(updateCondition.isPost()).isTrue();
  assertThat(updateCondition.param("id")).isNotNull();
  assertThat(updateCondition.param("metric")).isNotNull();
  assertThat(updateCondition.param("op")).isNotNull();
  assertThat(updateCondition.param("warning")).isNotNull();
  assertThat(updateCondition.param("error")).isNotNull();
  assertThat(updateCondition.param("period")).isNotNull();
  assertThat(updateCondition.isInternal()).isFalse();
  Action deleteCondition=controller.action("delete_condition");
  assertThat(deleteCondition).isNotNull();
  assertThat(deleteCondition.handler()).isNotNull();
  assertThat(deleteCondition.since()).isEqualTo("4.3");
  assertThat(deleteCondition.isPost()).isTrue();
  assertThat(deleteCondition.param("id")).isNotNull();
  assertThat(deleteCondition.isInternal()).isFalse();
  Action appInit=controller.action("app");
  assertThat(appInit.isInternal()).isTrue();
}
