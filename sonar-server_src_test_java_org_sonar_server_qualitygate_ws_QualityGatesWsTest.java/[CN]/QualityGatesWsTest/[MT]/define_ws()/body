{
  WebService.Controller controller=tester.controller("api/qualitygates");
  assertThat(controller).isNotNull();
  assertThat(controller.path()).isEqualTo("api/qualitygates");
  assertThat(controller.description()).isNotEmpty();
  assertThat(controller.actions()).hasSize(8);
  WebService.Action list=controller.action("list");
  assertThat(list).isNotNull();
  assertThat(list.handler()).isNotNull();
  assertThat(list.since()).isEqualTo("4.3");
  assertThat(list.isPost()).isFalse();
  assertThat(list.isPrivate()).isFalse();
  WebService.Action show=controller.action("show");
  assertThat(show).isNotNull();
  assertThat(show.handler()).isNotNull();
  assertThat(show.since()).isEqualTo("4.3");
  assertThat(show.isPost()).isFalse();
  assertThat(show.param("id")).isNotNull();
  assertThat(show.isPrivate()).isFalse();
  WebService.Action create=controller.action("create");
  assertThat(create).isNotNull();
  assertThat(create.handler()).isNotNull();
  assertThat(create.since()).isEqualTo("4.3");
  assertThat(create.isPost()).isTrue();
  assertThat(create.param("name")).isNotNull();
  assertThat(create.isPrivate()).isFalse();
  WebService.Action destroy=controller.action("destroy");
  assertThat(destroy).isNotNull();
  assertThat(destroy.handler()).isNotNull();
  assertThat(destroy.since()).isEqualTo("4.3");
  assertThat(destroy.isPost()).isTrue();
  assertThat(destroy.param("id")).isNotNull();
  assertThat(destroy.isPrivate()).isFalse();
  WebService.Action rename=controller.action("rename");
  assertThat(rename).isNotNull();
  assertThat(rename.handler()).isNotNull();
  assertThat(rename.since()).isEqualTo("4.3");
  assertThat(rename.isPost()).isTrue();
  assertThat(rename.param("id")).isNotNull();
  assertThat(rename.param("name")).isNotNull();
  assertThat(rename.isPrivate()).isFalse();
  WebService.Action setDefault=controller.action("set_as_default");
  assertThat(setDefault).isNotNull();
  assertThat(setDefault.handler()).isNotNull();
  assertThat(setDefault.since()).isEqualTo("4.3");
  assertThat(setDefault.isPost()).isTrue();
  assertThat(setDefault.param("id")).isNotNull();
  assertThat(setDefault.isPrivate()).isFalse();
  WebService.Action unsetDefault=controller.action("unset_default");
  assertThat(unsetDefault).isNotNull();
  assertThat(unsetDefault.handler()).isNotNull();
  assertThat(unsetDefault.since()).isEqualTo("4.3");
  assertThat(unsetDefault.isPost()).isTrue();
  assertThat(unsetDefault.isPrivate()).isFalse();
  WebService.Action createCondition=controller.action("create_condition");
  assertThat(createCondition).isNotNull();
  assertThat(createCondition.handler()).isNotNull();
  assertThat(createCondition.since()).isEqualTo("4.3");
  assertThat(createCondition.isPost()).isTrue();
  assertThat(createCondition.param("gateId")).isNotNull();
  assertThat(createCondition.param("metric")).isNotNull();
  assertThat(createCondition.param("op")).isNotNull();
  assertThat(createCondition.param("warning")).isNotNull();
  assertThat(createCondition.param("error")).isNotNull();
  assertThat(createCondition.param("period")).isNotNull();
  assertThat(createCondition.isPrivate()).isFalse();
}
