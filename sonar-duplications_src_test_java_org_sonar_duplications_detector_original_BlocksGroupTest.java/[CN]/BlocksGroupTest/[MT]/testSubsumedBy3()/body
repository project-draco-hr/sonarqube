{
  assertThat(newBlocksGroup(newBlock("a",2),newBlock("b",0)).subsumedBy(newBlocksGroup(newBlock("a",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",3),newBlock("b",1)).subsumedBy(newBlocksGroup(newBlock("a",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",4),newBlock("b",2)).subsumedBy(newBlocksGroup(newBlock("a",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",5),newBlock("b",3)).subsumedBy(newBlocksGroup(newBlock("a",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",3),newBlock("b",1)).subsumedBy(newBlocksGroup(newBlock("a",2),newBlock("b",0)),1),is(true));
  assertThat(newBlocksGroup(newBlock("a",4),newBlock("b",2),newBlock("c",0)).subsumedBy(newBlocksGroup(newBlock("a",3),newBlock("b",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",5),newBlock("b",3),newBlock("c",1)).subsumedBy(newBlocksGroup(newBlock("a",3),newBlock("b",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",6),newBlock("c",2)).subsumedBy(newBlocksGroup(newBlock("a",3),newBlock("b",1)),1),is(false));
  assertThat(newBlocksGroup(newBlock("a",5),newBlock("b",3),newBlock("c",1)).subsumedBy(newBlocksGroup(newBlock("a",4),newBlock("b",2),newBlock("c",0)),1),is(true));
  assertThat(newBlocksGroup(newBlock("a",6),newBlock("c",2)).subsumedBy(newBlocksGroup(newBlock("a",5),newBlock("b",3),newBlock("c",1)),1),is(true));
}
