{
  assertThat(newBlocksGroup(newBlock("a",2),newBlock("b",0)).intersect(newBlocksGroup(newBlock("a",3),newBlock("b",1))).size(),is(2));
  assertThat(newBlocksGroup(newBlock("a",3),newBlock("b",1)).intersect(newBlocksGroup(newBlock("a",4),newBlock("b",2),newBlock("c",0))).size(),is(2));
  assertThat(newBlocksGroup(newBlock("a",4),newBlock("b",2)).intersect(newBlocksGroup(newBlock("a",5),newBlock("b",3),newBlock("c",1))).size(),is(2));
  assertThat(newBlocksGroup(newBlock("a",5),newBlock("b",3)).intersect(newBlocksGroup(newBlock("a",6),newBlock("c",2))).size(),is(1));
  assertThat(newBlocksGroup(newBlock("a",4),newBlock("b",2),newBlock("c",0)).intersect(newBlocksGroup(newBlock("a",5),newBlock("b",3),newBlock("c",1))).size(),is(3));
  assertThat(newBlocksGroup(newBlock("a",5),newBlock("b",3),newBlock("c",1)).intersect(newBlocksGroup(newBlock("a",6),newBlock("c",2))).size(),is(2));
  assertThat(newBlocksGroup(newBlock("a",6),newBlock("c",7)).intersect(newBlocksGroup(newBlock("a",7))).size(),is(1));
}
