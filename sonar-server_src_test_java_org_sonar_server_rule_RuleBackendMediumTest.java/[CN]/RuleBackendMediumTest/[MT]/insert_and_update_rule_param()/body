{
  RuleKey ruleKey=RuleKey.of("javascript","S001");
  RuleDto ruleDto=newRuleDto(ruleKey).setTags(ImmutableSet.of("hello")).setName("first name");
  dao.insert(dbSession,ruleDto);
  dbSession.commit();
  RuleParamDto minParamDto=new RuleParamDto().setName("min").setType(RuleParamType.INTEGER.type()).setDefaultValue("2").setDescription("Minimum");
  dao.addRuleParam(dbSession,ruleDto,minParamDto);
  RuleParamDto maxParamDto=new RuleParamDto().setName("max").setType(RuleParamType.INTEGER.type()).setDefaultValue("10").setDescription("Maximum");
  dao.addRuleParam(dbSession,ruleDto,maxParamDto);
  dbSession.commit();
  Rule hit=index.getByKey(ruleKey);
  assertThat(hit.params()).hasSize(2);
  RuleParam param=hit.params().get(0);
  assertThat(param.key()).isEqualTo("min");
  assertThat(param.defaultValue()).isEqualTo("2");
  assertThat(param.description()).isEqualTo("Minimum");
  minParamDto.setDefaultValue("0.5").setDescription("new description");
  dao.updateRuleParam(dbSession,ruleDto,minParamDto);
  dbSession.commit();
  hit=index.getByKey(ruleKey);
  assertThat(hit.params()).hasSize(2);
  param=null;
  for (  RuleParam pparam : hit.params()) {
    if (pparam.key().equals("min")) {
      param=pparam;
    }
  }
  assertThat(param).isNotNull();
  assertThat(param.key()).isEqualTo("min");
  assertThat(param.defaultValue()).isEqualTo("0.5");
  assertThat(param.description()).isEqualTo("new description");
}
