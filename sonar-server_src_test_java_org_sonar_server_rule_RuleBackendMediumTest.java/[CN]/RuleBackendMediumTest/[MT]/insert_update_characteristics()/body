{
  CharacteristicDto char1=DebtTesting.newCharacteristicDto("c1");
  db.debtCharacteristicDao().insert(char1,dbSession);
  dbSession.commit();
  CharacteristicDto char11=DebtTesting.newCharacteristicDto("c11").setParentId(char1.getId());
  db.debtCharacteristicDao().insert(char11,dbSession);
  RuleKey ruleKey=RuleKey.of("test","r1");
  RuleDto ruleDto=newRuleDto(ruleKey).setDefaultSubCharacteristicId(char11.getId());
  dao.insert(dbSession,ruleDto);
  dbSession.commit();
  assertThat(db.debtCharacteristicDao().selectByKey("c1",dbSession)).isNotNull();
  assertThat(db.debtCharacteristicDao().selectByKey("c1",dbSession).getParentId()).isNull();
  assertThat(db.debtCharacteristicDao().selectByKey("c11",dbSession)).isNotNull();
  assertThat(db.debtCharacteristicDao().selectByKey("c11",dbSession).getParentId()).isEqualTo(char1.getId());
  Rule rule=index.getByKey(ruleKey);
  assertThat(rule.debtCharacteristicKey()).isEqualTo(char1.getKey());
  assertThat(rule.debtSubCharacteristicKey()).isEqualTo(char11.getKey());
  CharacteristicDto char2=DebtTesting.newCharacteristicDto("c2");
  db.debtCharacteristicDao().insert(char2,dbSession);
  CharacteristicDto char21=DebtTesting.newCharacteristicDto("c21").setParentId(char2.getId());
  db.debtCharacteristicDao().insert(char21,dbSession);
  ruleDto.setSubCharacteristicId(char21.getId());
  dao.update(dbSession,ruleDto);
  dbSession.commit();
  rule=index.getByKey(ruleKey);
  assertThat(rule.debtCharacteristicKey()).isEqualTo(char2.getKey());
  assertThat(rule.debtSubCharacteristicKey()).isEqualTo(char21.getKey());
  assertThat(rule.debtOverloaded()).isTrue();
  assertThat(rule.defaultDebtCharacteristicKey()).isEqualTo(char1.getKey());
  assertThat(rule.defaultDebtSubCharacteristicKey()).isEqualTo(char11.getKey());
}
