{
  LogFactory.useSlf4jLogging();
  Configuration conf=new Configuration();
  conf.setEnvironment(new Environment("production",createTransactionFactory(),database.getDataSource()));
  conf.setUseGeneratedKeys(true);
  conf.setLazyLoadingEnabled(false);
  conf.getVariables().setProperty("_true",database.getDialect().getTrueSqlValue());
  conf.getVariables().setProperty("_false",database.getDialect().getFalseSqlValue());
  loadAlias(conf,"ActiveDashboard",ActiveDashboardDto.class);
  loadAlias(conf,"Dashboard",DashboardDto.class);
  loadAlias(conf,"DuplicationUnit",DuplicationUnitDto.class);
  loadAlias(conf,"LoadedTemplate",LoadedTemplateDto.class);
  loadAlias(conf,"PurgeableSnapshot",PurgeableSnapshotDto.class);
  loadAlias(conf,"Review",ReviewDto.class);
  loadAlias(conf,"Resource",ResourceDto.class);
  loadAlias(conf,"ResourceIndex",ResourceIndexDto.class);
  loadAlias(conf,"Rule",RuleDto.class);
  loadAlias(conf,"Snapshot",SnapshotDto.class);
  loadAlias(conf,"SchemaMigration",SchemaMigrationDto.class);
  loadAlias(conf,"Widget",WidgetDto.class);
  loadAlias(conf,"WidgetProperty",WidgetPropertyDto.class);
  loadMapper(conf,ActiveDashboardMapper.class);
  loadMapper(conf,DashboardMapper.class);
  loadMapper(conf,DuplicationMapper.class);
  loadMapper(conf,LoadedTemplateMapper.class);
  loadMapper(conf,PropertiesMapper.class);
  loadMapper(conf,PurgeMapper.class);
  loadMapper(conf,PurgeVendorMapper.class);
  loadMapper(conf,ResourceMapper.class);
  loadMapper(conf,ReviewMapper.class);
  loadMapper(conf,ResourceIndexerMapper.class);
  loadMapper(conf,RuleMapper.class);
  loadMapper(conf,SchemaMigrationMapper.class);
  loadMapper(conf,WidgetMapper.class);
  loadMapper(conf,WidgetPropertyMapper.class);
  sessionFactory=new SqlSessionFactoryBuilder().build(conf);
  return this;
}
