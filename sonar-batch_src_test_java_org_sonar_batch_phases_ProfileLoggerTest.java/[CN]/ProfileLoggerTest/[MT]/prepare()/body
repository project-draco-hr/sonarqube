{
  languages=mock(ModuleLanguages.class);
  List<Language> languageList=Lists.newArrayList();
  languageList.add(new AbstractLanguage("java","Java"){
    @Override public String[] getFileSuffixes(){
      return null;
    }
  }
);
  languageList.add(new AbstractLanguage("cobol","Cobol"){
    @Override public String[] getFileSuffixes(){
      return null;
    }
  }
);
  when(languages.languages()).thenReturn(languageList);
  profiles=mock(ModuleQProfiles.class);
  QProfile javaProfile=mock(QProfile.class);
  when(javaProfile.name()).thenReturn("My Java profile");
  when(profiles.findByLanguage("java")).thenReturn(javaProfile);
  QProfile cobolProfile=mock(QProfile.class);
  when(cobolProfile.name()).thenReturn("My Cobol profile");
  when(profiles.findByLanguage("cobol")).thenReturn(cobolProfile);
  settings=new Settings();
}
