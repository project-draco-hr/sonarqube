{
  File coverPerTest=new File(baseDir,"test/fooTest.xoo.coveragePerTest");
  FileUtils.write(coverPerTest,"test1:src/foo.xoo:1,2,3,4\ntest2:src/foo.xoo:5,6,7\n\n#comment");
  DefaultInputFile inputFile=new DefaultInputFile("foo","src/foo.xoo").setAbsolutePath(new File(baseDir,"src/foo.xoo").getAbsolutePath()).setLanguage("xoo");
  DefaultInputFile testFile=new DefaultInputFile("foo","test/fooTest.xoo").setAbsolutePath(new File(baseDir,"test/fooTest.xoo").getAbsolutePath()).setLanguage("xoo").setType(Type.TEST);
  fileSystem.add(inputFile);
  fileSystem.add(testFile);
  final SensorStorage sensorStorage=mock(SensorStorage.class);
  when(context.newTestCaseCoverage()).thenAnswer(new Answer<TestCaseCoverage>(){
    @Override public TestCaseCoverage answer(    InvocationOnMock invocation) throws Throwable {
      return new DefaultTestCaseCoverage(sensorStorage);
    }
  }
);
  sensor.execute(context);
  verify(sensorStorage).store(new DefaultTestCaseCoverage().testFile(testFile).testName("test1").cover(inputFile).onLines(Arrays.asList(1,2,3,4)));
  verify(sensorStorage).store(new DefaultTestCaseCoverage().testFile(testFile).testName("test2").cover(inputFile).onLines(Arrays.asList(5,6,7)));
}
