{
  orchestrator.getServer().provisionProject("sample","xoo-sample");
  orchestrator.getServer().associateProjectToQualityProfile("sample","xoo","one-issue-per-line");
  BuildResult buildResult=scanQuietly("shared/xoo-sample","sonar.projectKey","ar g$l:");
  assertThat(buildResult.getLastStatus()).isEqualTo(1);
  assertThat(buildResult.getLogs()).contains("\"ar g$l:\" is not a valid project or module key").contains("Allowed characters");
  buildResult=scanQuietly("shared/xoo-sample","sonar.projectKey","12345");
  assertThat(buildResult.getLastStatus()).isEqualTo(1);
  assertThat(buildResult.getLogs()).contains("\"12345\" is not a valid project or module key").contains("Allowed characters");
  buildResult=scanQuietly("shared/xoo-sample","sonar.branch","ar g$l:");
  assertThat(buildResult.getLastStatus()).isEqualTo(1);
  assertThat(buildResult.getLogs()).contains("\"ar g$l:\" is not a valid branch").contains("Allowed characters");
}
