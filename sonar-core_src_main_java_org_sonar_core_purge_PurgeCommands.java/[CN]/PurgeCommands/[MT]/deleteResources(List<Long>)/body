{
  for (  Long resourceId : resourceIds) {
    deleteSnapshots(PurgeSnapshotQuery.create().setResourceId(resourceId));
  }
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceLinks(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceProperties(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceIndex(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceGroupRoles(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceUserRoles(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceManualMeasures(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceReviewComments(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceActionPlansReviews(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceReviews(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceActionPlans(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceEvents(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceGraphs(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResource(resourceId);
  }
  session.commit();
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteAuthors(resourceId);
  }
  session.commit();
}
