{
  for (  Long resourceId : resourceIds) {
    deleteSnapshots(PurgeSnapshotQuery.create().setResourceId(resourceId));
  }
  profiler.start("deleteResourceLinks (project_links)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceLinks(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceProperties (properties)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceProperties(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceIndex (resource_index)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceIndex(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceGroupRoles (group_roles)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceGroupRoles(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceUserRoles (user_roles)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceUserRoles(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceManualMeasures (manual_measures)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceManualMeasures(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceReviewComments (review_comments)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceReviewComments(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceActionPlansReviews (action_plans_reviews)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceActionPlansReviews(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceReviews (reviews)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceReviews(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceIssueChanges (issue_changes)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceIssueChanges(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceActionPlansIssues (action_plans_issues)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceActionPlansIssues(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceIssues (issues)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceIssues(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceActionPlans (action_plans)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceActionPlans(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceEvents (events)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceEvents(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceGraphs (graphs)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResourceGraphs(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResource (projects)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteResource(resourceId);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteAuthors (authors)");
  for (  Long resourceId : resourceIds) {
    purgeMapper.deleteAuthors(resourceId);
  }
  session.commit();
  profiler.stop();
}
