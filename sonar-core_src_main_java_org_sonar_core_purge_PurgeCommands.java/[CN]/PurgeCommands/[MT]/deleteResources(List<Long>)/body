{
  List<List<Long>> resourceIdsPartition=Lists.partition(resourceIds,MAX_RESOURCES_PER_QUERY);
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    deleteSnapshots(purgeMapper.selectSnapshotIdsByResource(partResourceIds));
  }
  profiler.start("deleteResourceLinks (project_links)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceLinks(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceProperties (properties)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceProperties(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceIndex (resource_index)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceIndex(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceGroupRoles (group_roles)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceGroupRoles(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceUserRoles (user_roles)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceUserRoles(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceManualMeasures (manual_measures)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceManualMeasures(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceIssueChanges (issue_changes)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceIssueChanges(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceIssues (issues)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceIssues(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceActionPlans (action_plans)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceActionPlans(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceEvents (events)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceEvents(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResourceGraphs (graphs)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResourceGraphs(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteResource (projects)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteResource(partResourceIds);
  }
  session.commit();
  profiler.stop();
  profiler.start("deleteAuthors (authors)");
  for (  List<Long> partResourceIds : resourceIdsPartition) {
    purgeMapper.deleteAuthors(partResourceIds);
  }
  session.commit();
  profiler.stop();
}
