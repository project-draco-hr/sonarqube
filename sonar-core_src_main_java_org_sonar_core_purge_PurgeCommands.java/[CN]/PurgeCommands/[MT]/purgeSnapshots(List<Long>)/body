{
  deleteSnapshotDependencies(snapshotIds);
  deleteSnapshotDuplications(snapshotIds);
  deleteSnapshotSources(snapshotIds);
  deleteSnapshotGraphs(snapshotIds);
  deleteSnapshotData(snapshotIds);
  profiler.start("deleteSnapshotWastedMeasures (project_measures)");
  List<Long> metricIdsWithoutHistoricalData=purgeMapper.selectMetricIdsWithoutHistoricalData();
  if (!metricIdsWithoutHistoricalData.isEmpty()) {
    for (    Long snapshotId : snapshotIds) {
      purgeMapper.deleteSnapshotWastedMeasures(snapshotId,metricIdsWithoutHistoricalData);
    }
    session.commit();
  }
  profiler.stop();
  profiler.start("deleteSnapshotMeasuresOnCharacteristics (project_measures)");
  List<Long> characteristicIds=purgeMapper.selectCharacteristicIdsToPurge();
  if (!characteristicIds.isEmpty()) {
    for (    Long snapshotId : snapshotIds) {
      for (      List<Long> ids : Iterables.partition(characteristicIds,MAX_CHARACTERISTICS_PER_QUERY)) {
        purgeMapper.deleteSnapshotMeasuresOnCharacteristics(snapshotId,ids);
      }
    }
    session.commit();
  }
  profiler.stop();
  profiler.start("updatePurgeStatusToOne (snapshots)");
  for (  Long snapshotId : snapshotIds) {
    purgeMapper.updatePurgeStatusToOne(snapshotId);
  }
  session.commit();
  profiler.stop();
}
