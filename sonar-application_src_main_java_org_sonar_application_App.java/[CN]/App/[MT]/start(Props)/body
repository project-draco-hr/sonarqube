{
  try {
    Logger logger=LoggerFactory.getLogger(getClass());
    monitor.start();
    File homeDir=props.nonNullValueAsFile("sonar.path.home");
    File tempDir=props.nonNullValueAsFile("sonar.path.temp");
    elasticsearch=new ProcessWrapper(JmxUtils.SEARCH_SERVER_NAME);
    elasticsearch.setWorkDir(homeDir).setJmxPort(props.valueAsInt(DefaultSettings.SEARCH_JMX_PORT)).addJavaOpts(props.value(DefaultSettings.SEARCH_JAVA_OPTS)).setTempDirectory(tempDir.getAbsoluteFile()).setClassName("org.sonar.search.SearchServer").addProperties(props.rawProperties()).addClasspath("./lib/common/*").addClasspath("./lib/search/*");
    if (elasticsearch.execute()) {
      monitor.monitor(elasticsearch);
      if (elasticsearch.waitForReady()) {
        logger.info("search server is up");
        if (StringUtils.isEmpty(props.value(DefaultSettings.CLUSTER_MASTER))) {
          server=new ProcessWrapper(JmxUtils.WEB_SERVER_NAME).setWorkDir(homeDir).setJmxPort(props.valueAsInt(DefaultSettings.WEB_JMX_PORT)).addJavaOpts(props.nonNullValue(DefaultSettings.WEB_JAVA_OPTS)).setTempDirectory(tempDir.getAbsoluteFile()).setLogDir(props.nonNullValueAsFile("sonar.path.logs")).setClassName("org.sonar.server.app.WebServer").addProperties(props.rawProperties()).addClasspath("./lib/common/*").addClasspath("./lib/server/*");
          String driverPath=props.value(JdbcSettings.PROPERTY_DRIVER_PATH);
          if (driverPath != null) {
            server.addClasspath(driverPath);
          }
          if (server.execute()) {
            monitor.monitor(server);
            if (server.waitForReady()) {
              success=true;
              logger.info("web server is up");
              monitor.join();
            }
          }
        }
 else {
          success=true;
          monitor.join();
        }
      }
    }
  }
  finally {
    terminate();
  }
}
