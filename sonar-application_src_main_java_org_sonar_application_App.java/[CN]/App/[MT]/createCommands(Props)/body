{
  List<JavaCommand> commands=new ArrayList<JavaCommand>();
  File homeDir=props.nonNullValueAsFile("sonar.path.home");
  File tempDir=props.nonNullValueAsFile("sonar.path.temp");
  JavaCommand elasticsearch=new JavaCommand("search");
  elasticsearch.setWorkDir(homeDir).addJavaOptions(props.value(DefaultSettings.SEARCH_JAVA_OPTS)).setTempDir(tempDir.getAbsoluteFile()).setClassName("org.sonar.search.SearchServer").setArguments(props.rawProperties()).addClasspath("./lib/common/*").addClasspath("./lib/search/*");
  commands.add(elasticsearch);
  if (StringUtils.isEmpty(props.value(DefaultSettings.CLUSTER_MASTER))) {
    JavaCommand webServer=new JavaCommand("web").setWorkDir(homeDir).addJavaOptions(props.nonNullValue(DefaultSettings.WEB_JAVA_OPTS)).setTempDir(tempDir.getAbsoluteFile()).setEnvVariable("sonar.path.logs",props.nonNullValue("sonar.path.logs")).setClassName("org.sonar.server.app.WebServer").setArguments(props.rawProperties()).addClasspath("./lib/common/*").addClasspath("./lib/server/*");
    String driverPath=props.value(JdbcSettings.PROPERTY_DRIVER_PATH);
    if (driverPath != null) {
      webServer.addClasspath(driverPath);
    }
    commands.add(webServer);
  }
  return commands;
}
