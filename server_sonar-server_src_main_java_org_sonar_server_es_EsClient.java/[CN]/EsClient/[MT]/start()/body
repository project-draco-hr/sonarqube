{
  if (nativeClient == null) {
    ESLoggerFactory.setDefaultFactory(new Slf4jESLoggerFactory());
    org.elasticsearch.common.settings.Settings esSettings=org.elasticsearch.common.settings.Settings.builder().put("node.name",defaultIfEmpty(settings.getString(ProcessProperties.CLUSTER_NODE_NAME),"sq_local_client")).put("node.rack_id",defaultIfEmpty(settings.getString(ProcessProperties.CLUSTER_NODE_NAME),"unknown")).put("cluster.name",StringUtils.defaultIfBlank(settings.getString(ProcessProperties.CLUSTER_NAME),"sonarqube")).build();
    nativeClient=TransportClient.builder().settings(esSettings).build();
    String host=settings.getString(ProcessProperties.SEARCH_HOST);
    try {
      ((TransportClient)nativeClient).addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(host),settings.getInt(ProcessProperties.SEARCH_PORT)));
    }
 catch (    UnknownHostException e) {
      throw new IllegalStateException("Can not resolve host [" + host + "]",e);
    }
  }
}
