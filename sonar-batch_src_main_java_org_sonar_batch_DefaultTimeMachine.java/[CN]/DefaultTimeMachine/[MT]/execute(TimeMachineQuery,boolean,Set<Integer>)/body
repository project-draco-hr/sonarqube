{
  Resource resource=query.getResource();
  if (resource != null && resource.getId() == null) {
    resource=index.getResource(query.getResource());
  }
  if (resource == null) {
    return Collections.emptyList();
  }
  StringBuilder sb=new StringBuilder();
  Map<String,Object> params=Maps.newHashMap();
  if (selectAllFields) {
    sb.append("SELECT m, s.createdAt ");
  }
 else {
    sb.append("SELECT s.createdAt, m.metricId, m.value ");
  }
  sb.append(" FROM ").append(MeasureModel.class.getSimpleName()).append(" m, ").append(Snapshot.class.getSimpleName()).append(" s WHERE m.snapshotId=s.id AND s.resourceId=:resourceId AND s.status=:status AND s.qualifier<>:lib");
  params.put("resourceId",resource.getId());
  params.put("status",Snapshot.STATUS_PROCESSED);
  params.put("lib",Qualifiers.LIBRARY);
  sb.append(" AND m.characteristic IS NULL");
  sb.append(" AND m.committer IS NULL");
  sb.append(" AND m.ruleId IS NULL AND m.rulePriority IS NULL");
  if (!metricIds.isEmpty()) {
    sb.append(" AND m.metricId IN (:metricIds) ");
    params.put("metricIds",metricIds);
  }
  if (query.isFromCurrentAnalysis()) {
    sb.append(" AND s.createdAt>=:from ");
    params.put("from",index.getProject().getAnalysisDate());
  }
 else   if (query.getFrom() != null) {
    sb.append(" AND s.createdAt>=:from ");
    params.put("from",query.getFrom());
  }
  if (query.isToCurrentAnalysis()) {
    sb.append(" AND s.createdAt<=:to ");
    params.put("to",index.getProject().getAnalysisDate());
  }
 else   if (query.getTo() != null) {
    sb.append(" AND s.createdAt<=:to ");
    params.put("to",query.getTo());
  }
  if (query.isOnlyLastAnalysis()) {
    sb.append(" AND s.last=:last ");
    params.put("last",Boolean.TRUE);
  }
  sb.append(" ORDER BY s.createdAt ");
  Query jpaQuery=session.createQuery(sb.toString());
  for (  Map.Entry<String,Object> entry : params.entrySet()) {
    jpaQuery.setParameter(entry.getKey(),entry.getValue());
  }
  return jpaQuery.getResultList();
}
