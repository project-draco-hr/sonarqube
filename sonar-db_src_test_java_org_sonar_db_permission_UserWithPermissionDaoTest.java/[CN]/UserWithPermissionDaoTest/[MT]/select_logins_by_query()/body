{
  UserDto user1=userDb.insertUser(newUserDto());
  UserDto user2=userDb.insertUser(newUserDto());
  UserDto user3=userDb.insertUser(newUserDto());
  UserDto user4=userDb.insertUser(newUserDto());
  ComponentDto project=componentDb.insertComponent(newProjectDto());
  permissionDb.addGlobalPermissionToUser(SYSTEM_ADMIN,user1.getId());
  permissionDb.addGlobalPermissionToUser(SYSTEM_ADMIN,user2.getId());
  permissionDb.addGlobalPermissionToUser(SYSTEM_ADMIN,user3.getId());
  permissionDb.addGlobalPermissionToUser(PROVISIONING,user3.getId());
  permissionDb.addProjectPermissionToUser(USER,user4.getId(),project.getId());
  assertThat(selectLoginsByQuery(PermissionQuery.builder().build())).containsOnly(user1.getLogin(),user2.getLogin(),user3.getLogin(),user4.getLogin());
  assertThat(selectLoginsByQuery(PermissionQuery.builder().setPermission(PROVISIONING).build())).containsOnly(user3.getLogin());
  assertThat(selectLoginsByQuery(PermissionQuery.builder().withPermissionOnly().setComponentUuid(project.uuid()).build())).containsOnly(user4.getLogin());
}
