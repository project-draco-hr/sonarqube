{
  UserDto user3=userDb.insertUser(newUserDto().setName("3-name"));
  UserDto user2=userDb.insertUser(newUserDto().setName("2-name"));
  UserDto user1=userDb.insertUser(newUserDto().setName("1-name"));
  UserDto user4=userDb.insertUser(newUserDto().setName("4-name"));
  ComponentDto project=componentDb.insertComponent(newProjectDto("project-uuid"));
  permissionDb.addGlobalPermissionToUser(SCAN_EXECUTION,user3.getId());
  permissionDb.addGlobalPermissionToUser(PROVISIONING,user3.getId());
  permissionDb.addGlobalPermissionToUser(SCAN_EXECUTION,user2.getId());
  permissionDb.addGlobalPermissionToUser(SYSTEM_ADMIN,user1.getId());
  permissionDb.addProjectPermissionToUser(SCAN_EXECUTION,user4.getId(),project.getId());
  PermissionQuery.Builder dbQuery=PermissionQuery.builder().setComponentUuid(null).setPermission(SCAN_EXECUTION).withAtLeastOnePermission();
  List<String> result=selectLoginsByQuery(dbQuery.build());
  int count=countUsersByQuery(dbQuery.build());
  assertThat(result).hasSize(2).containsExactly(user2.getLogin(),user3.getLogin());
  assertThat(count).isEqualTo(2);
}
