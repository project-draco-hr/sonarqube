{
  addDuplicatedBlock(FILE_1_REF,2);
  addDuplicatedBlock(FILE_3_REF,10);
  addDuplicatedBlock(FILE_4_REF,12);
  setChangesets(FILE_1_REF);
  setChangesets(FILE_2_REF);
  setChangesets(FILE_3_REF);
  setChangesets(FILE_4_REF);
  underTest.execute();
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_1_REF,NEW_DUPLICATED_LINES_KEY,2d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_2_REF,NEW_DUPLICATED_LINES_KEY,0d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_3_REF,NEW_DUPLICATED_LINES_KEY,9d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_4_REF,NEW_DUPLICATED_LINES_KEY,11d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(DIRECTORY_REF,NEW_DUPLICATED_LINES_KEY,2d);
  assertNoRawMeasure(DIRECTORY_2_REF,NEW_DUPLICATED_LINES_KEY);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(SUB_MODULE_1_REF,NEW_DUPLICATED_LINES_KEY,2d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(SUB_MODULE_2_REF,NEW_DUPLICATED_LINES_KEY,20d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(MODULE_REF,NEW_DUPLICATED_LINES_KEY,22d);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(ROOT_REF,NEW_DUPLICATED_LINES_KEY,22d);
}
