{
  addDuplicatedBlock(FILE_1_REF,11);
  addDuplicatedBlock(FILE_2_REF,2);
  addDuplicatedBlock(FILE_4_REF,7);
  setChangesets(FILE_1_REF,FILE_2_REF,FILE_3_REF,FILE_4_REF);
  underTest.execute();
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_1_REF,NEW_BLOCKS_DUPLICATED_KEY,10);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_2_REF,NEW_BLOCKS_DUPLICATED_KEY,2);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_3_REF,NEW_BLOCKS_DUPLICATED_KEY,0);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_4_REF,NEW_BLOCKS_DUPLICATED_KEY,6);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(DIRECTORY_REF,NEW_BLOCKS_DUPLICATED_KEY,12);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(SUB_MODULE_1_REF,NEW_BLOCKS_DUPLICATED_KEY,12);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(SUB_MODULE_2_REF,NEW_BLOCKS_DUPLICATED_KEY,6);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(MODULE_REF,NEW_BLOCKS_DUPLICATED_KEY,18);
  assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(ROOT_REF,NEW_BLOCKS_DUPLICATED_KEY,18);
}
