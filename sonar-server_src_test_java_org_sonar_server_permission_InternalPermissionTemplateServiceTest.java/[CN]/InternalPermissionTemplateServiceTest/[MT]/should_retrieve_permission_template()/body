{
  List<PermissionTemplateUserDto> usersPermissions=Lists.newArrayList(buildUserPermission("user_scan",GlobalPermission.SCAN_EXECUTION.key()),buildUserPermission("user_dry_run",GlobalPermission.DRY_RUN_EXECUTION.key()),buildUserPermission("user_scan_and_dry_run",GlobalPermission.SCAN_EXECUTION.key()),buildUserPermission("user_scan_and_dry_run",GlobalPermission.DRY_RUN_EXECUTION.key()));
  List<PermissionTemplateGroupDto> groupsPermissions=Lists.newArrayList(buildGroupPermission("admin_group",GlobalPermission.SYSTEM_ADMIN.key()),buildGroupPermission("scan_group",GlobalPermission.SCAN_EXECUTION.key()),buildGroupPermission(null,GlobalPermission.DRY_RUN_EXECUTION.key()));
  PermissionTemplateDto permissionTemplateDto=new PermissionTemplateDto().setId(1L).setName("my template").setDescription("my description").setUsersPermissions(usersPermissions).setGroupsByPermission(groupsPermissions);
  when(permissionTemplateDao.selectPermissionTemplate("my template")).thenReturn(permissionTemplateDto);
  PermissionTemplate permissionTemplate=permissionTemplateService.selectPermissionTemplate("my template");
  assertThat(permissionTemplate.getUsersForPermission(GlobalPermission.DASHBOARD_SHARING.key())).isEmpty();
  assertThat(permissionTemplate.getUsersForPermission(GlobalPermission.SCAN_EXECUTION.key())).onProperty("userName").containsOnly("user_scan","user_scan_and_dry_run");
  assertThat(permissionTemplate.getUsersForPermission(GlobalPermission.DRY_RUN_EXECUTION.key())).onProperty("userName").containsOnly("user_dry_run","user_scan_and_dry_run");
  assertThat(permissionTemplate.getGroupsForPermission(GlobalPermission.DASHBOARD_SHARING.key())).isEmpty();
  assertThat(permissionTemplate.getGroupsForPermission(GlobalPermission.SCAN_EXECUTION.key())).onProperty("groupName").containsOnly("scan_group");
  assertThat(permissionTemplate.getGroupsForPermission(GlobalPermission.SYSTEM_ADMIN.key())).onProperty("groupName").containsOnly("admin_group");
}
