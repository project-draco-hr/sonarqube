{
  InOrder inOrder=inOrder(spyPostOrderTypeAwareVisitor,spyPathAwareVisitor);
  VisitorsCrawler underTest=new VisitorsCrawler(Arrays.asList(spyPostOrderTypeAwareVisitor,spyPathAwareVisitor),false);
  underTest.visit(COMPONENT_TREE);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(PROJECT_VIEW_5);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitProjectView(PROJECT_VIEW_5);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(PROJECT_VIEW_5),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitProjectView(eq(PROJECT_VIEW_5),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(SUBVIEW_4);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitSubView(SUBVIEW_4);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(SUBVIEW_4),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitSubView(eq(SUBVIEW_4),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(SUBVIEW_3);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitSubView(SUBVIEW_3);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(SUBVIEW_3),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitSubView(eq(SUBVIEW_3),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(SUBVIEW_2);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitSubView(SUBVIEW_2);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(SUBVIEW_2),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitSubView(eq(SUBVIEW_2),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(COMPONENT_TREE);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitView(COMPONENT_TREE);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(COMPONENT_TREE),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitView(eq(COMPONENT_TREE),any(PathAwareVisitor.Path.class));
}
