{
  Map<String,Object> update=newHashMap();
  Preconditions.checkNotNull(dto.getProjectUuid(),"Project uuid is null on issue %s",dto.getKey());
  update.put("_parent",dto.getProjectUuid());
  update.put(IssueField.KEY.field(),dto.getKey());
  update.put(IssueField.UPDATED_AT.field(),dto.getUpdatedAt());
  update.put(IssueField.CREATED_AT.field(),dto.getCreatedAt());
  update.put(IssueField.ACTION_PLAN.field(),dto.getActionPlanKey());
  update.put(IssueField.ATTRIBUTES.field(),dto.getIssueAttributes());
  update.put(IssueField.ASSIGNEE.field(),dto.getAssignee());
  update.put(IssueField.AUTHOR_LOGIN.field(),dto.getAuthorLogin());
  update.put(IssueField.ISSUE_CLOSE_DATE.field(),dto.getIssueCloseDate());
  update.put(IssueField.PROJECT.field(),dto.getProjectUuid());
  update.put(IssueField.MODULE_PATH.field(),dto.getModuleUuidPath());
  update.put(IssueField.COMPONENT.field(),dto.getComponentUuid());
  update.put(IssueField.ISSUE_CREATED_AT.field(),dto.getIssueCreationDate());
  update.put(IssueField.ISSUE_UPDATED_AT.field(),dto.getIssueUpdateDate());
  update.put(IssueField.EFFORT.field(),dto.getEffortToFix());
  update.put(IssueField.RESOLUTION.field(),dto.getResolution());
  update.put(IssueField.LINE.field(),dto.getLine());
  update.put(IssueField.MESSAGE.field(),dto.getMessage());
  update.put(IssueField.REPORTER.field(),dto.getReporter());
  update.put(IssueField.STATUS.field(),dto.getStatus());
  update.put(IssueField.SEVERITY.field(),dto.getSeverity());
  update.put(IssueField.SEVERITY_VALUE.field(),Severity.ALL.indexOf(dto.getSeverity()));
  update.put(IssueField.DEBT.field(),dto.getDebt());
  update.put(IssueField.LANGUAGE.field(),dto.getLanguage());
  update.put(IssueField.RULE_KEY.field(),dto.getRuleKey().toString());
  Map<String,Object> upsert=getUpsertFor(IssueField.ALL_FIELDS,update);
  upsert.put(IssueField.KEY.field(),dto.getKey());
  return ImmutableList.of(new UpdateRequest().id(dto.getKey()).routing(dto.getProjectUuid()).parent(dto.getProjectUuid()).doc(update).upsert(upsert));
}
