{
  if (done) {
    throw new IllegalStateException("Plugin classloaders are already initialized");
  }
  try {
    List<URL> resources=Lists.newArrayList();
    List<URL> others=Lists.newArrayList();
    for (    File file : plugin.getDeployedFiles()) {
      if (isResource(file)) {
        resources.add(file.toURI().toURL());
      }
 else {
        others.add(file.toURI().toURL());
      }
    }
    ClassLoader parent;
    if (resources.isEmpty()) {
      parent=baseClassloader;
    }
 else {
      parent=new ResourcesClassloader(resources,baseClassloader);
    }
    ClassRealm realm;
    if (plugin.isUseChildFirstClassLoader()) {
      ClassRealm parentRealm=world.newRealm(plugin.getKey() + "-parent",parent);
      realm=parentRealm.createChildRealm(plugin.getKey());
    }
 else {
      realm=world.newRealm(plugin.getKey(),parent);
    }
    for (    URL url : others) {
      realm.addURL(url);
    }
    return realm;
  }
 catch (  UnsupportedClassVersionError e) {
    throw new SonarException(String.format("The plugin %s is not supported with Java %s",plugin.getKey(),SystemUtils.JAVA_VERSION_TRIMMED),e);
  }
catch (  Exception e) {
    throw new SonarException(String.format("Fail to build the classloader of %s",plugin.getKey()),e);
  }
}
