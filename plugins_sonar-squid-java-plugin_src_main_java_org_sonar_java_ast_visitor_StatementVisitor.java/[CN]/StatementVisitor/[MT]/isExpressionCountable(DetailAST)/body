{
  boolean countable;
  final int parentType=aAST.getParent().getType();
switch (parentType) {
case TokenTypes.SLIST:
case TokenTypes.LABELED_STAT:
case TokenTypes.LITERAL_FOR:
case TokenTypes.LITERAL_DO:
case TokenTypes.LITERAL_WHILE:
case TokenTypes.LITERAL_IF:
case TokenTypes.LITERAL_ELSE:
    final DetailAST prevSibling=aAST.getPreviousSibling();
  countable=(prevSibling == null) || (TokenTypes.LPAREN != prevSibling.getType());
break;
default :
countable=false;
break;
}
return countable;
}
