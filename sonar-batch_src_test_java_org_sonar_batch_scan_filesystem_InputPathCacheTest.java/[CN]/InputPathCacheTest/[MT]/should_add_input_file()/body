{
  InputPathCache cache=new InputPathCache();
  DefaultInputFile fooFile=new DefaultInputFile("foo","src/main/java/Foo.java").setModuleBaseDir(temp.newFolder().toPath());
  cache.put("struts",fooFile);
  cache.put("struts-core",new DefaultInputFile("foo","src/main/java/Bar.java").setLanguage("bla").setType(Type.MAIN).setStatus(Status.ADDED).setLines(2).setCharset(StandardCharsets.UTF_8).setModuleBaseDir(temp.newFolder().toPath()));
  DefaultInputFile loadedFile=(DefaultInputFile)cache.getFile("struts-core","src/main/java/Bar.java");
  assertThat(loadedFile.relativePath()).isEqualTo("src/main/java/Bar.java");
  assertThat(loadedFile.charset()).isEqualTo(StandardCharsets.UTF_8);
  assertThat(cache.filesByModule("struts")).hasSize(1);
  assertThat(cache.filesByModule("struts-core")).hasSize(1);
  assertThat(cache.allFiles()).hasSize(2);
  for (  InputPath inputPath : cache.allFiles()) {
    assertThat(inputPath.relativePath()).startsWith("src/main/java/");
  }
  cache.remove("struts",fooFile);
  assertThat(cache.allFiles()).hasSize(1);
  cache.removeModule("struts");
  assertThat(cache.filesByModule("struts")).hasSize(0);
  assertThat(cache.filesByModule("struts-core")).hasSize(1);
  assertThat(cache.allFiles()).hasSize(1);
}
