{
  when(resource.getScope()).thenReturn(Scopes.PROJECT);
  when(issuable.issues()).thenReturn(createIssues());
  when(context.getChildrenMeasures(any(MeasuresFilter.class))).thenReturn(Collections.<Measure>emptyList());
  when(context.getMeasure(CoreMetrics.ISSUES)).thenReturn(new Measure(CoreMetrics.ISSUES,3000.0));
  when(context.getMeasure(CoreMetrics.MAJOR_ISSUES)).thenReturn(new Measure(CoreMetrics.MAJOR_ISSUES,500.0));
  decorator.decorate(resource,context);
  verify(context,never()).saveMeasure(eq(CoreMetrics.ISSUES),anyDouble());
  verify(context,never()).saveMeasure(eq(CoreMetrics.MAJOR_ISSUES),anyDouble());
  verify(context,times(1)).saveMeasure(eq(CoreMetrics.CRITICAL_ISSUES),anyDouble());
}
