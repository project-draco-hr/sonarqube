{
  File phpFile1=new File(baseDir,"src/Foo.php");
  when(fs.inputFiles(FileQuery.onSource().onLanguage("php"))).thenReturn((Iterable)Arrays.asList(new InputFileBuilder(phpFile1,Charsets.UTF_8,"src/Foo.php").attribute(InputFile.ATTRIBUTE_SOURCE_RELATIVE_PATH,"Foo.php").attribute(DefaultInputFile.ATTRIBUTE_COMPONENT_KEY,"polop:/src/Foo.php").build()));
  File phpTestFile1=new File(baseDir,"src/test/FooTest.php");
  when(fs.inputFiles(FileQuery.onTest().onLanguage("php"))).thenReturn((Iterable)Arrays.asList(new InputFileBuilder(phpTestFile1,Charsets.UTF_8,"src/test/FooTest.php").attribute(InputFile.ATTRIBUTE_SOURCE_RELATIVE_PATH,"FooTest.php").attribute(DefaultInputFile.ATTRIBUTE_COMPONENT_KEY,"polop:/src/test/FooTest.php").build()));
  when(project.getLanguageKey()).thenReturn("php");
  when(exclusionPatternInitializer.hasFileContentPattern()).thenReturn(true);
  scanner.analyse(project,null);
  verify(inclusionPatternInitializer).initializePatternsForPath("Foo.php","polop:/src/Foo.php");
  verify(inclusionPatternInitializer).initializePatternsForPath("FooTest.php","polop:/src/test/FooTest.php");
  verify(exclusionPatternInitializer).initializePatternsForPath("Foo.php","polop:/src/Foo.php");
  verify(exclusionPatternInitializer).initializePatternsForPath("FooTest.php","polop:/src/test/FooTest.php");
  verify(regexpScanner).scan("polop:/src/Foo.php",phpFile1,UTF_8);
  verify(regexpScanner).scan("polop:/src/test/FooTest.php",phpTestFile1,UTF_8);
}
