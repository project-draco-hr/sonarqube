{
  return new InternalRequestWrapper(request){
    @Override public String param(    String key){
      Param paramDef=action.param(key);
      if (paramDef == null) {
        String message=String.format("BUG - parameter '%s' is undefined for action '%s'",key,action.key());
        LoggerFactory.getLogger(getClass()).error(message);
        throw new IllegalStateException(message);
      }
      String value=super.param(key);
      if (value != null) {
        List<String> values=newArrayList(Splitter.on(',').omitEmptyStrings().trimResults().split(value));
        List<String> possibleValues=paramDef.possibleValues();
        for (        String currentValue : values) {
          if (possibleValues != null && !possibleValues.contains(currentValue)) {
            throw new BadRequestException(String.format("Value of parameter '%s' can only be in %s",key,possibleValues));
          }
        }
      }
      return StringUtils.defaultString(super.param(key),paramDef.defaultValue());
    }
  }
;
}
