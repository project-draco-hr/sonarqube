{
  Optional<MeasureDto> baseMeasure=measureRepository.findPrevious(project,CoreMetrics.ALERT_STATUS);
  if (!baseMeasure.isPresent()) {
    checkStatus(project,status,description);
    return;
  }
  Optional<GateStatus> baseStatus=parse(baseMeasure.get().getAlertStatus());
  if (!baseStatus.isPresent()) {
    LOGGER.warn(String.format("Base status for project %s is not a supported value. Can not compute Quality Gate event",project.getKey()));
    checkStatus(project,status,description);
    return;
  }
  if (baseStatus.get() != status) {
    String label=String.format("%s (was %s)",status.getColorName(),baseStatus.get().getColorName());
    createEvent(project,label,description);
    boolean isNewKo=(baseStatus.get() == GateStatus.OK);
    notifyUsers(project,label,description,status,isNewKo);
  }
}
