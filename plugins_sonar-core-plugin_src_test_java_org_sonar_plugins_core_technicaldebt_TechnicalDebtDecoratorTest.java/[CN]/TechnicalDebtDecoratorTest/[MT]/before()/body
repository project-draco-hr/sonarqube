{
  when(perspectives.as(Issuable.class,resource)).thenReturn(issuable);
  RulesBuilder rulesBuilder=new RulesBuilder();
  rulesBuilder.add(ruleKey1).setName("rule1").setCharacteristic("MEMORY_EFFICIENCY");
  rulesBuilder.add(ruleKey2).setName("rule2").setCharacteristic("MODULARITY");
  rules=rulesBuilder.build();
  when(ruleFinder.findByKey(ruleKey1)).thenReturn(org.sonar.api.rules.Rule.create(ruleKey1.repository(),ruleKey1.rule()));
  when(ruleFinder.findByKey(ruleKey2)).thenReturn(org.sonar.api.rules.Rule.create(ruleKey2.repository(),ruleKey2.rule()));
  decorator=new TechnicalDebtDecorator(perspectives,defaultTechnicalDebtModel,rules,ruleFinder);
}
