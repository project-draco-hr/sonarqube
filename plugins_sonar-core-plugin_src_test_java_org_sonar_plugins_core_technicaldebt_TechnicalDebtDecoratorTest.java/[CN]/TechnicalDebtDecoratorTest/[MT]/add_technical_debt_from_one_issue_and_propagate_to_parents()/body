{
  Issue issue=createIssue("rule1","repo1").setDebt(1 * 8 * 60* 60L);
  when(issuable.issues()).thenReturn(newArrayList(issue));
  DefaultCharacteristic parentCharacteristic=new DefaultCharacteristic().setKey("parentCharacteristic");
  DefaultCharacteristic characteristic=new DefaultCharacteristic().setKey("characteristic").setParent(parentCharacteristic);
  RuleKey ruleKey=RuleKey.of("repo1","rule1");
  DefaultRequirement requirement=new DefaultRequirement().setCharacteristic(characteristic).setRuleKey(ruleKey);
  when(defaultTechnicalDebtModel.requirementsByRule(ruleKey)).thenReturn(requirement);
  doReturn(newArrayList(requirement)).when(defaultTechnicalDebtModel).requirements();
  decorator.decorate(resource,context);
  verify(context).saveMeasure(argThat(new IsCharacteristicMeasure(CoreMetrics.TECHNICAL_DEBT,1.0)));
  verify(context).saveMeasure(argThat(new IsCharacteristicMeasure(CoreMetrics.TECHNICAL_DEBT,parentCharacteristic,1.0)));
  verify(context).saveMeasure(argThat(new IsCharacteristicMeasure(CoreMetrics.TECHNICAL_DEBT,characteristic,1.0)));
  verify(context).saveMeasure(argThat(new IsCharacteristicMeasure(CoreMetrics.TECHNICAL_DEBT,requirement,1.0)));
}
