{
  Resource dir=new Directory("org/foo");
  PastMeasuresLoader pastMeasuresLoader=mock(PastMeasuresLoader.class);
  PastSnapshot pastSnapshot1=new PastSnapshot("days",new Date()).setIndex(1);
  PastSnapshot pastSnapshot3=new PastSnapshot("days",new Date()).setIndex(3);
  when(pastMeasuresLoader.getPastMeasures(dir,pastSnapshot1)).thenReturn(Arrays.asList(new Object[]{NCLOC_ID,null,null,null,180.0},new Object[]{COVERAGE_ID,null,null,null,75.0}));
  when(pastMeasuresLoader.getPastMeasures(dir,pastSnapshot3)).thenReturn(Arrays.<Object[]>asList(new Object[]{NCLOC_ID,null,null,null,240.0}));
  DecoratorContext context=mock(DecoratorContext.class);
  Measure currentNcloc=newMeasure(NCLOC,200.0);
  Measure currentCoverage=newMeasure(COVERAGE,80.0);
  when(context.getMeasures(Matchers.<MeasuresFilter>anyObject())).thenReturn(Arrays.asList(currentNcloc,currentCoverage));
  VariationDecorator decorator=new VariationDecorator(pastMeasuresLoader,mock(MetricFinder.class),Arrays.asList(pastSnapshot1,pastSnapshot3));
  decorator.decorate(dir,context);
  verify(context,times(3)).saveMeasure(Matchers.<Measure>anyObject());
  assertThat(currentNcloc.getVariation1()).isEqualTo(20.0);
  assertThat(currentNcloc.getVariation2()).isNull();
  assertThat(currentNcloc.getVariation3()).isEqualTo(-40.0);
  assertThat(currentCoverage.getVariation1()).isEqualTo(5.0);
  assertThat(currentCoverage.getVariation2()).isNull();
  assertThat(currentCoverage.getVariation3()).isNull();
}
