{
  Resource javaPackage=new JavaPackage("org.foo");
  PastMeasuresLoader pastMeasuresLoader=mock(PastMeasuresLoader.class);
  PastSnapshot pastSnapshot1=new PastSnapshot("days",new Snapshot()).setIndex(1);
  PastSnapshot pastSnapshot3=new PastSnapshot("days",new Snapshot()).setIndex(3);
  when(pastMeasuresLoader.getPastMeasures(javaPackage,pastSnapshot1)).thenReturn(Arrays.asList(newMeasureModel(NCLOC,180.0),newMeasureModel(COVERAGE,75.0)));
  when(pastMeasuresLoader.getPastMeasures(javaPackage,pastSnapshot3)).thenReturn(Arrays.asList(newMeasureModel(NCLOC,240.0)));
  DecoratorContext context=mock(DecoratorContext.class);
  Measure currentNcloc=newMeasure(NCLOC,200.0);
  Measure currentCoverage=newMeasure(COVERAGE,80.0);
  when(context.getMeasures(Matchers.<MeasuresFilter>anyObject())).thenReturn(Arrays.asList(currentNcloc,currentCoverage));
  VariationDecorator decorator=new VariationDecorator(pastMeasuresLoader,Arrays.asList(pastSnapshot1,pastSnapshot3));
  decorator.decorate(javaPackage,context);
  verify(context,times(3)).saveMeasure(Matchers.<Measure>anyObject());
  assertThat(currentNcloc.getVariation1(),is(20.0));
  assertThat(currentNcloc.getVariation2(),nullValue());
  assertThat(currentNcloc.getVariation3(),is(-40.0));
  assertThat(currentCoverage.getVariation1(),is(5.0));
  assertThat(currentCoverage.getVariation2(),nullValue());
  assertThat(currentCoverage.getVariation3(),nullValue());
}
