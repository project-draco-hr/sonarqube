{
  Date createdAt=DateUtils.parseDate("2013-12-20");
  RuleDto rule=new RuleDto().setId(10).setNoteCreatedAt(createdAt).setNoteData("My previous note").setNoteUserLogin("nicolas");
  List<RuleParamDto> ruleParams=newArrayList(new RuleParamDto().setId(20).setName("max").setDefaultValue("10"));
  when(ruleDao.selectParameters(eq(10),eq(session))).thenReturn(ruleParams);
  List<RuleTagDto> ruleTags=newArrayList(new RuleTagDto().setId(30L).setTag("style").setType(RuleTagType.SYSTEM));
  when(ruleDao.selectTags(eq(10),eq(session))).thenReturn(ruleTags);
  long now=System.currentTimeMillis();
  doReturn(now).when(system).now();
  operations.updateRuleNote(rule,"My new note",MockUserSession.create().setLogin("guy").setName("Guy").setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN));
  ArgumentCaptor<RuleDto> argumentCaptor=ArgumentCaptor.forClass(RuleDto.class);
  verify(ruleDao).update(argumentCaptor.capture());
  assertThat(argumentCaptor.getValue().getNoteData()).isEqualTo("My new note");
  assertThat(argumentCaptor.getValue().getNoteUserLogin()).isEqualTo("nicolas");
  assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isEqualTo(createdAt);
  assertThat(argumentCaptor.getValue().getNoteUpdatedAt().getTime()).isEqualTo(now);
  verify(session).commit();
  verify(ruleRegistry).save(eq(rule),eq(ruleParams),eq(ruleTags));
}
