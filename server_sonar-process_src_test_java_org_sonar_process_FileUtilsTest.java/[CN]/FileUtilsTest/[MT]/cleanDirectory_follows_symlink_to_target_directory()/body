{
  assumeTrue(SystemUtils.IS_OS_UNIX);
  Path target=temporaryFolder.newFolder().toPath();
  Path symToDir=Files.createSymbolicLink(temporaryFolder.newFolder().toPath().resolve("sym_to_dir"),target);
  Path childFile1=Files.createFile(target.resolve("file1.txt"));
  Path childDir1=Files.createDirectory(target.resolve("subDir1"));
  Path childFile2=Files.createFile(childDir1.resolve("file2.txt"));
  Path childDir2=Files.createDirectory(childDir1.resolve("subDir2"));
  assertThat(target).isDirectory();
  assertThat(symToDir).isSymbolicLink();
  assertThat(childFile1).isRegularFile();
  assertThat(childDir1).isDirectory();
  assertThat(childFile2).isRegularFile();
  assertThat(childDir2).isDirectory();
  Object targetKey=getFileKey(target);
  Object symLinkKey=getFileKey(symToDir);
  FileUtils.cleanDirectory(symToDir.toFile());
  assertThat(target).isDirectory();
  assertThat(symToDir).isSymbolicLink();
  assertThat(childFile1).doesNotExist();
  assertThat(childDir1).doesNotExist();
  assertThat(childFile2).doesNotExist();
  assertThat(childDir2).doesNotExist();
  assertThat(getFileKey(target)).isEqualTo(targetKey);
  assertThat(getFileKey(symToDir)).isEqualTo(symLinkKey);
}
