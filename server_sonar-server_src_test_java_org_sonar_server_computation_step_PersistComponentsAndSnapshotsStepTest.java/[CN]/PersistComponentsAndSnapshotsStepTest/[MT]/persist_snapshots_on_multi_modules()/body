{
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).addChildRef(4).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey("MODULE_A").setName("Module A").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.MODULE).setKey("SUB_MODULE_A").setName("Sub Module A").build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(4).setType(Constants.ComponentType.MODULE).setKey("MODULE_B").setName("Module B").build());
  treeRootHolder.setRoot(new DumbComponent(Component.Type.PROJECT,1,"ABCD",PROJECT_KEY,new DumbComponent(Component.Type.MODULE,2,"BCDE","MODULE_A",new DumbComponent(Component.Type.MODULE,3,"DEFG","SUB_MODULE_A")),new DumbComponent(Component.Type.MODULE,4,"CDEF","MODULE_B")));
  sut.execute();
  assertThat(dbTester.countRowsOfTable("snapshots")).isEqualTo(4);
  ComponentDto project=dbClient.componentDao().selectNullableByKey(session,PROJECT_KEY);
  SnapshotDto projectSnapshot=getSnapshot(project.getId());
  assertThat(projectSnapshot.getRootProjectId()).isEqualTo(project.getId());
  assertThat(projectSnapshot.getRootId()).isNull();
  assertThat(projectSnapshot.getParentId()).isNull();
  assertThat(projectSnapshot.getDepth()).isEqualTo(0);
  assertThat(projectSnapshot.getPath()).isEqualTo("");
  ComponentDto moduleA=dbClient.componentDao().selectNullableByKey(session,"MODULE_A");
  SnapshotDto moduleASnapshot=getSnapshot(moduleA.getId());
  assertThat(moduleASnapshot.getRootProjectId()).isEqualTo(project.getId());
  assertThat(moduleASnapshot.getRootId()).isEqualTo(projectSnapshot.getId());
  assertThat(moduleASnapshot.getParentId()).isEqualTo(projectSnapshot.getId());
  assertThat(moduleASnapshot.getDepth()).isEqualTo(1);
  assertThat(moduleASnapshot.getPath()).isEqualTo(projectSnapshot.getId() + ".");
  ComponentDto subModuleA=dbClient.componentDao().selectNullableByKey(session,"SUB_MODULE_A");
  SnapshotDto subModuleASnapshot=getSnapshot(subModuleA.getId());
  assertThat(subModuleASnapshot.getRootProjectId()).isEqualTo(project.getId());
  assertThat(subModuleASnapshot.getRootId()).isEqualTo(project.getId());
  assertThat(subModuleASnapshot.getParentId()).isEqualTo(moduleA.getId());
  assertThat(subModuleASnapshot.getDepth()).isEqualTo(2);
  assertThat(subModuleASnapshot.getPath()).isEqualTo(projectSnapshot.getId() + "." + moduleA.getId()+ ".");
  ComponentDto moduleB=dbClient.componentDao().selectNullableByKey(session,"MODULE_B");
  SnapshotDto moduleBSnapshot=getSnapshot(moduleB.getId());
  assertThat(moduleBSnapshot.getRootProjectId()).isEqualTo(project.getId());
  assertThat(moduleBSnapshot.getRootId()).isEqualTo(project.getId());
  assertThat(moduleBSnapshot.getParentId()).isEqualTo(project.getId());
  assertThat(moduleBSnapshot.getDepth()).isEqualTo(1);
  assertThat(moduleBSnapshot.getPath()).isEqualTo(projectSnapshot.getId() + ".");
}
