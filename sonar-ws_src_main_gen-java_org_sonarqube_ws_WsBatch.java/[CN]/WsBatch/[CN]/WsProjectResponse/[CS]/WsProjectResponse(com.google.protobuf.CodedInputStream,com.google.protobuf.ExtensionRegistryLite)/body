{
  this();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    timestamp_=input.readInt64();
    break;
  }
case 18:
{
  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
    settingsByModule_=com.google.protobuf.MapField.newMapField(SettingsByModuleDefaultEntryHolder.defaultEntry);
    mutable_bitField0_|=0x00000002;
  }
  com.google.protobuf.MapEntry<java.lang.String,org.sonarqube.ws.WsBatch.WsProjectResponse.Settings> settingsByModule=input.readMessage(SettingsByModuleDefaultEntryHolder.defaultEntry.getParserForType(),extensionRegistry);
  settingsByModule_.getMutableMap().put(settingsByModule.getKey(),settingsByModule.getValue());
  break;
}
case 26:
{
if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
  fileDataByModuleAndPath_=com.google.protobuf.MapField.newMapField(FileDataByModuleAndPathDefaultEntryHolder.defaultEntry);
  mutable_bitField0_|=0x00000004;
}
com.google.protobuf.MapEntry<java.lang.String,org.sonarqube.ws.WsBatch.WsProjectResponse.FileDataByPath> fileDataByModuleAndPath=input.readMessage(FileDataByModuleAndPathDefaultEntryHolder.defaultEntry.getParserForType(),extensionRegistry);
fileDataByModuleAndPath_.getMutableMap().put(fileDataByModuleAndPath.getKey(),fileDataByModuleAndPath.getValue());
break;
}
case 32:
{
bitField0_|=0x00000002;
lastAnalysisDate_=input.readInt64();
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw new RuntimeException(e.setUnfinishedMessage(this));
}
catch (java.io.IOException e) {
throw new RuntimeException(new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this));
}
 finally {
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
