{
  HashMultimap<String,URL> urlsByKey=HashMultimap.create();
  for (  JpaPluginFile pluginFile : dao.getPluginFiles()) {
    try {
      String key=pluginFile.getPluginKey();
      URL url=new URL(baseUrl + pluginFile.getPath());
      urlsByKey.put(key,url);
    }
 catch (    MalformedURLException e) {
      throw new SonarException("Can not build the classloader of the plugin " + pluginFile.getPluginKey(),e);
    }
  }
  classLoaders=new ClassLoadersCollection(Thread.currentThread().getContextClassLoader());
  for (  String key : urlsByKey.keySet()) {
    Set<URL> urls=urlsByKey.get(key);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Classloader of plugin " + key + ":");
      for (      URL url : urls) {
        LOG.debug("   -> " + url);
      }
    }
    classLoaders.createClassLoader(key,urls);
  }
  classLoaders.done();
}
