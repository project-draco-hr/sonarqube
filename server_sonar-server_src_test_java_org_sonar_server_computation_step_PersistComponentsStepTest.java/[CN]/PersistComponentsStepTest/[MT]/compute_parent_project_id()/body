{
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey("MODULE_KEY").setName("Module").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.MODULE).setKey("SUB_MODULE_1_KEY").setName("Sub Module 1").addChildRef(4).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(4).setType(Constants.ComponentType.MODULE).setKey("SUB_MODULE_2_KEY").setName("Sub Module 2").addChildRef(5).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(5).setType(Constants.ComponentType.DIRECTORY).setPath("src/main/java/dir").build());
  treeRootHolder.setRoot(DumbComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(DumbComponent.builder(Component.Type.MODULE,2).setUuid("BCDE").setKey("MODULE_KEY").addChildren(DumbComponent.builder(Component.Type.MODULE,3).setUuid("CDEF").setKey("SUB_MODULE_1_KEY").addChildren(DumbComponent.builder(Component.Type.MODULE,4).setUuid("DEFG").setKey("SUB_MODULE_2_KEY").addChildren(DumbComponent.builder(Component.Type.DIRECTORY,5).setUuid("EFGH").setKey("SUB_MODULE_2_KEY:src/main/java/dir").build()).build()).build()).build()).build());
  sut.execute();
  assertThat(dbTester.countRowsOfTable("projects")).isEqualTo(5);
  Optional<ComponentDto> project=dbClient.componentDao().selectByKey(session,PROJECT_KEY);
  assertThat(project).isPresent();
  assertThat(project.get().parentProjectId()).isNull();
  Optional<ComponentDto> module=dbClient.componentDao().selectByKey(session,"MODULE_KEY");
  assertThat(module).isPresent();
  assertThat(module.get().parentProjectId()).isEqualTo(project.get().getId());
  Optional<ComponentDto> subModule1=dbClient.componentDao().selectByKey(session,"SUB_MODULE_1_KEY");
  assertThat(subModule1).isPresent();
  assertThat(subModule1.get().parentProjectId()).isEqualTo(project.get().getId());
  Optional<ComponentDto> subModule2=dbClient.componentDao().selectByKey(session,"SUB_MODULE_2_KEY");
  assertThat(subModule2).isPresent();
  assertThat(subModule2.get().parentProjectId()).isEqualTo(project.get().getId());
  Optional<ComponentDto> directory=dbClient.componentDao().selectByKey(session,"SUB_MODULE_2_KEY:src/main/java/dir");
  assertThat(directory).isPresent();
  assertThat(directory.get().parentProjectId()).isEqualTo(subModule2.get().getId());
}
