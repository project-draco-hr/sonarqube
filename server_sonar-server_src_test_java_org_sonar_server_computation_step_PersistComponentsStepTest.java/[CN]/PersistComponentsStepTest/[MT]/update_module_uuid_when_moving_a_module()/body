{
  ComponentDto project=ComponentTesting.newProjectDto("ABCD").setKey(PROJECT_KEY).setName("Project");
  dbClient.componentDao().insert(dbTester.getSession(),project);
  ComponentDto moduleA=ComponentTesting.newModuleDto("EDCB",project).setKey("MODULE_A").setName("Module A");
  ComponentDto moduleB=ComponentTesting.newModuleDto("BCDE",project).setKey("MODULE_B").setName("Module B");
  dbClient.componentDao().insert(dbTester.getSession(),moduleA,moduleB);
  ComponentDto directory=ComponentTesting.newDirectory(moduleB,"src/main/java/dir").setUuid("CDEF").setKey("MODULE_B:src/main/java/dir");
  ComponentDto file=ComponentTesting.newFileDto(moduleB,"DEFG").setPath("src/main/java/dir/Foo.java").setName("Foo.java").setKey("MODULE_B:src/main/java/dir/Foo.java");
  dbClient.componentDao().insert(dbTester.getSession(),directory,file);
  dbTester.getSession().commit();
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey("MODULE_A").setName("Module A").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.MODULE).setKey("MODULE_B").setName("Module B").addChildRef(4).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(4).setType(Constants.ComponentType.DIRECTORY).setPath("src/main/java/dir").addChildRef(5).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(5).setType(Constants.ComponentType.FILE).setPath("src/main/java/dir/Foo.java").build());
  treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(ReportComponent.builder(Component.Type.MODULE,2).setUuid("EDCB").setKey("MODULE_A").addChildren(ReportComponent.builder(Component.Type.MODULE,3).setUuid("BCDE").setKey("MODULE_B").addChildren(ReportComponent.builder(Component.Type.DIRECTORY,4).setUuid("CDEF").setKey("MODULE_B:src/main/java/dir").addChildren(ReportComponent.builder(Component.Type.FILE,5).setUuid("DEFG").setKey("MODULE_B:src/main/java/dir/Foo.java").build()).build()).build()).build()).build());
  underTest.execute();
  assertThat(dbTester.countRowsOfTable("projects")).isEqualTo(5);
  ComponentDto moduleAreloaded=dbClient.componentDao().selectByKey(dbTester.getSession(),"MODULE_A").get();
  ComponentDto moduleBReloaded=dbClient.componentDao().selectByKey(dbTester.getSession(),"MODULE_B").get();
  assertThat(moduleBReloaded).isNotNull();
  assertThat(moduleBReloaded.uuid()).isEqualTo(moduleB.uuid());
  assertThat(moduleBReloaded.moduleUuid()).isEqualTo(moduleAreloaded.uuid());
  assertThat(moduleBReloaded.moduleUuidPath()).isEqualTo(moduleAreloaded.moduleUuidPath() + moduleBReloaded.uuid() + ".");
  assertThat(moduleBReloaded.projectUuid()).isEqualTo(project.uuid());
  assertThat(moduleBReloaded.parentProjectId()).isEqualTo(project.getId());
  ComponentDto directoryReloaded=dbClient.componentDao().selectByKey(dbTester.getSession(),"MODULE_B:src/main/java/dir").get();
  assertThat(directoryReloaded).isNotNull();
  assertThat(directoryReloaded.uuid()).isEqualTo(directory.uuid());
  assertThat(directoryReloaded.moduleUuid()).isEqualTo(moduleBReloaded.uuid());
  assertThat(directoryReloaded.moduleUuidPath()).isEqualTo(moduleBReloaded.moduleUuidPath());
  assertThat(directoryReloaded.projectUuid()).isEqualTo(project.uuid());
  assertThat(directoryReloaded.parentProjectId()).isEqualTo(moduleBReloaded.getId());
  ComponentDto fileReloaded=dbClient.componentDao().selectByKey(dbTester.getSession(),"MODULE_B:src/main/java/dir/Foo.java").get();
  assertThat(fileReloaded).isNotNull();
  assertThat(fileReloaded.uuid()).isEqualTo(file.uuid());
  assertThat(fileReloaded.moduleUuid()).isEqualTo(moduleBReloaded.uuid());
  assertThat(fileReloaded.moduleUuidPath()).isEqualTo(moduleBReloaded.moduleUuidPath());
  assertThat(fileReloaded.projectUuid()).isEqualTo(project.uuid());
  assertThat(fileReloaded.parentProjectId()).isEqualTo(moduleBReloaded.getId());
}
