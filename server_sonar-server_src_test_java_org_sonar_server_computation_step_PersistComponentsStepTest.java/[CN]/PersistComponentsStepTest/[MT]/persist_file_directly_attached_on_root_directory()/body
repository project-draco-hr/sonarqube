{
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.DIRECTORY).setPath("/").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setPath("pom.xml").build());
  treeRootHolder.setRoot(DumbComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(DumbComponent.builder(Component.Type.DIRECTORY,2).setUuid("CDEF").setKey(PROJECT_KEY + ":/").addChildren(DumbComponent.builder(Component.Type.FILE,3).setUuid("DEFG").setKey(PROJECT_KEY + ":pom.xml").build()).build()).build());
  underTest.execute();
  ComponentDto directory=dbClient.componentDao().selectByKey(dbTester.getSession(),"PROJECT_KEY:/").get();
  assertThat(directory.name()).isEqualTo("/");
  assertThat(directory.path()).isEqualTo("/");
  ComponentDto file=dbClient.componentDao().selectByKey(dbTester.getSession(),"PROJECT_KEY:pom.xml").get();
  assertThat(file.name()).isEqualTo("pom.xml");
  assertThat(file.path()).isEqualTo("pom.xml");
}
