{
  reportReader.setMetadata(BatchReport.Metadata.newBuilder().setRootComponentRef(1).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.DIRECTORY).setPath("/").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setPath("pom.xml").build());
  treeRootHolder.setRoot(new DumbComponent(Component.Type.PROJECT,1,"ABCD",PROJECT_KEY,new DumbComponent(Component.Type.DIRECTORY,2,"CDEF",PROJECT_KEY + ":/",new DumbComponent(Component.Type.FILE,3,"DEFG",PROJECT_KEY + ":pom.xml"))));
  sut.execute();
  ComponentDto directory=dbClient.componentDao().selectNullableByKey(session,"PROJECT_KEY:/");
  assertThat(directory).isNotNull();
  assertThat(directory.name()).isEqualTo("/");
  assertThat(directory.path()).isEqualTo("/");
  ComponentDto file=dbClient.componentDao().selectNullableByKey(session,"PROJECT_KEY:pom.xml");
  assertThat(file).isNotNull();
  assertThat(file.name()).isEqualTo("pom.xml");
  assertThat(file.path()).isEqualTo("pom.xml");
}
