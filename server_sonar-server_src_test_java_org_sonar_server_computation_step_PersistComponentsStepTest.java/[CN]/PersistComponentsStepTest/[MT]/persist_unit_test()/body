{
  computeComponentsRefCache.addComponent(1,new ComputeComponentsRefCache.ComputeComponent("PROJECT_KEY","ABCD"));
  computeComponentsRefCache.addComponent(2,new ComputeComponentsRefCache.ComputeComponent("PROJECT_KEY:src/test/java/dir","CDEF"));
  computeComponentsRefCache.addComponent(3,new ComputeComponentsRefCache.ComputeComponent("PROJECT_KEY:src/test/java/dir/FooTest.java","DEFG"));
  File reportDir=temp.newFolder();
  BatchReportWriter writer=new BatchReportWriter(reportDir);
  writer.writeMetadata(BatchReport.Metadata.newBuilder().setRootComponentRef(1).build());
  writer.writeComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey("PROJECT_KEY").setName("Project").addChildRef(2).build());
  writer.writeComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.DIRECTORY).setPath("src/test/java/dir").addChildRef(3).build());
  writer.writeComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setPath("src/test/java/dir/FooTest.java").setIsTest(true).build());
  sut.execute(new ComputationContext(new BatchReportReader(reportDir),ComponentTesting.newProjectDto()));
  ComponentDto file=dbClient.componentDao().selectNullableByKey(session,"PROJECT_KEY:src/test/java/dir/FooTest.java");
  assertThat(file).isNotNull();
  assertThat(file.name()).isEqualTo("FooTest.java");
  assertThat(file.path()).isEqualTo("src/test/java/dir/FooTest.java");
  assertThat(file.qualifier()).isEqualTo("UTS");
  assertThat(file.scope()).isEqualTo("FIL");
}
