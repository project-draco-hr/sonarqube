{
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.DIRECTORY).setPath("src/test/java/dir").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setPath("src/test/java/dir/FooTest.java").setIsTest(true).build());
  treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(ReportComponent.builder(Component.Type.DIRECTORY,2).setUuid("CDEF").setKey(PROJECT_KEY + ":src/test/java/dir").addChildren(ReportComponent.builder(Component.Type.FILE,3).setUuid("DEFG").setKey(PROJECT_KEY + ":src/test/java/dir/FooTest.java").setFileAttributes(new FileAttributes(true,null)).build()).build()).build());
  underTest.execute();
  ComponentDto file=dbClient.componentDao().selectByKey(dbTester.getSession(),PROJECT_KEY + ":src/test/java/dir/FooTest.java").get();
  assertThat(file.name()).isEqualTo("FooTest.java");
  assertThat(file.path()).isEqualTo("src/test/java/dir/FooTest.java");
  assertThat(file.qualifier()).isEqualTo("UTS");
  assertThat(file.scope()).isEqualTo("FIL");
}
