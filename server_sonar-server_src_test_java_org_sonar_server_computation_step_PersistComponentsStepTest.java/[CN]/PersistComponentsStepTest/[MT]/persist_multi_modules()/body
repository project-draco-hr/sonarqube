{
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setName("Project").addChildRef(2).addChildRef(4).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey("MODULE_A").setName("Module A").addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.MODULE).setKey("SUB_MODULE_A").setName("Sub Module A").build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(4).setType(Constants.ComponentType.MODULE).setKey("MODULE_B").setName("Module B").build());
  treeRootHolder.setRoot(DumbComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(DumbComponent.builder(Component.Type.MODULE,2).setUuid("BCDE").setKey("MODULE_A").addChildren(DumbComponent.builder(Component.Type.MODULE,3).setUuid("DEFG").setKey("SUB_MODULE_A").build()).build(),DumbComponent.builder(Component.Type.MODULE,4).setUuid("CDEF").setKey("MODULE_B").build()).build());
  underTest.execute();
  assertThat(dbTester.countRowsOfTable("projects")).isEqualTo(4);
  ComponentDto project=dbClient.componentDao().selectByKey(dbTester.getSession(),PROJECT_KEY).get();
  assertThat(project.moduleUuid()).isNull();
  assertThat(project.moduleUuidPath()).isEqualTo("." + project.uuid() + ".");
  assertThat(project.parentProjectId()).isNull();
  ComponentDto moduleA=dbClient.componentDao().selectByKey(dbTester.getSession(),"MODULE_A").get();
  assertThat(moduleA.moduleUuid()).isEqualTo(project.uuid());
  assertThat(moduleA.moduleUuidPath()).isEqualTo(project.moduleUuidPath() + moduleA.uuid() + ".");
  assertThat(moduleA.parentProjectId()).isEqualTo(project.getId());
  ComponentDto subModuleA=dbClient.componentDao().selectByKey(dbTester.getSession(),"SUB_MODULE_A").get();
  assertThat(subModuleA.moduleUuid()).isEqualTo(moduleA.uuid());
  assertThat(subModuleA.moduleUuidPath()).isEqualTo(moduleA.moduleUuidPath() + subModuleA.uuid() + ".");
  assertThat(subModuleA.parentProjectId()).isEqualTo(project.getId());
  ComponentDto moduleB=dbClient.componentDao().selectByKey(dbTester.getSession(),"MODULE_B").get();
  assertThat(moduleB.moduleUuid()).isEqualTo(project.uuid());
  assertThat(moduleB.moduleUuidPath()).isEqualTo(project.moduleUuidPath() + moduleB.uuid() + ".");
  assertThat(moduleB.parentProjectId()).isEqualTo(project.getId());
}
