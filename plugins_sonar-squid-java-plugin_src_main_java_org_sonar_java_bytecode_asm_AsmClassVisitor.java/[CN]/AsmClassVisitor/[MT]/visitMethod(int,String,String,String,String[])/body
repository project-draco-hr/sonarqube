{
  AsmMethod method=asmClass.getMethodOrCreateIt(methodName + description);
  if (isInheritedMethodSignature(method.getParent(),method.getKey())) {
    method.setInherited(true);
  }
  method.setSignature(signature);
  method.setBodyLoaded(true);
  method.setAccessFlags(access);
  String[] internalNames=AsmSignature.extractInternalNames(description,signature);
  AsmClass[] asmClasses=internalNamesToAsmClasses(internalNames,DETAIL_LEVEL.NOTHING);
  method.addUsesOfClasses(asmClasses);
  AsmClass[] asmExceptionClasses=internalNamesToAsmClasses(exceptions,DETAIL_LEVEL.NOTHING);
  method.addUsesOfClasses(asmExceptionClasses);
  if (level == DETAIL_LEVEL.STRUCTURE_AND_CALLS) {
    return new AsmMethodVisitor(method,asmClassProvider);
  }
  return null;
}
