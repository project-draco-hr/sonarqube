{
  logger.info("Update component keys");
  Map<String,InputFile> deprecatedFileKeyMapper=new HashMap<>();
  Map<String,InputFile> deprecatedTestKeyMapper=new HashMap<>();
  Map<String,String> deprecatedDirectoryKeyMapper=new HashMap<>();
  for (  InputFile inputFile : inputFiles) {
    String deprecatedKey=computeDeprecatedKey(module.getKey(),(DeprecatedDefaultInputFile)inputFile,fs);
    if (deprecatedKey != null) {
      if (InputFile.Type.TEST == inputFile.type() && !deprecatedTestKeyMapper.containsKey(deprecatedKey)) {
        deprecatedTestKeyMapper.put(deprecatedKey,inputFile);
      }
 else       if (InputFile.Type.MAIN == inputFile.type() && !deprecatedFileKeyMapper.containsKey(deprecatedKey)) {
        deprecatedFileKeyMapper.put(deprecatedKey,inputFile);
      }
    }
  }
  ResourceModel moduleModel=session.getSingleResult(ResourceModel.class,"key",module.getEffectiveKey());
  int moduleId=moduleModel.getId();
  migrateFiles(module,deprecatedFileKeyMapper,deprecatedTestKeyMapper,deprecatedDirectoryKeyMapper,moduleId);
  migrateDirectories(deprecatedDirectoryKeyMapper,moduleId);
  session.commit();
}
