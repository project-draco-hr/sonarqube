{
  return ImmutableList.of(PropertyDefinition.builder(PATTERNS_MULTICRITERIA_EXCLUSION_KEY).category(CoreProperties.CATEGORY_EXCLUSIONS).subCategory(SUB_CATEGORY_IGNORE_ISSUES).name("Multi-criteria Exclusion Patterns").description("Patterns used to identify which issues are ignored.").onQualifiers(Qualifiers.PROJECT).index(3).fields(PropertyFieldDefinition.build(RULE_KEY).name(PROPERTY_RULE_KEY_PATTERN).description("Pattern used to match rules which should be ignored.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build(),PropertyFieldDefinition.build(RESOURCE_KEY).name(PROPERTY_FILE_PATH_PATTERN).description("Pattern used to match files which should be ignored.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build()).build(),PropertyDefinition.builder(PATTERNS_BLOCK_KEY).category(CoreProperties.CATEGORY_EXCLUSIONS).subCategory(SUB_CATEGORY_IGNORE_ISSUES).name("Block Exclusion Patterns").description("Patterns used to identify blocks in which issues are ignored.").onQualifiers(Qualifiers.PROJECT).index(2).fields(PropertyFieldDefinition.build(BEGIN_BLOCK_REGEXP).name("Regular Expression for Start of Block").description("If this regular expression is found in a file, then following lines are ignored until end of block.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build(),PropertyFieldDefinition.build(END_BLOCK_REGEXP).name("Regular Expression for End of Block").description("If specified, this regular expression is used to determine the end of code blocks to ignore. If not, then block ends at the end of file.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build()).build(),PropertyDefinition.builder(PATTERNS_ALLFILE_KEY).category(CoreProperties.CATEGORY_EXCLUSIONS).subCategory(SUB_CATEGORY_IGNORE_ISSUES).name("File Exclusion Patterns").description("Patterns used to identify files in which issues are ignored.").onQualifiers(Qualifiers.PROJECT).index(1).fields(PropertyFieldDefinition.build(FILE_REGEXP).name("Regular Expression").description("If this regular expression is found in a file, then the whole file is ignored.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build()).build(),PropertyDefinition.builder(PATTERNS_MULTICRITERIA_INCLUSION_KEY).category(CoreProperties.CATEGORY_EXCLUSIONS).subCategory(SUB_CATEGORY_IGNORE_ISSUES).name("Multi-criteria Inclusion Patterns").description("Patterns used to identify which issues should be enforced on selected resources.").onQualifiers(Qualifiers.PROJECT).index(4).fields(PropertyFieldDefinition.build(RULE_KEY).name(PROPERTY_RULE_KEY_PATTERN).description("Pattern used to match rules which should be enforced.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build(),PropertyFieldDefinition.build(RESOURCE_KEY).name(PROPERTY_FILE_PATH_PATTERN).description("Pattern used to match files on which issues should be enforced.").type(PropertyType.STRING).indicativeSize(LARGE_SIZE).build()).build());
}
