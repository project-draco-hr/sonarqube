{
  new WebService(){
    @Override public void define(    Context context){
      NewController newController=context.createController("api/rule");
      NewAction create=newController.createAction("create").setHandler(mock(RequestHandler.class));
      create.createParam("key").setDescription("Key of the new rule");
      create.createParam("severity").setDefaultValue("MAJOR").setPossibleValues("INFO","MAJOR","BLOCKER");
      newController.done();
    }
  }
.define(context);
  WebService.Action action=context.controller("api/rule").action("create");
  assertThat(action.params()).hasSize(2);
  assertThat(action.param("key").key()).isEqualTo("key");
  assertThat(action.param("key").description()).isEqualTo("Key of the new rule");
  assertThat(action.param("key").toString()).isEqualTo("key");
  assertThat(action.param("severity").key()).isEqualTo("severity");
  assertThat(action.param("severity").description()).isNull();
  assertThat(action.param("severity").defaultValue()).isEqualTo("MAJOR");
  assertThat(action.param("severity").possibleValues()).containsOnly("INFO","MAJOR","BLOCKER");
}
