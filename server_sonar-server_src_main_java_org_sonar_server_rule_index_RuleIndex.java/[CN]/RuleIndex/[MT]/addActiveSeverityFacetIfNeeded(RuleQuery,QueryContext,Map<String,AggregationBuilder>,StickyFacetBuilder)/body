{
  if (options.facets().contains(FACET_ACTIVE_SEVERITIES)) {
    HasParentFilterBuilder ruleFilter=FilterBuilders.hasParentFilter(IndexDefinition.RULE.getIndexType(),stickyFacetBuilder.getStickyFacetFilter("activation"));
    BoolFilterBuilder childrenFilter=FilterBuilders.boolFilter();
    this.addTermFilter(childrenFilter,ActiveRuleNormalizer.ActiveRuleField.PROFILE_KEY.field(),query.getQProfileKey());
    this.addTermFilter(childrenFilter,ActiveRuleNormalizer.ActiveRuleField.INHERITANCE.field(),query.getInheritance());
    FilterBuilder activeRuleFilter;
    if (childrenFilter.hasClauses()) {
      activeRuleFilter=childrenFilter.must(ruleFilter);
    }
 else {
      activeRuleFilter=ruleFilter;
    }
    AggregationBuilder activeSeverities=AggregationBuilders.children(FACET_ACTIVE_SEVERITIES + "_children").childType(IndexDefinition.ACTIVE_RULE.getIndexType()).subAggregation(AggregationBuilders.filter(FACET_ACTIVE_SEVERITIES + "_filter").filter(activeRuleFilter).subAggregation(AggregationBuilders.terms(FACET_ACTIVE_SEVERITIES).field(ActiveRuleNormalizer.ActiveRuleField.SEVERITY.field()).include(Joiner.on('|').join(Severity.ALL)).size(Severity.ALL.size())));
    aggregations.put(FACET_ACTIVE_SEVERITIES,AggregationBuilders.global(FACET_ACTIVE_SEVERITIES).subAggregation(activeSeverities));
  }
}
