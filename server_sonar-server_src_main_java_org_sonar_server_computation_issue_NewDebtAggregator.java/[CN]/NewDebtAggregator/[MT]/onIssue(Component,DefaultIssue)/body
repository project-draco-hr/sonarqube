{
  if (issue.debtInMinutes() != null && !periodsHolder.getPeriods().isEmpty()) {
    List<IssueChangeDto> changelog=changesByIssueUuid.get(issue.key());
    for (    Period period : periodsHolder.getPeriods()) {
      long newDebt=calculator.calculate(issue,changelog,period);
      currentSum.add(period.getIndex(),newDebt);
    }
  }
  for (  Component child : component.getChildren()) {
    DebtSum childSum=sumsByComponentRef.remove(child.getRef());
    if (childSum != null) {
      currentSum.add(childSum);
    }
  }
}
