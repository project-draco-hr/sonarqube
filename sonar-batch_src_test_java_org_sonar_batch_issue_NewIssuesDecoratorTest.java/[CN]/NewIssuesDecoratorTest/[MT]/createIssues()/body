{
  List<Issue> issues=newArrayList();
  issues.add(new DefaultIssue().setRuleRepositoryKey(rule1.getRepositoryKey()).setRuleKey(rule1.getKey()).setSeverity(RulePriority.CRITICAL.name()).setCreatedAt(rightNow));
  issues.add(new DefaultIssue().setRuleRepositoryKey(rule1.getRepositoryKey()).setRuleKey(rule1.getKey()).setSeverity(RulePriority.CRITICAL.name()).setCreatedAt(tenDaysAgo));
  issues.add(new DefaultIssue().setRuleRepositoryKey(rule2.getRepositoryKey()).setRuleKey(rule2.getKey()).setSeverity(RulePriority.MAJOR.name()).setCreatedAt(fiveDaysAgo));
  issues.add(new DefaultIssue().setRuleRepositoryKey(rule2.getRepositoryKey()).setRuleKey(rule2.getKey()).setSeverity(RulePriority.MAJOR.name()).setCreatedAt(tenDaysAgo));
  issues.add(new DefaultIssue().setRuleRepositoryKey(rule3.getRepositoryKey()).setRuleKey(rule3.getKey()).setSeverity(RulePriority.MINOR.name()).setCreatedAt(fiveDaysAgo));
  issues.add(new DefaultIssue().setRuleRepositoryKey(rule3.getRepositoryKey()).setRuleKey(rule3.getKey()).setSeverity(RulePriority.MINOR.name()).setCreatedAt(tenDaysAgo));
  return issues;
}
