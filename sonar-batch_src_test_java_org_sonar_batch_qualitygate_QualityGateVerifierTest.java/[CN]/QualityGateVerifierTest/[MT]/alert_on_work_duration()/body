{
  Metric metric=new Metric.Builder("tech_debt","Debt",Metric.ValueType.WORK_DUR).create();
  when(i18n.message(any(Locale.class),eq("metric.tech_debt.name"),anyString())).thenReturn("The Debt");
  when(durations.format(any(Locale.class),eq(Duration.create(3600L)),eq(Durations.DurationFormat.SHORT))).thenReturn("1h");
  when(context.getMeasure(metric)).thenReturn(new Measure(metric,7200d));
  ArrayList<ResolvedCondition> conditions=Lists.newArrayList(mockCondition(metric,QualityGateConditionDto.OPERATOR_GREATER_THAN,"3600",null));
  when(qualityGate.conditions()).thenReturn(conditions);
  verifier.decorate(project,context);
  verify(context).saveMeasure(argThat(matchesMetric(metric,Level.ERROR,"The Debt > 1h")));
  verify(context).saveMeasure(argThat(matchesMetric(CoreMetrics.ALERT_STATUS,Metric.Level.ERROR,"The Debt > 1h")));
  verify(context).saveMeasure(argThat(new IsMeasure(CoreMetrics.QUALITY_GATE_DETAILS,"{\"level\":\"ERROR\"," + "\"conditions\":" + "["+ "{\"metric\":\"tech_debt\",\"op\":\"GT\",\"error\":\"3600\",\"actual\":\"7200.0\",\"level\":\"ERROR\"}"+ "]"+ "}")));
}
