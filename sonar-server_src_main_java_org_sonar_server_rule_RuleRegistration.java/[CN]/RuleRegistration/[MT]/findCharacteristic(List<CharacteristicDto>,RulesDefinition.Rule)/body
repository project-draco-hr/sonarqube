{
  final String key=ruleDef.debtCharacteristic();
  if (key == null) {
    return null;
  }
  CharacteristicDto characteristicDto=Iterables.find(characteristicDtos,new Predicate<CharacteristicDto>(){
    @Override public boolean apply(    CharacteristicDto input){
      String characteristicKey=input.getKey();
      return characteristicKey != null && characteristicKey.equals(key);
    }
  }
,null);
  if (characteristicDto == null) {
    LOG.warn(String.format("Characteristic '%s' has not been found on rule '%s:%s'",key,ruleDef.repository().name(),ruleDef.key()));
  }
 else   if (characteristicDto.getParentId() == null) {
    throw MessageException.of(String.format("Rule '%s:%s' cannot be linked on the root characteristic '%s'",ruleDef.repository().name(),ruleDef.key(),key));
  }
  return characteristicDto;
}
