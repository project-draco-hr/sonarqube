{
  boolean changed=false;
  if (!StringUtils.equals(dto.getName(),def.name())) {
    dto.setName(def.name());
    changed=true;
  }
  if (!StringUtils.equals(dto.getDescription(),def.htmlDescription())) {
    dto.setDescription(def.htmlDescription());
    changed=true;
  }
  if (!StringUtils.equals(dto.getConfigKey(),def.internalKey())) {
    dto.setConfigKey(def.internalKey());
    changed=true;
  }
  String severity=def.severity();
  if (!ObjectUtils.equals(dto.getSeverityString(),severity)) {
    dto.setSeverity(severity);
    changed=true;
  }
  Cardinality cardinality=def.template() ? Cardinality.MULTIPLE : Cardinality.SINGLE;
  if (!cardinality.equals(dto.getCardinality())) {
    dto.setCardinality(cardinality);
    changed=true;
  }
  String status=def.status().name();
  if (!StringUtils.equals(dto.getStatus(),status)) {
    dto.setStatus(status);
    changed=true;
  }
  RemediationFunction remediationFunction=def.remediationFunction();
  String remediationFunctionString=remediationFunction != null ? remediationFunction.name() : null;
  if (!StringUtils.equals(dto.getDefaultRemediationFunction(),remediationFunctionString)) {
    dto.setDefaultRemediationFunction(remediationFunctionString);
    changed=true;
  }
  if (!StringUtils.equals(dto.getDefaultRemediationFactor(),def.remediationFactor())) {
    dto.setDefaultRemediationFactor(def.remediationFactor());
    changed=true;
  }
  if (!StringUtils.equals(dto.getDefaultRemediationOffset(),def.remediationOffset())) {
    dto.setDefaultRemediationOffset(def.remediationOffset());
    changed=true;
  }
  if (!StringUtils.equals(dto.getEffortToFixL10nKey(),def.effortToFixL10nKey())) {
    dto.setEffortToFixL10nKey(def.effortToFixL10nKey());
    changed=true;
  }
  if (!StringUtils.equals(dto.getLanguage(),def.repository().language())) {
    dto.setLanguage(def.repository().language());
    changed=true;
  }
  if (changed) {
    dto.setUpdatedAt(buffer.now());
  }
  return changed;
}
