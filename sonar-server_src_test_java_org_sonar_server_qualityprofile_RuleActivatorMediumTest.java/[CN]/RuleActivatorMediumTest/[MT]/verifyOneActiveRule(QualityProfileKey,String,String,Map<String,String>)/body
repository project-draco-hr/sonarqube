{
  List<ActiveRuleDto> activeRuleDtos=db.activeRuleDao().findByProfileKey(dbSession,profileKey);
  assertThat(activeRuleDtos).hasSize(1);
  ActiveRuleDto activeRuleDto=activeRuleDtos.get(0);
  assertThat(activeRuleDto.getSeverityString()).isEqualTo(expectedSeverity);
  assertThat(activeRuleDto.getInheritance()).isEqualTo(expectedInheritance);
  List<ActiveRuleParamDto> paramDtos=db.activeRuleDao().findParamsByActiveRule(dbSession,activeRuleDto);
  assertThat(paramDtos).hasSize(expectedParams.size());
  for (  Map.Entry<String,String> entry : expectedParams.entrySet()) {
    ActiveRuleParamDto paramDto=db.activeRuleDao().getParamByKeyAndName(activeRuleDto.getKey(),entry.getKey(),dbSession);
    assertThat(paramDto).isNotNull();
    assertThat(paramDto.getValue()).isEqualTo(entry.getValue());
  }
  List<ActiveRule> activeRules=index.findByProfile(profileKey);
  assertThat(activeRules).hasSize(1);
  ActiveRule activeRule=activeRules.get(0);
  assertThat(activeRule.severity()).isEqualTo(expectedSeverity);
  assertThat(activeRule.inheritance()).isEqualTo(expectedInheritance == null ? ActiveRule.Inheritance.NONE : ActiveRule.Inheritance.valueOf(expectedInheritance));
  assertThat(activeRule.params()).hasSize(expectedParams.size());
  for (  Map.Entry<String,String> entry : expectedParams.entrySet()) {
    String value=activeRule.params().get(entry.getKey());
    assertThat(value).isEqualTo(entry.getValue());
  }
}
