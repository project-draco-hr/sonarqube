{
  createChildProfiles();
  RuleActivation activation=new RuleActivation(RuleTesting.XOO_X1);
  activation.setSeverity(Severity.BLOCKER);
  activation.setParameter("max","7");
  activate(activation,XOO_P1_KEY);
  verifyOneActiveRule(XOO_P1_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,null,ImmutableMap.of("max","7"));
  verifyOneActiveRule(XOO_P2_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,ActiveRuleDto.INHERITED,ImmutableMap.of("max","7"));
  verifyOneActiveRule(XOO_P3_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,ActiveRuleDto.INHERITED,ImmutableMap.of("max","7"));
  activation=new RuleActivation(RuleTesting.XOO_X1);
  activation.setSeverity(Severity.INFO);
  activation.setParameter("max","8");
  activate(activation,XOO_P1_KEY);
  verifyOneActiveRule(XOO_P1_KEY,RuleTesting.XOO_X1,Severity.INFO,null,ImmutableMap.of("max","8"));
  verifyOneActiveRule(XOO_P2_KEY,RuleTesting.XOO_X1,Severity.INFO,ActiveRuleDto.INHERITED,ImmutableMap.of("max","8"));
  verifyOneActiveRule(XOO_P3_KEY,RuleTesting.XOO_X1,Severity.INFO,ActiveRuleDto.INHERITED,ImmutableMap.of("max","8"));
  activation=new RuleActivation(RuleTesting.XOO_X1);
  activation.setSeverity(Severity.MINOR);
  activation.setParameter("max","9");
  activate(activation,XOO_P2_KEY);
  verifyOneActiveRule(XOO_P1_KEY,RuleTesting.XOO_X1,Severity.INFO,null,ImmutableMap.of("max","8"));
  verifyOneActiveRule(XOO_P2_KEY,RuleTesting.XOO_X1,Severity.MINOR,ActiveRuleDto.OVERRIDES,ImmutableMap.of("max","9"));
  verifyOneActiveRule(XOO_P3_KEY,RuleTesting.XOO_X1,Severity.MINOR,ActiveRuleDto.INHERITED,ImmutableMap.of("max","9"));
  activation=new RuleActivation(RuleTesting.XOO_X1);
  activation.setSeverity(Severity.BLOCKER);
  activation.setParameter("max","10");
  activate(activation,XOO_P3_KEY);
  verifyOneActiveRule(XOO_P1_KEY,RuleTesting.XOO_X1,Severity.INFO,null,ImmutableMap.of("max","8"));
  verifyOneActiveRule(XOO_P2_KEY,RuleTesting.XOO_X1,Severity.MINOR,ActiveRuleDto.OVERRIDES,ImmutableMap.of("max","9"));
  verifyOneActiveRule(XOO_P3_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,ActiveRuleDto.OVERRIDES,ImmutableMap.of("max","10"));
}
