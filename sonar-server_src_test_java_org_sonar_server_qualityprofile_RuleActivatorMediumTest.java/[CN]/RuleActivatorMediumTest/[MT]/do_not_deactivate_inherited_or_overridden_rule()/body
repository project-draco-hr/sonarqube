{
  createChildProfiles();
  RuleActivation activation=new RuleActivation(RuleTesting.XOO_X1);
  activation.setSeverity(Severity.BLOCKER);
  activation.setParameter("max","7");
  activate(activation,XOO_P1_KEY);
  verifyOneActiveRule(XOO_P1_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,null,ImmutableMap.of("max","7"));
  verifyOneActiveRule(XOO_P2_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,ActiveRuleDto.INHERITED,ImmutableMap.of("max","7"));
  verifyOneActiveRule(XOO_P3_KEY,RuleTesting.XOO_X1,Severity.BLOCKER,ActiveRuleDto.INHERITED,ImmutableMap.of("max","7"));
  try {
    ruleActivator.deactivate(ActiveRuleKey.of(XOO_P2_KEY,RuleTesting.XOO_X1));
    fail();
  }
 catch (  BadRequestException e) {
    assertThat(e).hasMessage("Cannot deactivate inherited rule 'xoo:x1'");
  }
}
