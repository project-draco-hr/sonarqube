{
  grantPermission();
  RuleActivation activation=new RuleActivation(ActiveRuleKey.of(PROFILE_KEY,RuleKey.of("xoo","x1")));
  activation.setSeverity(Severity.BLOCKER);
  activation.setParameter("max","7");
  ruleActivator.activate(activation);
  RuleActivation update=new RuleActivation(ActiveRuleKey.of(PROFILE_KEY,RuleKey.of("xoo","x1")));
  ruleActivator.activate(update);
  List<ActiveRuleDto> activeRuleDtos=db.activeRuleDao().findByProfileKey(PROFILE_KEY,dbSession);
  assertThat(activeRuleDtos).hasSize(1);
  assertThat(activeRuleDtos.get(0).getSeverityString()).isEqualTo(Severity.MINOR);
  assertThat(activeRuleDtos.get(0).getInheritance()).isNull();
  List<ActiveRuleParamDto> params=db.activeRuleDao().findParamsByActiveRule(activeRuleDtos.get(0),dbSession);
  assertThat(params).hasSize(1);
  assertThat(params.get(0).getValue()).isEqualTo("10");
  ActiveRule activeRule=index.getByKey(activation.getKey());
  assertThat(activeRule).isNotNull();
  assertThat(activeRule.severity()).isEqualTo(Severity.MINOR);
  assertThat(activeRule.inheritance()).isEqualTo(ActiveRule.Inheritance.NONE);
  assertThat(activeRule.params()).hasSize(1);
  assertThat(activeRule.params().get("max")).isEqualTo("10");
}
