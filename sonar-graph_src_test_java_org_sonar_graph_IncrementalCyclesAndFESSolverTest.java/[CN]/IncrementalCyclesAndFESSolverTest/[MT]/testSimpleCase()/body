{
  DirectedGraph<String,StringEdge> dcg=DirectedGraph.createStringDirectedGraph();
  dcg.addEdge("A","B").addEdge("B","C").addEdge("C","D").addEdge("D","A");
  dcg.addEdge("C","A");
  dcg.addEdge("B","A");
  dcg.addEdge("A","E").addEdge("E","C");
  dcg.addEdge("E","D");
  dcg.addEdge("E","F");
  dcg.addEdge("F","C");
  IncrementalCyclesAndFESSolver<String> cyclesAndFESSolver=new IncrementalCyclesAndFESSolver<String>(dcg,dcg.getVertices(),3,Integer.MAX_VALUE);
  assertThat(cyclesAndFESSolver.getCycles().size(),is(4));
  assertThat(cyclesAndFESSolver.getFeedbackEdgeSet().size(),is(2));
  assertThat(cyclesAndFESSolver.getWeightOfFeedbackEdgeSet(),is(2));
}
