{
  dbComponentsRefCache.addComponent(1,new DbComponent(1L,PROJECT_KEY,"ABCD"));
  dbComponentsRefCache.addComponent(2,new DbComponent(2L,"MODULE_KEY","BCDE"));
  dbComponentsRefCache.addComponent(3,new DbComponent(3L,"MODULE_KEY:file","CDEF"));
  saveDuplicationMetric();
  reportReader.setMetadata(BatchReport.Metadata.newBuilder().setRootComponentRef(1).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).setSnapshotId(10L).addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey("MODULE_KEY").setSnapshotId(11L).addChildRef(3).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(3).setType(Constants.ComponentType.FILE).setSnapshotId(12L).setPath("file").build());
  BatchReport.Duplication duplication=BatchReport.Duplication.newBuilder().setOriginPosition(Range.newBuilder().setStartLine(1).setEndLine(5).build()).addDuplicate(BatchReport.Duplicate.newBuilder().setOtherFileRef(3).setRange(Range.newBuilder().setStartLine(6).setEndLine(10).build()).build()).build();
  reportReader.putDuplications(3,newArrayList(duplication));
  sut.execute(new ComputationContext(ComponentTreeBuilders.from(DumbComponent.DUMB_PROJECT)));
  assertThat(dbTester.countRowsOfTable("project_measures")).isEqualTo(1);
  Map<String,Object> dto=dbTester.selectFirst("select snapshot_id as \"snapshotId\", text_value as \"textValue\" from project_measures");
  assertThat(dto.get("snapshotId")).isEqualTo(12L);
  assertThat(dto.get("textValue")).isEqualTo("<duplications><g><b s=\"1\" l=\"5\" r=\"MODULE_KEY:file\"/><b s=\"6\" l=\"5\" r=\"MODULE_KEY:file\"/></g></duplications>");
}
