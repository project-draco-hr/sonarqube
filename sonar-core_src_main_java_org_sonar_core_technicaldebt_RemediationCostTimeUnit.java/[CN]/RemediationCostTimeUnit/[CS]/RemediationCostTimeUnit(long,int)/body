{
  int oneWorkingDay=hoursInDay * ONE_HOUR_IN_MINUTE;
  if (input >= oneWorkingDay) {
    long nbDays=input / oneWorkingDay;
    this.days=new TimeUnitValue(nbDays,TimeUnit.DAYS);
    input=input - (nbDays * oneWorkingDay);
  }
 else {
    this.days=new TimeUnitValue(0L,TimeUnit.DAYS);
  }
  if (input >= ONE_HOUR_IN_MINUTE) {
    long nbHours=input / ONE_HOUR_IN_MINUTE;
    this.hours=new TimeUnitValue(nbHours,TimeUnit.HOURS);
    input=input - (nbHours * ONE_HOUR_IN_MINUTE);
  }
 else {
    this.hours=new TimeUnitValue(0L,TimeUnit.HOURS);
  }
  this.minutes=new TimeUnitValue(input,TimeUnit.MINUTES);
}
