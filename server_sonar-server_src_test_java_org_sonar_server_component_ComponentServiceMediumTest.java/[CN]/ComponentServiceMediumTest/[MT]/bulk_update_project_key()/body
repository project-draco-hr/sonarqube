{
  ComponentDto module=ComponentTesting.newModuleDto(project).setKey("sample:root:module");
  tester.get(ComponentDao.class).insert(session,module);
  tester.get(SnapshotDao.class).insert(session,SnapshotTesting.createForComponent(module,project));
  ComponentDto file=ComponentTesting.newFileDto(module).setKey("sample:root:module:src/File.xoo");
  tester.get(ComponentDao.class).insert(session,file);
  tester.get(SnapshotDao.class).insert(session,SnapshotTesting.createForComponent(file,project));
  IssueDto issue=IssueTesting.newDto(rule,file,project);
  db.issueDao().insert(session,issue);
  session.commit();
  MockUserSession.set().setLogin("john").addProjectPermissions(UserRole.ADMIN,project.key());
  service.bulkUpdateKey("sample:root","sample","sample2");
  session.commit();
  assertThat(service.getNullableByKey(project.key())).isNull();
  assertThat(service.getNullableByKey("sample2:root")).isNotNull();
  assertThat(service.getNullableByKey(module.key())).isNull();
  assertThat(service.getNullableByKey("sample2:root:module")).isNotNull();
  assertThat(service.getNullableByKey(file.key())).isNull();
  assertThat(service.getNullableByKey("sample2:root:module:src/File.xoo")).isNotNull();
  assertThat(tester.get(IssueIndex.class).getNullableByKey(issue.getKey()).componentKey()).isEqualTo("sample2:root:module:src/File.xoo");
  assertThat(tester.get(IssueIndex.class).getNullableByKey(issue.getKey()).projectKey()).isEqualTo("sample2:root");
  assertThat(tester.get(IssueIndex.class).search(IssueQuery.builder().build(),new QueryContext()).getTotal()).isEqualTo(1);
  assertThat(tester.get(IssueAuthorizationIndex.class).getNullableByKey(project.getKey())).isNull();
  assertThat(tester.get(IssueAuthorizationIndex.class).getNullableByKey("sample2:root")).isNotNull();
  assertThat(db.propertiesDao().selectProjectProperties("sample2:root",session)).hasSize(1);
}
