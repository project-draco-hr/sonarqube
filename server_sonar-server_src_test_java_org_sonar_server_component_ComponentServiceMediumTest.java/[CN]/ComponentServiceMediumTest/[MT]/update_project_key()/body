{
  ComponentDto file=ComponentTesting.newFileDto(project).setKey("sample:root:src/File.xoo");
  tester.get(ComponentDao.class).insert(session,file);
  tester.get(SnapshotDao.class).insert(session,SnapshotTesting.createForComponent(file,project));
  IssueDto issue=IssueTesting.newDto(rule,file,project);
  db.issueDao().insert(session,issue);
  session.commit();
  MockUserSession.set().setLogin("john").addComponentPermission(UserRole.ADMIN,project.key(),project.key());
  service.updateKey(project.key(),"sample2:root");
  session.commit();
  assertThat(service.getNullableByKey(project.key())).isNull();
  assertThat(service.getNullableByKey("sample2:root")).isNotNull();
  assertThat(service.getNullableByKey(file.key())).isNull();
  assertThat(service.getNullableByKey("sample2:root:src/File.xoo")).isNotNull();
  assertThat(tester.get(SearchClient.class).prepareCount(IndexDefinition.ISSUES.getIndexName()).setTypes(IndexDefinition.ISSUES.getIndexType()).get().getCount()).isEqualTo(1);
  assertThat(tester.get(IssueAuthorizationIndex.class).getNullableByKey(project.uuid())).isNotNull();
  assertThat(tester.get(SearchClient.class).prepareCount(IndexDefinition.ISSUES_AUTHORIZATION.getIndexName()).setTypes(IndexDefinition.ISSUES_AUTHORIZATION.getIndexType()).get().getCount()).isEqualTo(1);
  assertThat(db.propertiesDao().selectProjectProperties("sample2:root",session)).hasSize(1);
}
