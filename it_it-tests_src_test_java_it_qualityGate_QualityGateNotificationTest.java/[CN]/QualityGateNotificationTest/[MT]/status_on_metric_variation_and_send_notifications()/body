{
  Wiser smtpServer=new Wiser(0);
  try {
    smtpServer.start();
    Sonar wsClient=orchestrator.getServer().getAdminWsClient();
    wsClient.update(new PropertyUpdateQuery("email.smtp_host.secured","localhost"));
    wsClient.update(new PropertyUpdateQuery("email.smtp_port.secured",Integer.toString(smtpServer.getServer().getPort())));
    orchestrator.getServer().adminWsClient().post("api/users/create","login","tester","name","Tester","email","tester@example.org","password","tester");
    Selenese selenese=Selenese.builder().setHtmlTestsInClasspath("notifications","/qualityGate/notifications/email_configuration.html","/qualityGate/notifications/activate_notification_channels.html").build();
    new SeleneseTest(selenese).runOn(orchestrator);
    QualityGate simple=qgClient().create("SimpleWithDifferential");
    qgClient().setDefault(simple.id());
    qgClient().createCondition(NewCondition.create(simple.id()).metricKey("ncloc").period(1).operator("EQ").warningThreshold("0"));
    SonarScanner analysis=SonarScanner.create(projectDir("qualitygate/xoo-sample"));
    orchestrator.executeBuild(analysis);
    assertThat(fetchGateStatus().getData()).isEqualTo("OK");
    orchestrator.executeBuild(analysis);
    assertThat(fetchGateStatus().getData()).isEqualTo("WARN");
    qgClient().unsetDefault();
    qgClient().destroy(simple.id());
    Thread.sleep(10000);
    Iterator<WiserMessage> emails=smtpServer.getMessages().iterator();
    MimeMessage message=emails.next().getMimeMessage();
    assertThat(message.getHeader("To",null)).isEqualTo("<test@example.org>");
    assertThat((String)message.getContent()).contains("This is a test message from Sonar");
    assertThat(emails.hasNext()).isTrue();
    message=emails.next().getMimeMessage();
    assertThat(message.getHeader("To",null)).isEqualTo("<tester@example.org>");
    assertThat((String)message.getContent()).contains("Quality gate status: Orange (was Green)");
    assertThat((String)message.getContent()).contains("Quality gate threshold: Lines of Code variation = 0 since previous analysis");
    assertThat((String)message.getContent()).contains("/dashboard/index/sample");
    assertThat(emails.hasNext()).isFalse();
  }
  finally {
    smtpServer.stop();
  }
}
