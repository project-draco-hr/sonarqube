{
  IssueChangeContext context=IssueChangeContext.createScan(new Date());
  DefaultIssue issue=new DefaultIssue().setMessage("the message").setKey("ABCDE").setAssignee("freddy").setFieldChange(context,"resolution",null,"FIXED").setFieldChange(context,"status","OPEN","RESOLVED").setFieldChange(context,"assignee","simon",null).setSendNotifications(true).setComponentKey("struts:Action").setProjectKey("struts");
  Notification notification=issueNotifications.sendChanges(issue,"charlie",null,new Project("struts"),null,null,false);
  assertThat(notification.getFieldValue("message")).isEqualTo("the message");
  assertThat(notification.getFieldValue("key")).isEqualTo("ABCDE");
  assertThat(notification.getFieldValue("componentKey")).isEqualTo("struts:Action");
  assertThat(notification.getFieldValue("componentName")).isNull();
  assertThat(notification.getFieldValue("old.resolution")).isNull();
  assertThat(notification.getFieldValue("new.resolution")).isEqualTo("FIXED");
  assertThat(notification.getFieldValue("old.status")).isEqualTo("OPEN");
  assertThat(notification.getFieldValue("new.status")).isEqualTo("RESOLVED");
  assertThat(notification.getFieldValue("old.assignee")).isEqualTo("simon");
  assertThat(notification.getFieldValue("new.assignee")).isNull();
  Mockito.verify(manager).scheduleForSending(notification);
}
