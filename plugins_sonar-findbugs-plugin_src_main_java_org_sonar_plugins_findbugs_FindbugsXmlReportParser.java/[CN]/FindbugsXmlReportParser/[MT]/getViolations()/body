{
  List<Violation> violations=new ArrayList<Violation>();
  try {
    SMInputFactory inf=new SMInputFactory(XMLInputFactory.newInstance());
    SMInputCursor cursor=inf.rootElementCursor(findbugsXmlReport).advance();
    SMInputCursor bugInstanceCursor=cursor.childElementCursor("BugInstance").advance();
    while (bugInstanceCursor.asEvent() != null) {
      String type=bugInstanceCursor.getAttrValue("type");
      String longMessage="";
      SMInputCursor bugInstanceChildCursor=bugInstanceCursor.childElementCursor().advance();
      while (bugInstanceChildCursor.asEvent() != null) {
        String nodeName=bugInstanceChildCursor.getLocalName();
        if ("LongMessage".equals(nodeName)) {
          longMessage=bugInstanceChildCursor.collectDescendantText();
        }
 else         if ("SourceLine".equals(nodeName)) {
          Violation fbViolation=new Violation();
          fbViolation.type=type;
          fbViolation.longMessage=longMessage;
          fbViolation.parseStart(bugInstanceChildCursor.getAttrValue("start"));
          fbViolation.parseEnd(bugInstanceChildCursor.getAttrValue("end"));
          fbViolation.className=bugInstanceChildCursor.getAttrValue("classname");
          fbViolation.sourcePath=bugInstanceChildCursor.getAttrValue("sourcepath");
          violations.add(fbViolation);
        }
        bugInstanceChildCursor.advance();
      }
      bugInstanceCursor.advance();
    }
    cursor.getStreamReader().closeCompletely();
  }
 catch (  XMLStreamException e) {
    throw new XmlParserException("Unable to parse the Findbugs XML Report '" + findbugsXmlReportPath + "'",e);
  }
  return violations;
}
