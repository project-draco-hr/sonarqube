{
  if ((pathnames == null) || (pathnames.length() <= 0)) {
    return;
  }
  StringTokenizer st=new StringTokenizer(pathnames,RESOURCE_DELIM);
  List urlList=new ArrayList();
  try {
    while (st.hasMoreTokens()) {
      String validatorRules=st.nextToken().trim();
      if (log.isInfoEnabled()) {
        log.info("Loading validation rules file from '" + validatorRules + "'");
      }
      URL input=servlet.getServletContext().getResource(validatorRules);
      if (input == null) {
        input=getClass().getResource(validatorRules);
      }
      if (input != null) {
        urlList.add(input);
      }
 else {
        throw new ServletException("Skipping validation rules file from '" + validatorRules + "'.  No url could be located.");
      }
    }
    int urlSize=urlList.size();
    URL[] urlArray=new URL[urlSize];
    for (int urlIndex=0; urlIndex < urlSize; urlIndex++) {
      urlArray[urlIndex]=(URL)urlList.get(urlIndex);
    }
    this.resources=new ValidatorResources(urlArray);
  }
 catch (  SAXException sex) {
    log.error("Skipping all validation",sex);
    throw new ServletException(sex);
  }
}
