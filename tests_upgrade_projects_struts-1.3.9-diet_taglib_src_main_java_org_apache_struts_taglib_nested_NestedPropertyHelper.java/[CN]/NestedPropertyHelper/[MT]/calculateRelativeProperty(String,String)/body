{
  if (parent == null) {
    parent="";
  }
  if (property == null) {
    property="";
  }
  if ("./".equals(property) || "this/".equals(property)) {
    return parent;
  }
  String stepping;
  if (property.endsWith("/")) {
    stepping=property;
    property="";
  }
 else {
    stepping=property.substring(0,property.lastIndexOf('/') + 1);
    property=property.substring(property.lastIndexOf('/') + 1,property.length());
  }
  if (stepping.startsWith("/")) {
    return property;
  }
 else {
    StringTokenizer proT=new StringTokenizer(parent,".");
    int propCount=proT.countTokens();
    StringTokenizer strT=new StringTokenizer(stepping,"/");
    int count=strT.countTokens();
    if (count >= propCount) {
      return property;
    }
 else {
      count=propCount - count;
      StringBuffer result=new StringBuffer();
      for (int i=0; i < count; i++) {
        result.append(proT.nextToken());
        result.append('.');
      }
      result.append(property);
      if (result.charAt(result.length() - 1) == '.') {
        return result.substring(0,result.length() - 1);
      }
 else {
        return result.toString();
      }
    }
  }
}
