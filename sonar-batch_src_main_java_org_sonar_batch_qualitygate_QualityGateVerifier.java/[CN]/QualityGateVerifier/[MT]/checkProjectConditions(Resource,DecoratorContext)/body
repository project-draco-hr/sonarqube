{
  Metric.Level globalLevel=Metric.Level.OK;
  QualityGateDetails details=new QualityGateDetails();
  List<String> labels=Lists.newArrayList();
  for (  ResolvedCondition condition : qualityGate.conditions()) {
    Measure measure=context.getMeasure(condition.metric());
    if (measure != null) {
      Metric.Level level=ConditionUtils.getLevel(condition,measure);
      measure.setAlertStatus(level);
      String text=getText(condition,level);
      if (!StringUtils.isBlank(text)) {
        measure.setAlertText(text);
        labels.add(text);
      }
      index.updateMeasure(resource,measure);
      if (Metric.Level.WARN == level && globalLevel != Metric.Level.ERROR) {
        globalLevel=Metric.Level.WARN;
      }
 else       if (Metric.Level.ERROR == level) {
        globalLevel=Metric.Level.ERROR;
      }
      details.addCondition(condition,level,ConditionUtils.getValue(condition,measure));
    }
  }
  Measure globalMeasure=new Measure(CoreMetrics.ALERT_STATUS,globalLevel);
  globalMeasure.setAlertStatus(globalLevel);
  globalMeasure.setAlertText(StringUtils.join(labels,", "));
  context.saveMeasure(globalMeasure);
  details.setLevel(globalLevel);
  Measure detailsMeasure=new Measure(CoreMetrics.QUALITY_GATE_DETAILS,details.toJson());
  context.saveMeasure(detailsMeasure);
}
