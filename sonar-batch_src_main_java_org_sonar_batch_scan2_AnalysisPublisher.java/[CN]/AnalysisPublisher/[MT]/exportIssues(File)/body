{
  File issuesFile=new File(exportDir,"issues.json");
  FileWriter issueWriter=null;
  try {
    issueWriter=new FileWriter(issuesFile);
    JsonWriter jsonWriter=JsonWriter.of(issueWriter);
    jsonWriter.beginObject().name("issues").beginArray();
    for (    AnalyzerIssue issue : issueCache.byModule(def.getKey())) {
      jsonWriter.beginObject().prop("repository",issue.ruleKey().repository()).prop("rule",issue.ruleKey().rule());
      if (issue.inputFile() != null) {
        jsonWriter.prop("filePath",issue.inputFile().relativePath());
      }
      jsonWriter.prop("message",issue.message()).prop("effortToFix",issue.effortToFix()).prop("line",issue.line()).endObject();
    }
    jsonWriter.endArray().endObject().close();
  }
 catch (  IOException e) {
    throw unableToExport(e);
  }
 finally {
    IOUtils.closeQuietly(issueWriter);
  }
}
