{
  orchestrator.executeBuilds(SonarScanner.create(projectDir("testing/xoo-sample-overall-coverage")));
  Resource project=orchestrator.getServer().getWsClient().find(ResourceQuery.createForMetrics("sample-overall-coverage",ALL_COVERAGE_METRICS));
  assertThat(project.getMeasureValue("line_coverage")).isEqualTo(50.0);
  assertThat(project.getMeasureValue("lines_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("uncovered_lines")).isEqualTo(2);
  assertThat(project.getMeasureValue("branch_coverage")).isEqualTo(25.0);
  assertThat(project.getMeasureValue("conditions_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("uncovered_conditions")).isEqualTo(3);
  assertThat(project.getMeasureValue("coverage")).isEqualTo(37.5);
  assertThat(project.getMeasureValue("it_line_coverage")).isEqualTo(50.0);
  assertThat(project.getMeasureValue("it_lines_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("it_uncovered_lines")).isEqualTo(2);
  assertThat(project.getMeasureValue("it_branch_coverage")).isEqualTo(25.0);
  assertThat(project.getMeasureValue("it_conditions_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("it_uncovered_conditions")).isEqualTo(3);
  assertThat(project.getMeasureValue("it_coverage")).isEqualTo(37.5);
  assertThat(project.getMeasureValue("overall_line_coverage")).isEqualTo(75.0);
  assertThat(project.getMeasureValue("overall_lines_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("overall_uncovered_lines")).isEqualTo(1);
  assertThat(project.getMeasureValue("overall_branch_coverage")).isEqualTo(50.0);
  assertThat(project.getMeasureValue("overall_conditions_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("overall_uncovered_conditions")).isEqualTo(2);
  assertThat(project.getMeasureValue("overall_coverage")).isEqualTo(62.5);
  String coverage=cleanupScmAndDuplication(orchestrator.getServer().adminWsClient().get("api/sources/lines","key","sample-overall-coverage:src/main/xoo/sample/Sample.xoo"));
  JSONAssert.assertEquals(IOUtils.toString(this.getClass().getResourceAsStream("/test/CoverageTest/ut_and_it_coverage-expected.json"),"UTF-8"),coverage,true);
  verifyComputeEngineTempDirIsEmpty();
}
