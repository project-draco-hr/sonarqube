{
  TrustManager[] trustAllCerts=new TrustManager[]{new X509TrustManager(){
    public X509Certificate[] getAcceptedIssuers(){
      return null;
    }
    public void checkClientTrusted(    X509Certificate[] certs,    String authType){
    }
    public void checkServerTrusted(    X509Certificate[] certs,    String authType){
    }
  }
};
  SSLContext sc=SSLContext.getInstance("TLS");
  sc.init(null,trustAllCerts,new java.security.SecureRandom());
  SSLSocketFactory untrustedSocketFactory=sc.getSocketFactory();
  HostnameVerifier allHostsValid=new HostnameVerifier(){
    public boolean verify(    String hostname,    SSLSession session){
      return true;
    }
  }
;
  URL url=new URL("https://localhost:" + httpsPort + "/sessions/login");
  HttpsURLConnection connection=(HttpsURLConnection)url.openConnection();
  connection.setRequestMethod("POST");
  connection.setAllowUserInteraction(true);
  connection.setSSLSocketFactory(untrustedSocketFactory);
  connection.setHostnameVerifier(allHostsValid);
  InputStream input=connection.getInputStream();
  checkCookieFlags(connection);
  try {
    String html=IOUtils.toString(input);
    assertThat(html).contains("<body");
  }
  finally {
    IOUtils.closeQuietly(input);
  }
}
