{
  List<DebtRulesXMLImporter.RuleDebt> ruleDebts=loadRuleDebtList();
  for (  RuleRepository repository : repositories) {
    NewRepository newRepository;
    if (context.repository(repository.getKey()) == null) {
      newRepository=context.createRepository(repository.getKey(),repository.getLanguage());
      newRepository.setName(repository.getName());
    }
 else {
      newRepository=(NewRepository)context.extendRepository(repository.getKey(),repository.getLanguage());
    }
    for (    org.sonar.api.rules.Rule rule : repository.createRules()) {
      NewRule newRule=newRepository.createRule(rule.getKey());
      newRule.setName(ruleName(repository.getKey(),rule));
      newRule.setHtmlDescription(ruleDescription(repository.getKey(),rule));
      newRule.setInternalKey(rule.getConfigKey());
      newRule.setTemplate(Cardinality.MULTIPLE.equals(rule.getCardinality()));
      newRule.setSeverity(rule.getSeverity().toString());
      newRule.setStatus(rule.getStatus() == null ? RuleStatus.defaultStatus() : RuleStatus.valueOf(rule.getStatus()));
      newRule.setTags(rule.getTags());
      for (      RuleParam param : rule.getParams()) {
        NewParam newParam=newRule.createParam(param.getKey());
        newParam.setDefaultValue(param.getDefaultValue());
        newParam.setDescription(paramDescription(repository.getKey(),rule.getKey(),param));
        newParam.setType(RuleParamType.parse(param.getType()));
      }
      updateRuleDebtDefinitions(newRule,repository.getKey(),rule.getKey(),ruleDebts);
    }
    newRepository.done();
  }
}
