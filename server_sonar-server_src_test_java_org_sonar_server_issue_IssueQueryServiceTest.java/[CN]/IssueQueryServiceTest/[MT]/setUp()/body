{
  when(dbClient.openSession(false)).thenReturn(session);
  when(dbClient.componentDao()).thenReturn(componentDao);
  when(dbClient.authorDao()).thenReturn(authorDao);
  when(componentService.componentUuids(any(DbSession.class),any(Collection.class),eq(true))).thenAnswer(new Answer<Collection<String>>(){
    @Override public Collection<String> answer(    InvocationOnMock invocation) throws Throwable {
      Collection<String> componentKeys=(Collection<String>)invocation.getArguments()[1];
      return componentKeys == null ? Arrays.<String>asList() : componentKeys;
    }
  }
);
  issueQueryService=new IssueQueryService(dbClient,componentService,system,userSessionRule);
}
