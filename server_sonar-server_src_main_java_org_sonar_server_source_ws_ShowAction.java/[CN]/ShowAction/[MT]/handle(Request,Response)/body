{
  String fileKey=request.mandatoryParam("key");
  int from=Math.max(request.mandatoryParamAsInt("from"),1);
  int to=(Integer)ObjectUtils.defaultIfNull(request.paramAsInt("to"),Integer.MAX_VALUE);
  DbSession session=dbClient.openSession(false);
  try {
    ComponentDto componentDto=dbClient.componentDao().getByKey(session,fileKey);
    UserSession.get().checkComponentPermission(UserRole.CODEVIEWER,fileKey);
    long linesSize=sourceService.countLines(componentDto.uuid());
    int size=to - from;
    boolean disableHighlighting=size > 3000 && linesSize > 3000;
    List<String> linesHtml;
    if (!disableHighlighting) {
      linesHtml=sourceService.getLinesAsHtml(componentDto.uuid(),from,to);
    }
 else {
      linesHtml=sourceService.getLinesAsTxt(componentDto.uuid(),from,to);
    }
    JsonWriter json=response.newJsonWriter().beginObject();
    writeSource(linesHtml,from,json);
    json.endObject().close();
  }
  finally {
    session.close();
  }
}
