{
  ExecutorService executorService=Executors.newSingleThreadExecutor();
  try {
    for (    InputFile inputFile : sourceFiles) {
      LOG.debug("Detection of duplications for {}",inputFile);
      String resourceEffectiveKey=((DefaultInputFile)inputFile).key();
      Collection<Block> fileBlocks=index.getByInputFile(inputFile,resourceEffectiveKey);
      List<CloneGroup> clones;
      try {
        clones=executorService.submit(new Task(index,fileBlocks)).get(TIMEOUT,TimeUnit.SECONDS);
      }
 catch (      TimeoutException e) {
        clones=Collections.emptyList();
        LOG.warn("Timeout during detection of duplications for " + inputFile,e);
      }
catch (      InterruptedException|ExecutionException e) {
        throw new IllegalStateException("Fail during detection of duplication for " + inputFile,e);
      }
      saveDuplications(inputFile,clones);
    }
  }
  finally {
    executorService.shutdown();
  }
}
