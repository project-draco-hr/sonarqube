{
  InOrder inOrder=inOrder(spyPostOrderTypeAwareVisitor,spyPathAwareVisitor);
  VisitorsCrawler underTest=new VisitorsCrawler(Arrays.asList(spyPostOrderTypeAwareVisitor,spyPathAwareVisitor));
  underTest.visit(COMPONENT_TREE);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(FILE_5);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitFile(FILE_5);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(FILE_5),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitFile(eq(FILE_5),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(DIRECTORY_4);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitDirectory(DIRECTORY_4);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(DIRECTORY_4),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitDirectory(eq(DIRECTORY_4),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(MODULE_3);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitModule(MODULE_3);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(MODULE_3),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitModule(eq(MODULE_3),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(MODULE_2);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitModule(MODULE_2);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(MODULE_2),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitModule(eq(MODULE_2),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitAny(COMPONENT_TREE);
  inOrder.verify(spyPostOrderTypeAwareVisitor).visitProject(COMPONENT_TREE);
  inOrder.verify(spyPathAwareVisitor).visitAny(eq(COMPONENT_TREE),any(PathAwareVisitor.Path.class));
  inOrder.verify(spyPathAwareVisitor).visitProject(eq(COMPONENT_TREE),any(PathAwareVisitor.Path.class));
}
