{
  int i=(int)Math.random() * 10;
  String s1="value" + i;
  String s2="value" + i;
  Map<String,String> parentProps=new HashMap<>();
  parentProps.put("toBeMergeProps","fooParent");
  parentProps.put("existingChildProp","barParent");
  parentProps.put("duplicatedProp",s1);
  parentProps.put("sonar.projectDescription","Desc from Parent");
  Map<String,String> childProps=new HashMap<>();
  childProps.put("existingChildProp","barChild");
  childProps.put("otherProp","tutuChild");
  childProps.put("duplicatedProp",s2);
  ProjectReactorBuilder.mergeParentProperties(childProps,parentProps);
  assertThat(childProps).hasSize(4);
  assertThat(childProps.get("toBeMergeProps")).isEqualTo("fooParent");
  assertThat(childProps.get("existingChildProp")).isEqualTo("barChild");
  assertThat(childProps.get("otherProp")).isEqualTo("tutuChild");
  assertThat(childProps.get("sonar.projectDescription")).isNull();
  assertThat(childProps.get("duplicatedProp")).isSameAs(parentProps.get("duplicatedProp"));
}
