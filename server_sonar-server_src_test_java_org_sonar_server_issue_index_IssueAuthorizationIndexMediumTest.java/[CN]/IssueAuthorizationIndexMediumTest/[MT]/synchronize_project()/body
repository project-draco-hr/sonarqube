{
  project=new ComponentDto().setKey("Sample").setAuthorizationUpdatedAt(DateUtils.parseDate("2014-09-11"));
  db.componentDao().insert(session,project);
  GroupDto sonarUsers=new GroupDto().setName("devs");
  db.groupDao().insert(session,sonarUsers);
  UserDto john=new UserDto().setLogin("john").setName("John").setActive(true);
  db.userDao().insert(session,john);
  tester.get(PermissionFacade.class).insertGroupPermission(project.getId(),"devs",UserRole.USER,session);
  tester.get(PermissionFacade.class).insertUserPermission(project.getId(),john.getId(),UserRole.USER,session);
  session.commit();
  assertThat(index.getNullableByKey(project.getKey())).isNull();
  db.issueAuthorizationDao().synchronizeAfter(session,new Date(0),ImmutableMap.of(IssueAuthorizationDao.PROJECT_KEY,project.key()));
  session.commit();
  IssueAuthorizationDoc issueAuthorizationDoc=index.getByKey(project.getKey());
  assertThat(issueAuthorizationDoc).isNotNull();
  assertThat(issueAuthorizationDoc.project()).isEqualTo("Sample");
  assertThat(issueAuthorizationDoc.permission()).isEqualTo("user");
  assertThat(issueAuthorizationDoc.groups()).containsExactly("devs");
  assertThat(issueAuthorizationDoc.users()).containsExactly("john");
  assertThat(issueAuthorizationDoc.updatedAt()).isNotNull();
}
