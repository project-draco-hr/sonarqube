{
  RuleDoc doc=new RuleDoc(Maps.<String,Object>newHashMapWithExpectedSize(16));
  String ruleKey=rs.getString(1);
  String repositoryKey=rs.getString(2);
  RuleKey key=RuleKey.of(repositoryKey,ruleKey);
  doc.setKey(key.toString());
  doc.setKeyAsList(ImmutableList.of(repositoryKey,ruleKey));
  doc.setRuleKey(ruleKey);
  doc.setRepository(repositoryKey);
  doc.setName(rs.getString(3));
  String description=rs.getString(4);
  String descriptionFormat=rs.getString(5);
  if (descriptionFormat != null) {
    if (RuleDto.Format.HTML.equals(RuleDto.Format.valueOf(descriptionFormat))) {
      doc.setHtmlDescription(description);
    }
 else {
      doc.setHtmlDescription(description == null ? null : Markdown.convertToHtml(description));
    }
  }
  doc.setSeverity(SeverityUtil.getSeverityFromOrdinal(rs.getInt(6)));
  doc.setStatus(rs.getString(7));
  doc.setIsTemplate(rs.getBoolean(8));
  doc.setAllTags(Sets.union(stringTagsToSet(rs.getString(9)),stringTagsToSet(rs.getString(10))));
  String templateRuleKey=rs.getString(11);
  String templateRepoKey=rs.getString(12);
  if (templateRepoKey != null && templateRuleKey != null) {
    doc.setTemplateKey(RuleKey.of(templateRepoKey,templateRuleKey).toString());
  }
 else {
    doc.setTemplateKey(null);
  }
  doc.setInternalKey(rs.getString(13));
  doc.setLanguage(rs.getString(14));
  doc.setType(RuleType.valueOf(rs.getInt(15)));
  doc.setCreatedAt(rs.getLong(16));
  doc.setUpdatedAt(rs.getLong(17));
  return doc;
}
