{
  DbSession session=dbClient.openSession(false);
  try {
    IssueQuery.Builder builder=IssueQuery.builder(userSession).issueKeys(RubyUtils.toStrings(params.get(IssueFilterParameters.ISSUES))).severities(RubyUtils.toStrings(params.get(IssueFilterParameters.SEVERITIES))).statuses(RubyUtils.toStrings(params.get(IssueFilterParameters.STATUSES))).resolutions(RubyUtils.toStrings(params.get(IssueFilterParameters.RESOLUTIONS))).resolved(RubyUtils.toBoolean(params.get(IssueFilterParameters.RESOLVED))).rules(toRules(params.get(IssueFilterParameters.RULES))).assignees(buildAssignees(RubyUtils.toStrings(params.get(IssueFilterParameters.ASSIGNEES)))).languages(RubyUtils.toStrings(params.get(IssueFilterParameters.LANGUAGES))).tags(RubyUtils.toStrings(params.get(IssueFilterParameters.TAGS))).types(RubyUtils.toStrings(params.get(IssueFilterParameters.TYPES))).assigned(RubyUtils.toBoolean(params.get(IssueFilterParameters.ASSIGNED))).hideRules(RubyUtils.toBoolean(params.get(IssueFilterParameters.HIDE_RULES))).createdAt(RubyUtils.toDate(params.get(IssueFilterParameters.CREATED_AT))).createdAfter(buildCreatedAfterFromDates(RubyUtils.toDate(params.get(CREATED_AFTER)),(String)params.get(CREATED_IN_LAST))).createdBefore(RubyUtils.toDate(parseEndingDateOrDateTime((String)params.get(IssueFilterParameters.CREATED_BEFORE))));
    Set<String> allComponentUuids=Sets.newHashSet();
    boolean effectiveOnComponentOnly=mergeDeprecatedComponentParameters(session,RubyUtils.toBoolean(params.get(IssueFilterParameters.ON_COMPONENT_ONLY)),RubyUtils.toStrings(params.get(IssueFilterParameters.COMPONENTS)),RubyUtils.toStrings(params.get(IssueFilterParameters.COMPONENT_UUIDS)),RubyUtils.toStrings(params.get(IssueFilterParameters.COMPONENT_KEYS)),RubyUtils.toStrings(params.get(IssueFilterParameters.COMPONENT_ROOT_UUIDS)),RubyUtils.toStrings(params.get(IssueFilterParameters.COMPONENT_ROOTS)),allComponentUuids);
    addComponentParameters(builder,session,effectiveOnComponentOnly,allComponentUuids,RubyUtils.toStrings(params.get(IssueFilterParameters.PROJECT_UUIDS)),RubyUtils.toStrings(ObjectUtils.defaultIfNull(params.get(IssueFilterParameters.PROJECT_KEYS),params.get(IssueFilterParameters.PROJECTS))),RubyUtils.toStrings(params.get(IssueFilterParameters.MODULE_UUIDS)),RubyUtils.toStrings(params.get(IssueFilterParameters.DIRECTORIES)),RubyUtils.toStrings(params.get(IssueFilterParameters.FILE_UUIDS)),RubyUtils.toStrings(params.get(IssueFilterParameters.AUTHORS)));
    String sort=(String)params.get(IssueFilterParameters.SORT);
    if (!Strings.isNullOrEmpty(sort)) {
      builder.sort(sort);
      builder.asc(RubyUtils.toBoolean(params.get(IssueFilterParameters.ASC)));
    }
    String facetMode=(String)params.get(IssueFilterParameters.FACET_MODE);
    if (!Strings.isNullOrEmpty(facetMode)) {
      builder.facetMode(facetMode);
    }
 else {
      builder.facetMode(IssueFilterParameters.FACET_MODE_COUNT);
    }
    return builder.build();
  }
  finally {
    session.close();
  }
}
