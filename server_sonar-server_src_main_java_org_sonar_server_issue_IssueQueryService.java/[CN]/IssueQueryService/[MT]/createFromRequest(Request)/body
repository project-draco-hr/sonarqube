{
  DbSession session=dbClient.openSession(false);
  try {
    IssueQuery.Builder builder=IssueQuery.builder(userSession).issueKeys(request.paramAsStrings(IssueFilterParameters.ISSUES)).severities(request.paramAsStrings(IssueFilterParameters.SEVERITIES)).statuses(request.paramAsStrings(IssueFilterParameters.STATUSES)).resolutions(request.paramAsStrings(IssueFilterParameters.RESOLUTIONS)).resolved(request.paramAsBoolean(IssueFilterParameters.RESOLVED)).rules(stringsToRules(request.paramAsStrings(IssueFilterParameters.RULES))).actionPlans(request.paramAsStrings(IssueFilterParameters.ACTION_PLANS)).reporters(request.paramAsStrings(IssueFilterParameters.REPORTERS)).assignees(buildAssignees(request.paramAsStrings(IssueFilterParameters.ASSIGNEES))).languages(request.paramAsStrings(IssueFilterParameters.LANGUAGES)).tags(request.paramAsStrings(IssueFilterParameters.TAGS)).assigned(request.paramAsBoolean(IssueFilterParameters.ASSIGNED)).planned(request.paramAsBoolean(IssueFilterParameters.PLANNED)).createdAt(request.paramAsDateTime(IssueFilterParameters.CREATED_AT)).createdAfter(buildCreatedAfter(request.paramAsDateTime(IssueFilterParameters.CREATED_AFTER),request.param(IssueFilterParameters.CREATED_IN_LAST))).createdBefore(request.paramAsDateTime(IssueFilterParameters.CREATED_BEFORE)).ignorePaging(request.paramAsBoolean(IssueFilterParameters.IGNORE_PAGING));
    Set<String> allComponentUuids=Sets.newHashSet();
    boolean effectiveOnComponentOnly=mergeDeprecatedComponentParameters(session,request.paramAsBoolean(IssueFilterParameters.ON_COMPONENT_ONLY),request.paramAsStrings(IssueFilterParameters.COMPONENTS),request.paramAsStrings(IssueFilterParameters.COMPONENT_UUIDS),request.paramAsStrings(IssueFilterParameters.COMPONENT_KEYS),request.paramAsStrings(IssueFilterParameters.COMPONENT_ROOT_UUIDS),request.paramAsStrings(IssueFilterParameters.COMPONENT_ROOTS),allComponentUuids);
    addComponentParameters(builder,session,effectiveOnComponentOnly,allComponentUuids,request.paramAsStrings(IssueFilterParameters.PROJECT_UUIDS),request.paramAsStrings(IssueFilterParameters.PROJECT_KEYS),request.paramAsStrings(IssueFilterParameters.MODULE_UUIDS),request.paramAsStrings(IssueFilterParameters.DIRECTORIES),request.paramAsStrings(IssueFilterParameters.FILE_UUIDS),request.paramAsStrings(IssueFilterParameters.AUTHORS));
    String sort=request.param(SearchAction.PARAM_SORT);
    if (!Strings.isNullOrEmpty(sort)) {
      builder.sort(sort);
      builder.asc(request.paramAsBoolean(SearchAction.PARAM_ASCENDING));
    }
    return builder.build();
  }
  finally {
    session.close();
  }
}
