{
  try {
    String[] ids=new String[rules.size()];
    BytesStream[] docs=new BytesStream[rules.size()];
    int index=0;
    TimeProfiler profiler=new TimeProfiler();
    profiler.start("Build rules documents");
    for (    RuleDto rule : rules) {
      ids[index]=rule.getId().toString();
      CharacteristicDto subCharacteristic=characteristicsById.get(rule.getSubCharacteristicId() != null ? rule.getSubCharacteristicId() : rule.getDefaultSubCharacteristicId());
      CharacteristicDto characteristic=subCharacteristic != null ? characteristicsById.get(subCharacteristic.getParentId()) : null;
      characteristicsById.get(rule.getSubCharacteristicId() != null ? rule.getSubCharacteristicId() : rule.getDefaultSubCharacteristicId());
      docs[index]=ruleDocument(rule,characteristic,subCharacteristic,paramsByRule.get(rule.getId()),tagsByRule.get(rule.getId()));
      index++;
    }
    profiler.stop();
    if (!rules.isEmpty()) {
      profiler.start("Index rules");
      searchIndex.bulkIndex(INDEX_RULES,TYPE_RULE,ids,docs);
      profiler.stop();
    }
    return ids;
  }
 catch (  IOException ioe) {
    throw new IllegalStateException("Unable to index rules",ioe);
  }
}
