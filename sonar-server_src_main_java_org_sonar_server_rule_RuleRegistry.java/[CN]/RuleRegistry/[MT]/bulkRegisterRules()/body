{
  DatabaseSession session=sessionFactory.getSession();
  try {
    List<String> ids=Lists.newArrayList();
    List<BytesStream> docs=Lists.newArrayList();
    for (    Rule rule : session.getResults(Rule.class)) {
      ids.add(rule.getId().toString());
      XContentBuilder document=XContentFactory.jsonBuilder().startObject().field("id",rule.getId()).field("key",rule.getKey()).field("language",rule.getLanguage()).field("name",ruleI18nManager.getName(rule,Locale.getDefault())).field("description",ruleI18nManager.getDescription(rule.getRepositoryKey(),rule.getKey(),Locale.getDefault())).field("parentKey",rule.getParent() == null ? null : rule.getParent().getKey()).field("repositoryKey",rule.getRepositoryKey()).field("severity",rule.getSeverity()).field("status",rule.getStatus()).field("createdAt",rule.getCreatedAt()).field("updatedAt",rule.getUpdatedAt());
      if (!rule.getParams().isEmpty()) {
        document.startArray("params");
        for (        RuleParam param : rule.getParams()) {
          document.startObject().field("key",param.getKey()).field("type",param.getType()).field("defaultValue",param.getDefaultValue()).field("description",param.getDescription()).endObject();
        }
        document.endArray();
      }
      docs.add(document.endObject());
    }
    searchIndex.bulkIndex(INDEX_RULES,TYPE_RULE,ids.toArray(new String[0]),docs.toArray(new BytesStream[0]));
  }
 catch (  IOException ioe) {
    throw new IllegalStateException("Unable to index rules",ioe);
  }
}
