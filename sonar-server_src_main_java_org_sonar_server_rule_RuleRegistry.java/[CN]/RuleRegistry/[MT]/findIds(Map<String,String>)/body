{
  Map<String,String> params=Maps.newHashMap(query);
  SearchQuery searchQuery=SearchQuery.create();
  searchQuery.index(INDEX_RULES).type(TYPE_RULE).scrollSize(500);
  if (params.containsKey(PARAM_NAMEORKEY)) {
    searchQuery.searchString(params.remove(PARAM_NAMEORKEY));
  }
  if (!params.containsKey(PARAM_STATUS)) {
    searchQuery.notField(PARAM_STATUS,Rule.STATUS_REMOVED);
  }
  for (  Map.Entry<String,String> param : params.entrySet()) {
    searchQuery.field(param.getKey(),param.getValue().split("\\|"));
  }
  try {
    List<Integer> result=newArrayList();
    for (    String docId : searchIndex.findDocumentIds(searchQuery)) {
      result.add(Integer.parseInt(docId));
    }
    return result;
  }
 catch (  ElasticSearchException searchException) {
    throw new IllegalArgumentException("Unable to perform search, please check query",searchException);
  }
}
