{
  BoolFilterBuilder mainFilter=boolFilter().mustNot(termFilter(RuleDocument.FIELD_STATUS,STATUS_REMOVED));
  if (StringUtils.isNotBlank(query.query())) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.query(),RuleDocument.FIELD_NAME + ".search",RuleDocument.FIELD_KEY).operator(Operator.AND)));
  }
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_LANGUAGE,query.languages());
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_REPOSITORY_KEY,query.repositories());
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_SEVERITY,query.severities());
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_STATUS,query.statuses());
  if (!query.tags().isEmpty()) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.tags(),RuleDocument.FIELD_ADMIN_TAGS,RuleDocument.FIELD_SYSTEM_TAGS).operator(Operator.OR)));
  }
  if (!query.debtCharacteristics().isEmpty()) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.debtCharacteristics(),RuleDocument.FIELD_CHARACTERISTIC_KEY,RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY).operator(Operator.OR)));
  }
  if (query.hasDebtCharacteristic() != null) {
    if (Boolean.TRUE.equals(query.hasDebtCharacteristic())) {
      mainFilter.must(FilterBuilders.existsFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY));
    }
 else {
      mainFilter.mustNot(FilterBuilders.existsFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY));
    }
  }
  Builder<Rule> rulesBuilder=ImmutableList.builder();
  SearchRequestBuilder searchRequestBuilder=searchIndex.client().prepareSearch(INDEX_RULES).setTypes(TYPE_RULE).setPostFilter(mainFilter).addSort(RuleDocument.FIELD_NAME,SortOrder.ASC);
  if (RuleQuery.NO_PAGINATION == query.pageSize()) {
    final int scrollTime=100;
    SearchResponse scrollResp=searchRequestBuilder.setSearchType(SearchType.SCAN).setScroll(new TimeValue(scrollTime)).setSize(50).execute().actionGet();
    while (true) {
      scrollResp=searchIndex.client().prepareSearchScroll(scrollResp.getScrollId()).setScroll(new TimeValue(scrollTime)).execute().actionGet();
      for (      SearchHit hit : scrollResp.getHits()) {
        rulesBuilder.add(RuleDocumentParser.parse(hit.sourceAsMap()));
      }
      if (scrollResp.getHits().getHits().length == 0) {
        break;
      }
    }
    return new PagedResult<Rule>(rulesBuilder.build(),null);
  }
 else {
    Paging paging=Paging.create(query.pageSize(),query.pageIndex());
    SearchHits hits=searchIndex.executeRequest(searchRequestBuilder.setSize(paging.pageSize()).setFrom(paging.offset()));
    for (    SearchHit hit : hits.hits()) {
      rulesBuilder.add(RuleDocumentParser.parse(hit.sourceAsMap()));
    }
    return new PagedResult<Rule>(rulesBuilder.build(),PagingResult.create(paging.pageSize(),paging.pageIndex(),hits.getTotalHits()));
  }
}
