{
  BoolFilterBuilder mainFilter=boolFilter().mustNot(termFilter(RuleDocument.FIELD_STATUS,STATUS_REMOVED));
  if (StringUtils.isNotBlank(query.query())) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.query(),RuleDocument.FIELD_NAME + ".search",RuleDocument.FIELD_KEY).operator(Operator.AND)));
  }
  if (query.characteristicKey() != null) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.characteristicKey(),RuleDocument.FIELD_CHARACTERISTIC_KEY,RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY).operator(Operator.OR)));
  }
  Paging paging=Paging.create(query.pageSize(),query.pageIndex());
  SearchHits hits=searchIndex.executeRequest(searchIndex.client().prepareSearch(INDEX_RULES).setTypes(TYPE_RULE).setPostFilter(mainFilter).addSort(RuleDocument.FIELD_NAME,SortOrder.ASC).setSize(paging.pageSize()).setFrom(paging.offset()));
  Builder<Rule> rulesBuilder=ImmutableList.builder();
  for (  SearchHit hit : hits.hits()) {
    rulesBuilder.add(RuleDocumentParser.parse(hit.sourceAsMap()));
  }
  return new PagedResult<Rule>(rulesBuilder.build(),PagingResult.create(paging.pageSize(),paging.pageIndex(),hits.getTotalHits()));
}
