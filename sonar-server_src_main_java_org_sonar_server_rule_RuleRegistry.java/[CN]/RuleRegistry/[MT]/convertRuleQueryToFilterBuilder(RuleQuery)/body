{
  QueryBuilder mainQuery=QueryBuilders.matchAllQuery();
  if (StringUtils.isNotBlank(query.searchQuery())) {
    mainQuery=QueryBuilders.multiMatchQuery(query.searchQuery(),RuleDocument.FIELD_KEY,RuleDocument.FIELD_NAME,RuleDocument.FIELD_NAME + ".search").operator(Operator.AND);
  }
  BoolFilterBuilder mainFilter=boolFilter().mustNot(termFilter(RuleDocument.FIELD_STATUS,STATUS_REMOVED));
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_LANGUAGE,query.languages());
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_REPOSITORY_KEY,query.repositories());
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_SEVERITY,query.severities());
  addMustTermOrTerms(mainFilter,RuleDocument.FIELD_STATUS,query.statuses());
  if (!query.tags().isEmpty()) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.tags(),RuleDocument.FIELD_ADMIN_TAGS,RuleDocument.FIELD_SYSTEM_TAGS).operator(Operator.OR)));
  }
  if (!query.debtCharacteristics().isEmpty()) {
    mainFilter.must(FilterBuilders.queryFilter(QueryBuilders.multiMatchQuery(query.debtCharacteristics(),RuleDocument.FIELD_CHARACTERISTIC_KEY,RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY).operator(Operator.OR)));
  }
  if (query.hasDebtCharacteristic() != null) {
    if (Boolean.TRUE.equals(query.hasDebtCharacteristic())) {
      mainFilter.must(FilterBuilders.existsFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY));
    }
 else {
      mainFilter.mustNot(FilterBuilders.existsFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY));
    }
  }
  return QueryBuilders.filteredQuery(mainQuery,mainFilter);
}
