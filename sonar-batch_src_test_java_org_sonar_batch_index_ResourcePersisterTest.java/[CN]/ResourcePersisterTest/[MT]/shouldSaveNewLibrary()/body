{
  setupData("shared");
  persister.persist(null,singleProject,null);
  persister.persistLibrary(singleProject.getAnalysisDate(),(Library)new Library("junit:junit","4.8.2").setEffectiveKey("junit:junit"));
  persister.persistLibrary(singleProject.getAnalysisDate(),(Library)new Library("junit:junit","4.8.2").setEffectiveKey("junit:junit"));
  persister.persistLibrary(singleProject.getAnalysisDate(),(Library)new Library("junit:junit","3.2").setEffectiveKey("junit:junit"));
  checkTables("shouldSaveNewLibrary",new String[]{"build_date","created_at","authorization_updated_at","uuid","project_uuid","module_uuid","module_uuid_path"},"projects","snapshots");
  enableSnapshot(1002);
  try (SqlSession session=getMyBatis().openSession(false)){
    ComponentDto newLib=session.getMapper(ComponentMapper.class).selectByKeys(Arrays.asList("junit:junit")).get(0);
    assertThat(newLib.uuid()).isNotNull();
    assertThat(newLib.projectUuid()).isEqualTo(newLib.uuid());
    assertThat(newLib.moduleUuid()).isNull();
    assertThat(newLib.moduleUuidPath()).isEqualTo(MODULE_UUID_PATH_SEPARATOR + newLib.uuid() + MODULE_UUID_PATH_SEPARATOR);
  }
 }
