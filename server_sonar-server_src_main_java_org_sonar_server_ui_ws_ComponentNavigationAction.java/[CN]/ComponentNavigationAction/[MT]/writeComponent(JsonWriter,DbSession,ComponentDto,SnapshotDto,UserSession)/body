{
  json.prop("key",component.key()).prop("uuid",component.uuid()).prop("name",component.name()).prop("isComparable",componentTypeHasProperty(component,PROPERTY_COMPARABLE)).prop("canBeFavorite",userSession.isLoggedIn()).prop("showBackgroundTasks",ActivityWsAction.isAllowedOnComponentUuid(userSession,component.uuid())).prop("isFavorite",isFavourite(session,component,userSession));
  List<DashboardDto> dashboards=activeDashboardDao.selectProjectDashboardsForUserLogin(session,userSession.getLogin());
  if (dashboards.isEmpty()) {
    dashboards=activeDashboardDao.selectProjectDashboardsForUserLogin(session,ANONYMOUS);
  }
  writeDashboards(json,dashboards);
  if (snapshot != null) {
    json.prop("version",snapshot.getVersion()).prop("snapshotDate",DateUtils.formatDateTime(new Date(snapshot.getCreatedAt())));
    List<String> availableMeasures=dbClient.measureDao().selectMetricKeysForSnapshot(session,snapshot.getId());
    List<ViewProxy<Page>> pages=views.getPages(NavigationSection.RESOURCE,component.scope(),component.qualifier(),component.language(),availableMeasures.toArray(new String[availableMeasures.size()]));
    writeExtensions(json,component,pages,userSession.locale());
  }
}
