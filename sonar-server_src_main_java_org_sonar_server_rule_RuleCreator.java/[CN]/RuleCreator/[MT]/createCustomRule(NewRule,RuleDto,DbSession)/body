{
  RuleKey ruleKey=RuleKey.of(templateRuleDto.getRepositoryKey(),templateRuleDto.getRuleKey() + "_" + system.now());
  RuleDto ruleDto=RuleDto.createFor(ruleKey).setConfigKey(templateRuleDto.getConfigKey()).setName(newRule.name()).setDescription(newRule.htmlDescription()).setSeverity(newRule.severity()).setCardinality(Cardinality.SINGLE).setStatus(newRule.status()).setLanguage(templateRuleDto.getLanguage()).setDefaultSubCharacteristicId(templateRuleDto.getDefaultSubCharacteristicId()).setDefaultRemediationFunction(templateRuleDto.getDefaultRemediationFunction()).setDefaultRemediationCoefficient(templateRuleDto.getDefaultRemediationCoefficient()).setDefaultRemediationOffset(templateRuleDto.getDefaultRemediationOffset()).setEffortToFixDescription(templateRuleDto.getEffortToFixDescription()).setTags(templateRuleDto.getTags()).setSystemTags(templateRuleDto.getSystemTags());
  dbClient.ruleDao().insert(dbSession,ruleDto);
  for (  RuleParamDto templateRuleParamDto : dbClient.ruleDao().findRuleParamsByRuleKey(dbSession,templateRuleDto.getKey())) {
    String newRuleParam=newRule.parameter(templateRuleParamDto.getName());
    if (newRuleParam == null) {
      throw new IllegalArgumentException(String.format("The parameter '%s' has not been set",templateRuleParamDto.getName()));
    }
    createCustomRuleParams(newRuleParam,ruleDto,templateRuleParamDto,dbSession);
  }
  return ruleKey;
}
