{
  verifyLoggedIn(userSession);
  ResourceDto resourceDto=resourceDao.getResource(ResourceQuery.create().setKey(issue.componentKey()));
  if (resourceDto == null) {
    throw new IllegalArgumentException("Unknown component: " + issue.componentKey());
  }
  issue.setComponentKey(resourceDto.getKey());
  if (!authorizationDao.isAuthorizedComponentKey(resourceDto.getKey(),userSession.userId(),UserRole.USER)) {
    throw new IllegalStateException("User does not have the required role");
  }
  if (!org.sonar.server.rule.Rule.MANUAL_REPOSITORY_KEY.equals(issue.ruleKey().repository())) {
    throw new IllegalArgumentException("Issues can be created only on rules marked as 'manual': " + issue.ruleKey());
  }
  Rule rule=ruleFinder.findByKey(issue.ruleKey());
  if (rule == null) {
    throw new IllegalArgumentException("Unknown rule: " + issue.ruleKey());
  }
  if (Strings.isNullOrEmpty(issue.message())) {
    issue.setMessage(rule.getName());
  }
  Date now=new Date();
  issue.setCreationDate(now);
  issue.setUpdateDate(now);
  issueStorage.save(issue);
  dryRunCache.reportResourceModification(resourceDto.getKey());
  return issue;
}
