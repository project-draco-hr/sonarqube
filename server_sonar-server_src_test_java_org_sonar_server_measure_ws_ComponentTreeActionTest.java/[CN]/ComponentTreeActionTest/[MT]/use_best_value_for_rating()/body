{
  userSession.anonymous().addProjectUuidPermissions(UserRole.ADMIN,"project-uuid");
  ComponentDto projectDto=newProjectDto("project-uuid");
  componentDb.insertComponent(projectDto);
  SnapshotDto projectSnapshot=dbClient.snapshotDao().insert(dbSession,newAnalysis(projectDto).setPeriodDate(1,parseDateTime("2016-01-11T10:49:50+0100").getTime()).setPeriodMode(1,"previous_version").setPeriodParam(1,"1.0-SNAPSHOT"));
  ComponentDto directoryDto=newDirectory(projectDto,"directory-uuid","path/to/directory").setName("directory-1");
  componentDb.insertComponent(directoryDto);
  ComponentDto file=newFileDto(directoryDto,null,"file-uuid").setName("file-1");
  componentDb.insertComponent(file);
  MetricDto metric=dbClient.metricDao().insert(dbSession,newMetricDtoWithoutOptimization().setKey(NEW_SECURITY_RATING_KEY).setOptimizedBestValue(true).setBestValue(1d).setValueType(ValueType.RATING.name()));
  dbClient.measureDao().insert(dbSession,newMeasureDto(metric,directoryDto,projectSnapshot).setVariation(1,2d));
  db.commit();
  ComponentTreeWsResponse response=call(ws.newRequest().setParam(PARAM_BASE_COMPONENT_ID,"project-uuid").setParam(PARAM_METRIC_KEYS,NEW_SECURITY_RATING_KEY).setParam(PARAM_ADDITIONAL_FIELDS,"metrics"));
  assertThat(response.getComponentsList().get(0).getMeasuresList().get(0).getPeriods().getPeriodsValue(0).getValue()).isEqualTo("2.0");
  assertThat(response.getComponentsList().get(1).getMeasuresList().get(0).getPeriods().getPeriodsValue(0).getValue()).isEqualTo("1.0");
}
