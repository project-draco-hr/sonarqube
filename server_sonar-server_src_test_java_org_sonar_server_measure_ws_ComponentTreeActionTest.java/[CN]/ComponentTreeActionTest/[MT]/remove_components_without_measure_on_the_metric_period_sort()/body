{
  ComponentDto projectDto=newProjectDto("project-uuid");
  SnapshotDto projectSnapshot=componentDb.insertProjectAndSnapshot(projectDto);
  ComponentDto file4=componentDb.insertComponent(newFileDto(projectDto,"file-uuid-4"));
  ComponentDto file3=componentDb.insertComponent(newFileDto(projectDto,"file-uuid-3"));
  ComponentDto file2=componentDb.insertComponent(newFileDto(projectDto,"file-uuid-2"));
  ComponentDto file1=componentDb.insertComponent(newFileDto(projectDto,"file-uuid-1"));
  MetricDto ncloc=newMetricDtoWithoutOptimization().setKey("new_ncloc").setValueType(ValueType.INT.name()).setDirection(1);
  dbClient.metricDao().insert(dbSession,ncloc);
  dbClient.measureDao().insert(dbSession,newMeasureDto(ncloc,file1,projectSnapshot).setVariation(1,1.0d),newMeasureDto(ncloc,file2,projectSnapshot).setVariation(1,2.0d),newMeasureDto(ncloc,file3,projectSnapshot).setVariation(1,3.0d),newMeasureDto(ncloc,file4,projectSnapshot).setValue(4.0d).setVariation(2,4.0d));
  db.commit();
  ComponentTreeWsResponse response=call(ws.newRequest().setParam(PARAM_BASE_COMPONENT_ID,"project-uuid").setParam(Param.SORT,METRIC_PERIOD_SORT + "," + NAME_SORT).setParam(PARAM_METRIC_SORT,"new_ncloc").setParam(PARAM_METRIC_KEYS,"new_ncloc").setParam(PARAM_METRIC_PERIOD_SORT,"1").setParam(PARAM_METRIC_SORT_FILTER,WITH_MEASURES_ONLY_METRIC_SORT_FILTER));
  assertThat(response.getComponentsList()).extracting("id").containsExactly("file-uuid-1","file-uuid-2","file-uuid-3").doesNotContain("file-uuid-4");
}
