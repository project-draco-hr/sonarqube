{
  ComponentDto projectDto=newProjectDto("project-uuid");
  SnapshotDto projectSnapshot=componentDb.insertProjectAndSnapshot(projectDto);
  ComponentDto file4=componentDb.insertComponent(newFileDto(projectDto,null,"file-uuid-4"));
  ComponentDto file3=componentDb.insertComponent(newFileDto(projectDto,null,"file-uuid-3"));
  ComponentDto file1=componentDb.insertComponent(newFileDto(projectDto,null,"file-uuid-1"));
  ComponentDto file2=componentDb.insertComponent(newFileDto(projectDto,null,"file-uuid-2"));
  MetricDto ncloc=newMetricDtoWithoutOptimization().setKey("ncloc").setValueType(ValueType.INT.name()).setDirection(1);
  dbClient.metricDao().insert(dbSession,ncloc);
  dbClient.measureDao().insert(dbSession,newMeasureDto(ncloc,file1,projectSnapshot).setValue(1.0d),newMeasureDto(ncloc,file2,projectSnapshot).setValue(2.0d),newMeasureDto(ncloc,file3,projectSnapshot).setValue(3.0d));
  db.commit();
  ComponentTreeWsResponse response=call(ws.newRequest().setParam(PARAM_BASE_COMPONENT_ID,"project-uuid").setParam(Param.SORT,METRIC_SORT).setParam(PARAM_METRIC_SORT,"ncloc").setParam(PARAM_METRIC_KEYS,"ncloc"));
  assertThat(response.getComponentsList()).extracting("id").containsExactly("file-uuid-1","file-uuid-2","file-uuid-3","file-uuid-4");
  assertThat(response.getPaging().getTotal()).isEqualTo(4);
}
