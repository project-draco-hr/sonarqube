{
  Closure[] closures=null;
  Predicate[] preds=null;
  if (predicatesAndClosures == null) {
    throw new IllegalArgumentException("The predicate and closure map must not be null");
  }
  if (predicatesAndClosures.size() == 0) {
    return NOPClosure.INSTANCE;
  }
  Closure defaultClosure=(Closure)predicatesAndClosures.remove(null);
  int size=predicatesAndClosures.size();
  if (size == 0) {
    return (defaultClosure == null ? NOPClosure.INSTANCE : defaultClosure);
  }
  closures=new Closure[size];
  preds=new Predicate[size];
  int i=0;
  for (Iterator it=predicatesAndClosures.entrySet().iterator(); it.hasNext(); ) {
    Map.Entry entry=(Map.Entry)it.next();
    preds[i]=(Predicate)entry.getKey();
    closures[i]=(Closure)entry.getValue();
    i++;
  }
  return new SwitchClosure(preds,closures,defaultClosure);
}
