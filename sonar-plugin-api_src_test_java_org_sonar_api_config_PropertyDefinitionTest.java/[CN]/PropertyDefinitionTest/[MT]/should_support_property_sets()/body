{
  PropertyDefinition def=PropertyDefinition.builder("hello").name("Hello").fields(PropertyFieldDefinition.build("first").name("First").description("Description").options("A","B").build(),PropertyFieldDefinition.build("second").name("Second").type(PropertyType.INTEGER).indicativeSize(5).build()).build();
  assertThat(def.type()).isEqualTo(PropertyType.PROPERTY_SET);
  assertThat(def.fields()).hasSize(2);
  assertThat(def.fields().get(0).key()).isEqualTo("first");
  assertThat(def.fields().get(0).name()).isEqualTo("First");
  assertThat(def.fields().get(0).description()).isEqualTo("Description");
  assertThat(def.fields().get(0).type()).isEqualTo(PropertyType.STRING);
  assertThat(def.fields().get(0).options()).containsOnly("A","B");
  assertThat(def.fields().get(0).indicativeSize()).isEqualTo(20);
  assertThat(def.fields().get(1).key()).isEqualTo("second");
  assertThat(def.fields().get(1).name()).isEqualTo("Second");
  assertThat(def.fields().get(1).type()).isEqualTo(PropertyType.INTEGER);
  assertThat(def.fields().get(1).options()).isEmpty();
  assertThat(def.fields().get(1).indicativeSize()).isEqualTo(5);
}
