{
  IssueChangeContext context=IssueChangeContext.createScan(new Date());
  DefaultIssue issue=new DefaultIssue().setMessage("the message").setKey("ABCDE").setAssignee("freddy").setFieldChange(context,"resolution",null,"FIXED").setSendNotifications(true).setComponentKey("struts:Action.java").setProjectKey("struts");
  Notification notification=issueNotifications.sendChanges(issue,context,null,new Project("struts"),new ResourceComponent(File.create("Action.java","Action.java",null,false).setEffectiveKey("struts:Action.java"))).get(0);
  assertThat(notification.getFieldValue("message")).isEqualTo("the message");
  assertThat(notification.getFieldValue("key")).isEqualTo("ABCDE");
  assertThat(notification.getFieldValue("componentKey")).isEqualTo("struts:Action.java");
  assertThat(notification.getFieldValue("componentName")).isEqualTo("Action.java");
  assertThat(notification.getFieldValue("old.resolution")).isNull();
  assertThat(notification.getFieldValue("new.resolution")).isEqualTo("FIXED");
  Mockito.verify(manager).scheduleForSending(eq(Arrays.asList(notification)));
}
