{
  dbTester.prepareDbUnit(getClass(),"should_apply_permission_template.xml");
  RoleDao roleDao=dbTester.getDbClient().roleDao();
  assertThat(roleDao.selectGroupPermissions(session,"sonar-administrators",PROJECT.getId())).isEmpty();
  assertThat(roleDao.selectGroupPermissions(session,"sonar-users",PROJECT.getId())).isEmpty();
  assertThat(roleDao.selectGroupPermissions(session,"Anyone",PROJECT.getId())).isEmpty();
  assertThat(dbTester.getDbClient().userPermissionDao().selectPermissionsByLogin(session,"marius",PROJECT.uuid())).isEmpty();
  underTest.applyPermissionTemplate(session,"default_20130101_010203",PROJECT);
  assertThat(roleDao.selectGroupPermissions(session,"sonar-administrators",PROJECT.getId())).containsOnly("admin","issueadmin");
  assertThat(roleDao.selectGroupPermissions(session,"sonar-users",PROJECT.getId())).containsOnly("user","codeviewer");
  assertThat(roleDao.selectGroupPermissions(session,"Anyone",PROJECT.getId())).containsOnly("user","codeviewer");
  assertThat(dbTester.getDbClient().userPermissionDao().selectPermissionsByLogin(session,"marius",PROJECT.uuid())).containsOnly("admin");
  checkAuthorizationUpdatedAtIsUpdated();
}
