{
  dbTester.prepareDbUnit(getClass(),"shared.xml");
  IssueResultSetIterator it=IssueResultSetIterator.create(client,connection,0L);
  Map<String,IssueDoc> issuesByKey=Maps.uniqueIndex(it,new Function<IssueDoc,String>(){
    @Override public String apply(    IssueDoc issue){
      return issue.key();
    }
  }
);
  it.close();
  assertThat(issuesByKey).hasSize(2);
  IssueDoc issue=issuesByKey.get("ABC");
  assertThat(issue.key()).isEqualTo("ABC");
  assertThat(issue.assignee()).isEqualTo("guy1");
  assertThat(issue.componentUuid()).isEqualTo("FILE1");
  assertThat(issue.projectUuid()).isEqualTo("PROJECT1");
  assertThat(issue.tags()).containsOnly("tag1","tag2","tag3");
  assertThat(issue.debt().toMinutes()).isGreaterThan(0L);
  issue=issuesByKey.get("DEF");
  assertThat(issue.key()).isEqualTo("DEF");
  assertThat(issue.assignee()).isEqualTo("guy2");
  assertThat(issue.componentUuid()).isEqualTo("FILE1");
  assertThat(issue.projectUuid()).isEqualTo("PROJECT1");
  assertThat(issue.tags()).isEmpty();
  assertThat(issue.debt().toMinutes()).isGreaterThan(0L);
}
