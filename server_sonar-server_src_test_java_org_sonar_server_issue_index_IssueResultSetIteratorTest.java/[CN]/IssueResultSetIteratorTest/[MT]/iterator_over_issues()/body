{
  dbTester.prepareDbUnit(getClass(),"shared.xml");
  IssueResultSetIterator it=IssueResultSetIterator.create(dbTester.getDbClient(),dbTester.getSession(),0L,null);
  Map<String,IssueDoc> issuesByKey=issuesByKey(it);
  it.close();
  assertThat(issuesByKey).hasSize(4);
  IssueDoc issue=issuesByKey.get("ABC");
  assertThat(issue.key()).isEqualTo("ABC");
  assertThat(issue.assignee()).isEqualTo("guy1");
  assertThat(issue.componentUuid()).isEqualTo("FILE1");
  assertThat(issue.projectUuid()).isEqualTo("PROJECT1");
  assertThat(issue.moduleUuid()).isEqualTo("PROJECT1");
  assertThat(issue.modulePath()).isEqualTo(".PROJECT1.");
  assertThat(issue.directoryPath()).isEqualTo("src/main/java");
  assertThat(issue.filePath()).isEqualTo("src/main/java/Action.java");
  assertThat(issue.tags()).containsOnly("tag1","tag2","tag3");
  assertThat(issue.debt().toMinutes()).isGreaterThan(0L);
  assertThat(issue.type().getDbConstant()).isEqualTo(1);
  issue=issuesByKey.get("BCD");
  assertThat(issue.key()).isEqualTo("BCD");
  assertThat(issue.assignee()).isEqualTo("guy1");
  assertThat(issue.componentUuid()).isEqualTo("MODULE1");
  assertThat(issue.projectUuid()).isEqualTo("PROJECT1");
  assertThat(issue.moduleUuid()).isEqualTo("MODULE1");
  assertThat(issue.modulePath()).isEqualTo(".PROJECT1.MODULE1.");
  assertThat(issue.directoryPath()).isNull();
  assertThat(issue.filePath()).isNull();
  assertThat(issue.tags()).containsOnly("tag1","tag2","tag3");
  assertThat(issue.debt().toMinutes()).isGreaterThan(0L);
  assertThat(issue.type().getDbConstant()).isEqualTo(2);
  issue=issuesByKey.get("DEF");
  assertThat(issue.key()).isEqualTo("DEF");
  assertThat(issue.assignee()).isEqualTo("guy2");
  assertThat(issue.componentUuid()).isEqualTo("FILE1");
  assertThat(issue.projectUuid()).isEqualTo("PROJECT1");
  assertThat(issue.moduleUuid()).isEqualTo("PROJECT1");
  assertThat(issue.modulePath()).isEqualTo(".PROJECT1.");
  assertThat(issue.directoryPath()).isEqualTo("src/main/java");
  assertThat(issue.filePath()).isEqualTo("src/main/java/Action.java");
  assertThat(issue.tags()).isEmpty();
  assertThat(issue.debt().toMinutes()).isGreaterThan(0L);
  assertThat(issue.type().getDbConstant()).isEqualTo(1);
  issue=issuesByKey.get("EFG");
  assertThat(issue.key()).isEqualTo("EFG");
  assertThat(issue.assignee()).isEqualTo("guy1");
  assertThat(issue.componentUuid()).isEqualTo("DIR1");
  assertThat(issue.projectUuid()).isEqualTo("PROJECT1");
  assertThat(issue.moduleUuid()).isEqualTo("MODULE1");
  assertThat(issue.modulePath()).isEqualTo(".PROJECT1.MODULE1.");
  assertThat(issue.directoryPath()).isEqualTo("src/main/java");
  assertThat(issue.filePath()).isEqualTo("src/main/java");
  assertThat(issue.tags()).isEmpty();
  assertThat(issue.debt().toMinutes()).isGreaterThan(0L);
  assertThat(issue.type().getDbConstant()).isEqualTo(1);
}
