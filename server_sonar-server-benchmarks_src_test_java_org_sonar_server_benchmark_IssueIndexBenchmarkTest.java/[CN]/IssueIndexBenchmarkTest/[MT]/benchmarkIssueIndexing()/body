{
  LOGGER.info("Indexing issues");
  IssueIterator issues=new IssueIterator(PROJECTS,FILES_PER_PROJECT,ISSUES_PER_FILE);
  ProgressTask progressTask=new ProgressTask(LOGGER,"issues",issues.count());
  Timer timer=new Timer("IssuesIndex");
  timer.schedule(progressTask,ProgressTask.PERIOD_MS,ProgressTask.PERIOD_MS);
  long start=System.currentTimeMillis();
  tester.get(IssueIndexer.class).index(issues);
  timer.cancel();
  long period=System.currentTimeMillis() - start;
  LOGGER.info(String.format("%d issues indexed in %d ms (%d docs/second)",issues.count.get(),period,1000 * issues.count.get() / period));
  benchmark.expectBetween("Time to index issues",period,350000L,430000L);
  long dirSize=FileUtils.sizeOfDirectory(tester.getEsServerHolder().getHomeDir());
  LOGGER.info(String.format("ES dir: " + FileUtils.byteCountToDisplaySize(dirSize)));
  benchmark.expectBetween("ES dir size (b)",dirSize,385L * FileUtils.ONE_MB,420L * FileUtils.ONE_MB);
}
