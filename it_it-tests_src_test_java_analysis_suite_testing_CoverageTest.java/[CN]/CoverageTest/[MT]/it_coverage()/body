{
  orchestrator.executeBuilds(SonarRunner.create(projectDir("testing/xoo-sample-it-coverage")));
  Resource project=orchestrator.getServer().getWsClient().find(ResourceQuery.createForMetrics("sample-it-coverage",ALL_COVERAGE_METRICS));
  assertThat(project.getMeasureValue("coverage")).isNull();
  assertThat(project.getMeasureValue("it_line_coverage")).isEqualTo(50.0);
  assertThat(project.getMeasureValue("it_lines_to_cover")).isEqualTo(4);
  assertThat(project.getMeasureValue("it_uncovered_lines")).isEqualTo(2);
  assertThat(project.getMeasureValue("it_branch_coverage")).isEqualTo(50.0);
  assertThat(project.getMeasureValue("it_conditions_to_cover")).isEqualTo(2);
  assertThat(project.getMeasureValue("it_uncovered_conditions")).isEqualTo(1);
  assertThat(project.getMeasureValue("it_coverage")).isEqualTo(50.0);
  assertThat(project.getMeasureValue("overall_coverage")).isNull();
  String coverage=orchestrator.getServer().adminWsClient().get("api/sources/lines","key","sample-it-coverage:src/main/xoo/sample/Sample.xoo");
  JSONAssert.assertEquals(IOUtils.toString(this.getClass().getResourceAsStream("/testing/suite/CoverageTest/it_coverage-expected.json"),"UTF-8"),coverage,false);
  verifyComputeEngineTempDirIsEmpty();
}
