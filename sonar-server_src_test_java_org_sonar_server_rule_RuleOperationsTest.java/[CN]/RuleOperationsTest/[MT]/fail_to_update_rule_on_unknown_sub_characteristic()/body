{
  RuleDto dto=new RuleDto().setId(1).setRepositoryKey("squid").setRuleKey("UselessImportCheck").setSubCharacteristicId(2).setRemediationFunction("CONSTANT_ISSUE").setRemediationOffset("10min");
  RuleKey ruleKey=RuleKey.of("squid","UselessImportCheck");
  when(ruleDao.getByKey(ruleKey,session)).thenReturn(dto);
  when(characteristicDao.selectByKey("COMPILER",session)).thenReturn(null);
  try {
    operations.updateRule(new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey("COMPILER").setDebtRemediationFunction("LINEAR_OFFSET").setDebtRemediationCoefficient("2h").setDebtRemediationOffset("20min"),authorizedUserSession);
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(NotFoundException.class);
  }
  verify(ruleDao,never()).update(any(RuleDto.class),eq(session));
  verify(session,never()).commit();
}
