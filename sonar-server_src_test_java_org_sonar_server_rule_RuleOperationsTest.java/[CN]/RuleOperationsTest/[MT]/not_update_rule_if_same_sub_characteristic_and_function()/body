{
  RuleDto dto=new RuleDto().setId(1).setRepositoryKey("squid").setRuleKey("UselessImportCheck").setSubCharacteristicId(2).setRemediationFunction("CONSTANT_ISSUE").setRemediationOffset("10min");
  RuleKey ruleKey=RuleKey.of("squid","UselessImportCheck");
  when(ruleDao.getByKey(session,ruleKey)).thenReturn(dto);
  CharacteristicDto subCharacteristic=new CharacteristicDto().setId(2).setKey("COMPILER").setName("Compiler").setParentId(1);
  when(characteristicDao.selectByKey("COMPILER",session)).thenReturn(subCharacteristic);
  operations.updateRule(new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey("COMPILER").setDebtRemediationFunction("CONSTANT_ISSUE").setDebtRemediationOffset("10min"),authorizedUserSession);
  verify(ruleDao,never()).update(eq(session),any(RuleDto.class));
  verify(session,never()).commit();
}
