{
  Profiler profiler=Profiler.create(LOG).startInfo("Register rules");
  DbSession session=dbClient.openSession(false);
  try {
    Map<RuleKey,RuleDto> allRules=loadRules(session);
    RulesDefinition.Context context=defLoader.load();
    for (    RulesDefinition.ExtendedRepository repoDef : getRepositories(context)) {
      if (languages.get(repoDef.language()) != null) {
        for (        RulesDefinition.Rule ruleDef : repoDef.rules()) {
          registerRule(ruleDef,allRules,session);
        }
        session.commit();
      }
    }
    List<RuleDto> activeRules=processRemainingDbRules(allRules.values(),session);
    List<ActiveRuleChange> changes=removeActiveRulesOnStillExistingRepositories(session,activeRules,context);
    session.commit();
    persistRepositories(session,context.repositories());
    ruleIndexer.index();
    activeRuleIndexer.index(changes);
    profiler.stopDebug();
  }
  finally {
    session.close();
  }
}
