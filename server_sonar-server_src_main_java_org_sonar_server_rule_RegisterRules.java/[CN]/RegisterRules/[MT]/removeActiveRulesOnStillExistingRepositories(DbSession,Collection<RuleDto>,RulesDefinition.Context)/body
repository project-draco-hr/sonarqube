{
  List<String> repositoryKeys=newArrayList(Iterables.transform(context.repositories(),new Function<RulesDefinition.Repository,String>(){
    @Override public String apply(    @Nonnull RulesDefinition.Repository input){
      return input.key();
    }
  }
));
  List<ActiveRuleChange> changes=new ArrayList<>();
  for (  RuleDto rule : removedRules) {
    if (repositoryKeys.contains(rule.getRepositoryKey())) {
      changes.addAll(ruleActivator.deactivate(session,rule));
    }
  }
  return changes;
}
