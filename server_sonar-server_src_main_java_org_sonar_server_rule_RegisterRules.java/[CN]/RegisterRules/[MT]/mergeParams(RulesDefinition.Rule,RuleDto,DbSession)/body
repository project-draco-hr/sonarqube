{
  List<RuleParamDto> paramDtos=dbClient.deprecatedRuleDao().selectRuleParamsByRuleKey(session,rule.getKey());
  Map<String,RuleParamDto> existingParamsByName=Maps.newHashMap();
  for (  RuleParamDto paramDto : paramDtos) {
    RulesDefinition.Param paramDef=ruleDef.param(paramDto.getName());
    if (paramDef == null) {
      dbClient.activeRuleDao().deleteParamsByRuleParam(session,rule,paramDto.getName());
      dbClient.deprecatedRuleDao().deleteRuleParam(session,rule,paramDto);
    }
 else {
      if (mergeParam(paramDto,paramDef)) {
        dbClient.deprecatedRuleDao().updateRuleParam(session,rule,paramDto);
      }
      existingParamsByName.put(paramDto.getName(),paramDto);
    }
  }
  for (  RulesDefinition.Param param : ruleDef.params()) {
    RuleParamDto paramDto=existingParamsByName.get(param.key());
    if (paramDto == null) {
      paramDto=RuleParamDto.createFor(rule).setName(param.key()).setDescription(param.description()).setDefaultValue(param.defaultValue()).setType(param.type().toString());
      dbClient.deprecatedRuleDao().insertRuleParam(session,rule,paramDto);
      if (!StringUtils.isEmpty(param.defaultValue())) {
        for (        ActiveRuleDto activeRule : dbClient.activeRuleDao().selectByRule(session,rule)) {
          ActiveRuleParamDto activeParam=ActiveRuleParamDto.createFor(paramDto).setValue(param.defaultValue());
          dbClient.activeRuleDao().insertParam(session,activeRule,activeParam);
        }
      }
    }
  }
}
