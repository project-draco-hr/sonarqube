{
  Long componentId=getComponentId(session,permissionChange.componentKey());
  checkProjectAdminUserByComponentKey(userSession,permissionChange.componentKey());
  List<String> existingPermissions=dbClient.roleDao().selectGroupPermissions(session,permissionChange.groupName(),componentId);
  if (shouldSkipPermissionChange(operation,existingPermissions,permissionChange)) {
    return false;
  }
  Long targetedGroup=getTargetedGroup(session,permissionChange.groupName());
  String permission=permissionChange.permission();
  if (Operation.ADD == operation) {
    checkNotAnyoneAndAdmin(permission,permissionChange.groupName());
    permissionRepository.insertGroupPermission(componentId,targetedGroup,permission,session);
  }
 else {
    checkAdminUsersExistOutsideTheRemovedGroup(session,permissionChange,targetedGroup);
    permissionRepository.deleteGroupPermission(componentId,targetedGroup,permission,session);
  }
  return true;
}
