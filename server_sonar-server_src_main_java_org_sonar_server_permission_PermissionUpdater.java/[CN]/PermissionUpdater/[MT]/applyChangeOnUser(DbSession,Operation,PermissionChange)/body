{
  Long componentId=getComponentId(session,permissionChange.componentKey());
  checkProjectAdminUserByComponentKey(userSession,permissionChange.componentKey());
  List<String> existingPermissions=dbClient.roleDao().selectUserPermissions(session,permissionChange.userLogin(),componentId);
  if (shouldSkipPermissionChange(operation,existingPermissions,permissionChange)) {
    return false;
  }
  Long targetedUser=getTargetedUser(session,permissionChange.userLogin());
  if (Operation.ADD == operation) {
    permissionRepository.insertUserPermission(componentId,targetedUser,permissionChange.permission(),session);
  }
 else {
    checkOtherAdminUsersExist(session,permissionChange);
    permissionRepository.deleteUserPermission(componentId,targetedUser,permissionChange.permission(),session);
  }
  return true;
}
