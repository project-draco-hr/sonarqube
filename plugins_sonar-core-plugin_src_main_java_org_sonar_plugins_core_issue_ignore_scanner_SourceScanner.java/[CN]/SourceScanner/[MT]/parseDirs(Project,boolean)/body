{
  Charset sourcesEncoding=fileSystem.sourceCharset();
  Iterable<InputFile> files;
  if (isTest) {
    files=fileSystem.inputFiles(FileQuery.onTest().onLanguage(project.getLanguageKey()));
  }
 else {
    files=fileSystem.inputFiles(FileQuery.onSource().onLanguage(project.getLanguageKey()));
  }
  for (  InputFile inputFile : files) {
    try {
      String componentEffectiveKey=inputFile.attribute(DefaultInputFile.ATTRIBUTE_COMPONENT_KEY);
      if (componentEffectiveKey != null) {
        String relativePathFromSource=inputFile.attribute(InputFile.ATTRIBUTE_SOURCE_RELATIVE_PATH);
        inclusionPatternInitializer.initializePatternsForPath(relativePathFromSource,componentEffectiveKey);
        exclusionPatternInitializer.initializePatternsForPath(relativePathFromSource,componentEffectiveKey);
        if (exclusionPatternInitializer.hasFileContentPattern()) {
          regexpScanner.scan(componentEffectiveKey,inputFile.file(),sourcesEncoding);
        }
      }
    }
 catch (    Exception e) {
      throw new SonarException("Unable to read the source file : '" + inputFile.absolutePath() + "' with the charset : '"+ sourcesEncoding.name()+ "'.",e);
    }
  }
}
