{
  String coverageLineHitsData=CoreMetrics.IT_COVERAGE_LINE_HITS_DATA_KEY;
  String conditionsByLine=CoreMetrics.IT_CONDITIONS_BY_LINE_KEY;
  String coveredConditionsByLine=CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE_KEY;
  String newLinesToCover=CoreMetrics.NEW_IT_LINES_TO_COVER_KEY;
  String newUncoveredLines=CoreMetrics.NEW_IT_UNCOVERED_LINES_KEY;
  String newConditionsToCover=CoreMetrics.NEW_IT_CONDITIONS_TO_COVER_KEY;
  String newUncoveredConditions=CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS_KEY;
  MetricKeys metricKeys=new MetricKeys(coverageLineHitsData,conditionsByLine,coveredConditionsByLine,newLinesToCover,newUncoveredLines,newConditionsToCover,newUncoveredConditions);
  treeRootHolder.setRoot(MULTIPLE_FILES_TREE);
  defineChangeSetsAndMeasures(11111,metricKeys,new MeasureValues(3,4,1),new MeasureValues(0,3,2));
  defineChangeSetsAndMeasures(11121,metricKeys,new MeasureValues(0,14,6),new MeasureValues(0,13,7));
  defineChangeSetsAndMeasures(11122,metricKeys,new MeasureValues(3,4,1),new MeasureValues(1,13,7));
  underTest.execute();
  checkMeasureVariations(11111,metricKeys.newLinesToCover,null,5d,null,null,3d);
  checkMeasureVariations(11111,metricKeys.newUncoveredLines,null,3d,null,null,2d);
  checkMeasureVariations(11111,metricKeys.newConditionsToCover,null,7d,null,null,3d);
  checkMeasureVariations(11111,metricKeys.newUncoveredConditions,null,4d,null,null,1d);
  checkMeasureVariations(11121,metricKeys.newLinesToCover,null,5d,null,null,3d);
  checkMeasureVariations(11121,metricKeys.newUncoveredLines,null,4d,null,null,2d);
  checkMeasureVariations(11121,metricKeys.newConditionsToCover,null,27d,null,null,13d);
  checkMeasureVariations(11121,metricKeys.newUncoveredConditions,null,14d,null,null,6d);
  checkMeasureVariations(11122,metricKeys.newLinesToCover,null,5d,null,null,3d);
  checkMeasureVariations(11122,metricKeys.newUncoveredLines,null,2d,null,null,1d);
  checkMeasureVariations(11122,metricKeys.newConditionsToCover,null,17d,null,null,13d);
  checkMeasureVariations(11122,metricKeys.newUncoveredConditions,null,9d,null,null,6d);
  checkMeasureVariations(1111,metricKeys.newLinesToCover,null,5d,null,null,3d);
  checkMeasureVariations(1111,metricKeys.newUncoveredLines,null,3d,null,null,2d);
  checkMeasureVariations(1111,metricKeys.newConditionsToCover,null,7d,null,null,3d);
  checkMeasureVariations(1111,metricKeys.newUncoveredConditions,null,4d,null,null,1d);
  checkMeasureVariations(1112,metricKeys.newLinesToCover,null,10d,null,null,6d);
  checkMeasureVariations(1112,metricKeys.newUncoveredLines,null,6d,null,null,3d);
  checkMeasureVariations(1112,metricKeys.newConditionsToCover,null,44d,null,null,26d);
  checkMeasureVariations(1112,metricKeys.newUncoveredConditions,null,23d,null,null,12d);
  checkMeasureVariations(111,metricKeys.newLinesToCover,null,15d,null,null,9d);
  checkMeasureVariations(111,metricKeys.newUncoveredLines,null,9d,null,null,5d);
  checkMeasureVariations(111,metricKeys.newConditionsToCover,null,51d,null,null,29d);
  checkMeasureVariations(111,metricKeys.newUncoveredConditions,null,27d,null,null,13d);
  checkMeasureVariations(11,metricKeys.newLinesToCover,null,15d,null,null,9d);
  checkMeasureVariations(11,metricKeys.newUncoveredLines,null,9d,null,null,5d);
  checkMeasureVariations(11,metricKeys.newConditionsToCover,null,51d,null,null,29d);
  checkMeasureVariations(11,metricKeys.newUncoveredConditions,null,27d,null,null,13d);
  checkMeasureVariations(1,metricKeys.newLinesToCover,null,15d,null,null,9d);
  checkMeasureVariations(1,metricKeys.newUncoveredLines,null,9d,null,null,29d);
  checkMeasureVariations(1,metricKeys.newConditionsToCover,null,51d,null,null,29d);
  checkMeasureVariations(1,metricKeys.newUncoveredConditions,null,27d,null,null,13d);
}
