{
  ReportComponent project=builder(PROJECT,1).addChildren(builder(MODULE,11).addChildren(builder(DIRECTORY,111).addChildren(builder(Component.Type.FILE,1111).build(),builder(Component.Type.FILE,1112).build()).build()).build(),builder(MODULE,12).addChildren(builder(DIRECTORY,121).addChildren(builder(Component.Type.FILE,1211).build()).build()).build()).build();
  treeRootHolder.setRoot(project);
  measureRepository.addRawMeasure(1111,COMPLEXITY_IN_FUNCTIONS_KEY,newMeasureBuilder().create(5));
  measureRepository.addRawMeasure(1111,FUNCTIONS_KEY,newMeasureBuilder().create(2));
  measureRepository.addRawMeasure(1112,COMPLEXITY_IN_FUNCTIONS_KEY,newMeasureBuilder().create(1));
  measureRepository.addRawMeasure(1112,FUNCTIONS_KEY,newMeasureBuilder().create(1));
  measureRepository.addRawMeasure(1211,COMPLEXITY_IN_FUNCTIONS_KEY,newMeasureBuilder().create(9));
  measureRepository.addRawMeasure(1211,FUNCTIONS_KEY,newMeasureBuilder().create(2));
  underTest.visit(project);
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(3d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(11))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(2d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(111))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(2d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1111))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(2.5d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1112))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(1d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(12))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(4.5d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(121))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(4.5d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1211))).containsOnly(entryOf(FUNCTION_COMPLEXITY_KEY,newMeasureBuilder().create(4.5d)));
}
