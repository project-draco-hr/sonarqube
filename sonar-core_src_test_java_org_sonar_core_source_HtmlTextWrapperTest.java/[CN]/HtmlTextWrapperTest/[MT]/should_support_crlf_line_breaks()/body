{
  String crlfCodeSample="/**" + CR_END_OF_LINE + LF_END_OF_LINE+ "* @return metric generated by the decorator"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "*/"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "@DependedUpon"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "public Metric generatesMetric() {"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "  return metric;"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "}"+ CR_END_OF_LINE+ LF_END_OF_LINE;
  HighlightingContext context=HighlightingContext.buildFrom("0,52,cppd;54,67,a;69,75,k;106,112,k;");
  HtmlTextWrapper htmlTextWrapper=new HtmlTextWrapper();
  String htmlOutput=htmlTextWrapper.wrapTextWithHtml(crlfCodeSample,context);
  assertThat(htmlOutput).isEqualTo("<tr><td><span class=\"cppd\">/**</span></td></tr>" + CR_END_OF_LINE + LF_END_OF_LINE+ "<tr><td><span class=\"cppd\">* @return metric generated by the decorator</span></td></tr>"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "<tr><td><span class=\"cppd\">*/</span></td></tr>"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "<tr><td><span class=\"a\">@DependedUpon</span></td></tr>"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "<tr><td><span class=\"k\">public</span> Metric generatesMetric() {</td></tr>"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "<tr><td>  <span class=\"k\">return</span> metric;</td></tr>"+ CR_END_OF_LINE+ LF_END_OF_LINE+ "<tr><td>}</td></tr>"+ CR_END_OF_LINE+ LF_END_OF_LINE);
}
