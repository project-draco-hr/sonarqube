{
  String javaDocSample="/**" + LF_END_OF_LINE + " * Creates a FormulaDecorator"+ LF_END_OF_LINE+ " *"+ LF_END_OF_LINE+ " * @param metric the metric should have an associated formula"+ LF_END_OF_LINE+ " * "+ LF_END_OF_LINE+ " * @throws IllegalArgumentException if no formula is associated to the metric"+ LF_END_OF_LINE+ " */"+ LF_END_OF_LINE;
  SyntaxHighlightingRuleSet syntaxHighlighting=SyntaxHighlightingRuleSet.builder().registerHighlightingRule(0,184,"cppd").registerHighlightingRule(47,53,"k").build();
  HtmlTextWrapper htmlTextWrapper=new HtmlTextWrapper();
  String htmlOutput=htmlTextWrapper.wrapTextWithHtml(javaDocSample,syntaxHighlighting);
  assertThat(htmlOutput).isEqualTo("<tr><td><span class=\"cppd\">/**</span></td></tr>" + LF_END_OF_LINE + "<tr><td><span class=\"cppd\"> * Creates a FormulaDecorator</span></td></tr>"+ LF_END_OF_LINE+ "<tr><td><span class=\"cppd\"> *</span></td></tr>"+ LF_END_OF_LINE+ "<tr><td><span class=\"cppd\"> * @param <span class=\"k\">metric</span> the metric should have an associated formula</span></td></tr>"+ LF_END_OF_LINE+ "<tr><td><span class=\"cppd\"> * </span></td></tr>"+ LF_END_OF_LINE+ "<tr><td><span class=\"cppd\"> * @throws IllegalArgumentException if no formula is associated to the metric</span></td></tr>"+ LF_END_OF_LINE+ "<tr><td><span class=\"cppd\"> */</span></td></tr>"+ LF_END_OF_LINE);
}
