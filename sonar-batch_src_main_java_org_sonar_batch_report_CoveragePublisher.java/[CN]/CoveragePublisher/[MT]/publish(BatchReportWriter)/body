{
  for (  final BatchResource resource : resourceCache.all()) {
    if (!resource.isFile()) {
      continue;
    }
    Map<Integer,Coverage.Builder> coveragePerLine=new LinkedHashMap<>();
    applyLineMeasure(resource.key(),((InputFile)resource.inputPath()).lines(),CoreMetrics.COVERAGE_LINE_HITS_DATA_KEY,coveragePerLine,new MeasureOperation(){
      @Override public void apply(      String value,      Coverage.Builder builder){
        builder.setUtHits(Integer.parseInt(value) > 0);
        builder.setConditions(1);
      }
    }
);
    applyLineMeasure(resource.key(),((InputFile)resource.inputPath()).lines(),CoreMetrics.CONDITIONS_BY_LINE_KEY,coveragePerLine,new MeasureOperation(){
      @Override public void apply(      String value,      Coverage.Builder builder){
        builder.setConditions(Integer.parseInt(value));
      }
    }
);
    applyLineMeasure(resource.key(),((InputFile)resource.inputPath()).lines(),CoreMetrics.COVERED_CONDITIONS_BY_LINE_KEY,coveragePerLine,new MeasureOperation(){
      @Override public void apply(      String value,      Coverage.Builder builder){
        builder.setUtCoveredConditions(Integer.parseInt(value));
      }
    }
);
    applyLineMeasure(resource.key(),((InputFile)resource.inputPath()).lines(),CoreMetrics.IT_COVERAGE_LINE_HITS_DATA_KEY,coveragePerLine,new MeasureOperation(){
      @Override public void apply(      String value,      Coverage.Builder builder){
        builder.setItHits(Integer.parseInt(value) > 0);
      }
    }
);
    applyLineMeasure(resource.key(),((InputFile)resource.inputPath()).lines(),CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE_KEY,coveragePerLine,new MeasureOperation(){
      @Override public void apply(      String value,      Coverage.Builder builder){
        builder.setItCoveredConditions(Integer.parseInt(value));
      }
    }
);
    applyLineMeasure(resource.key(),((InputFile)resource.inputPath()).lines(),CoreMetrics.OVERALL_COVERED_CONDITIONS_BY_LINE_KEY,coveragePerLine,new MeasureOperation(){
      @Override public void apply(      String value,      Coverage.Builder builder){
        builder.setItCoveredConditions(Integer.parseInt(value));
      }
    }
);
    writer.writeFileCoverage(resource.batchId(),Iterables.transform(coveragePerLine.values(),new Function<Coverage.Builder,Coverage>(){
      @Override public Coverage apply(      Builder input){
        return input.build();
      }
    }
));
  }
}
