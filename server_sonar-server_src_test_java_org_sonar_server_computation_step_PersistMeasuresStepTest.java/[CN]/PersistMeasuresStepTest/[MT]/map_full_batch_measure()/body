{
  BatchReport.Component component=defaultComponent().build();
  ComponentDto componentDto=addComponent(component.getRef(),"component-key");
  BatchReport.Measure batchMeasure=BatchReport.Measure.newBuilder().setValueType(MeasureValueType.DOUBLE).setDoubleValue(123.123d).setVariationValue1(1.1d).setVariationValue2(2.2d).setVariationValue3(3.3d).setVariationValue4(4.4d).setVariationValue5(5.5d).setAlertStatus("WARN").setAlertText("Open issues > 0").setDescription("measure-description").setSeverity(Constants.Severity.CRITICAL).setMetricKey(METRIC_KEY).setRuleKey(RULE_KEY.toString()).setCharactericId(123456).setPersonId(5432).build();
  MeasureDto measure=sut.toMeasureDto(batchMeasure,componentDto.getId(),FILE_SNAPSHOT_ID);
  assertThat(measure).isEqualToComparingFieldByField(new MeasureDto().setComponentId(componentDto.getId()).setSnapshotId(3L).setCharacteristicId(123456).setPersonId(5432).setValue(123.123d).setVariation(1,1.1d).setVariation(2,2.2d).setVariation(3,3.3d).setVariation(4,4.4d).setVariation(5,5.5d).setAlertStatus("WARN").setAlertText("Open issues > 0").setDescription("measure-description").setSeverity(Severity.CRITICAL).setMetricId(metric.getId()).setRuleId(rule.getId()));
}
