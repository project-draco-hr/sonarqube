{
  int stringMetricId=1;
  int doubleMetricId=2;
  int intMetricId=3;
  int longMetricId=4;
  metricRepository.add(stringMetricId,STRING_METRIC);
  metricRepository.add(doubleMetricId,DOUBLE_METRIC);
  metricRepository.add(intMetricId,INT_METRIC);
  metricRepository.add(longMetricId,LONG_METRIC);
  measureRepository.addRawMeasure(ROOT_REF,STRING_METRIC_KEY,newMeasureBuilder().create("measure-data"));
  measureRepository.addRawMeasure(INTERMEDIATE_1_REF,INT_METRIC_KEY,newMeasureBuilder().create(12));
  measureRepository.addRawMeasure(INTERMEDIATE_2_REF,LONG_METRIC_KEY,newMeasureBuilder().create(9635L));
  measureRepository.addRawMeasure(LEAF_REF,DOUBLE_METRIC_KEY,newMeasureBuilder().create(123.123d,1));
  underTest.execute();
  assertThat(dbTester.countRowsOfTable("project_measures")).isEqualTo(4);
  List<Map<String,Object>> dtos=selectSnapshots();
  Map<String,Object> dto=dtos.get(0);
  assertThat(dto.get("analysisUuid")).isEqualTo(ANALYSIS_UUID);
  assertThat(dto.get("componentUuid")).isEqualTo(rootDto.uuid());
  assertThat(dto.get("metricId")).isEqualTo((long)stringMetricId);
  assertThat(dto.get("value")).isNull();
  assertThat(dto.get("textValue")).isEqualTo("measure-data");
  assertThat(dto.get("severity")).isNull();
  dto=dtos.get(1);
  assertThat(dto.get("analysisUuid")).isEqualTo(ANALYSIS_UUID);
  assertThat(dto.get("componentUuid")).isEqualTo(intermediate1Dto.uuid());
  assertThat(dto.get("metricId")).isEqualTo((long)intMetricId);
  assertValue(dto,12d);
  assertThat(dto.get("textValue")).isNull();
  assertThat(dto.get("severity")).isNull();
  dto=dtos.get(2);
  assertThat(dto.get("analysisUuid")).isEqualTo(ANALYSIS_UUID);
  assertThat(dto.get("componentUuid")).isEqualTo(intermediate2Dto.uuid());
  assertThat(dto.get("metricId")).isEqualTo((long)longMetricId);
  assertValue(dto,9635d);
  assertThat(dto.get("textValue")).isNull();
  assertThat(dto.get("severity")).isNull();
  dto=dtos.get(3);
  assertThat(dto.get("analysisUuid")).isEqualTo(ANALYSIS_UUID);
  assertThat(dto.get("componentUuid")).isEqualTo(leafDto.uuid());
  assertThat(dto.get("metricId")).isEqualTo((long)doubleMetricId);
  assertValue(dto,123.1d);
  assertThat(dto.get("textValue")).isNull();
  assertThat(dto.get("severity")).isNull();
}
