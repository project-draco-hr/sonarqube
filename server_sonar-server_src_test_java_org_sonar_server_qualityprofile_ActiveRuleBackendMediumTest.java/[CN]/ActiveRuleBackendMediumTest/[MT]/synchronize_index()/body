{
  Date beginning=new Date();
  QualityProfileDto profile1=QProfileTesting.newXooP1();
  db.qualityProfileDao().insert(dbSession,profile1);
  RuleDto rule1=RuleDto.createFor(RuleTesting.XOO_X1).setSeverity(Severity.MAJOR);
  db.ruleDao().insert(dbSession,rule1);
  ActiveRuleDto activeRule=ActiveRuleDto.createFor(profile1,rule1).setSeverity("BLOCKER");
  db.activeRuleDao().insert(dbSession,activeRule);
  dbSession.commit();
  tester.clearIndexes();
  assertThat(index.get(ActiveRuleIndex.class).getByKey(activeRule.getKey())).isNull();
  db.activeRuleDao().synchronizeAfter(dbSession,new Date(0L));
  assertThat(index.get(ActiveRuleIndex.class).getByKey(activeRule.getKey())).isNotNull();
  tester.clearIndexes();
  assertThat(index.get(ActiveRuleIndex.class).getByKey(activeRule.getKey())).isNull();
  db.activeRuleDao().synchronizeAfter(dbSession,beginning);
  assertThat(index.get(ActiveRuleIndex.class).getByKey(activeRule.getKey())).isNotNull();
  tester.clearIndexes();
  Date before=index.get(ActiveRuleIndex.class).getLastSynchronization();
  tester.get(Platform.class).executeStartupTasks();
  assertThat(index.get(ActiveRuleIndex.class).getByKey(activeRule.getKey())).isNotNull();
  assertThat(before.before(index.get(ActiveRuleIndex.class).getLastSynchronization())).isTrue();
}
