{
  String anotherProjectKey="ANOTHER_PROJECT_KEY";
  thrown.expect(IllegalArgumentException.class);
  thrown.expectMessage("Validation of project failed:\n" + "  o The project \"" + PROJECT_KEY + "\" is already defined in SonarQube but as a module of project \""+ anotherProjectKey+ "\". "+ "If you really want to stop directly analysing project \""+ anotherProjectKey+ "\", please first delete it from SonarQube and then relaunch the analysis of project \""+ PROJECT_KEY+ "\".");
  reportReader.setMetadata(BatchReport.Metadata.newBuilder().build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).addChildRef(2).build());
  reportReader.putComponent(BatchReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey(MODULE_KEY).build());
  ComponentDto anotherProject=ComponentTesting.newProjectDto().setKey(anotherProjectKey);
  dbClient.componentDao().insert(dbSession,anotherProject);
  ComponentDto module=ComponentTesting.newModuleDto("ABCD",anotherProject).setKey(PROJECT_KEY);
  dbClient.componentDao().insert(dbSession,module);
  dbSession.commit();
  treeRootHolder.setRoot(DumbComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(DumbComponent.builder(Component.Type.MODULE,2).setUuid("BCDE").setKey(MODULE_KEY).build()).build());
  sut.execute();
}
