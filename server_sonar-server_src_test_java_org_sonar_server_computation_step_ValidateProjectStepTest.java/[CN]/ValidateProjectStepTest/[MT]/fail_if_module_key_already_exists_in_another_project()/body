{
  String anotherProjectKey="ANOTHER_PROJECT_KEY";
  thrown.expect(MessageException.class);
  thrown.expectMessage("Validation of project failed:\n" + "  o Module \"" + MODULE_KEY + "\" is already part of project \""+ anotherProjectKey+ "\"");
  reportReader.putComponent(ScannerReport.Component.newBuilder().setRef(1).setType(Constants.ComponentType.PROJECT).setKey(PROJECT_KEY).addChildRef(2).build());
  reportReader.putComponent(ScannerReport.Component.newBuilder().setRef(2).setType(Constants.ComponentType.MODULE).setKey(MODULE_KEY).build());
  ComponentDto project=ComponentTesting.newProjectDto("ABCD").setKey(PROJECT_KEY);
  ComponentDto anotherProject=ComponentTesting.newProjectDto().setKey(anotherProjectKey);
  dbClient.componentDao().insert(dbTester.getSession(),project,anotherProject);
  ComponentDto module=ComponentTesting.newModuleDto("BCDE",anotherProject).setKey(MODULE_KEY);
  dbClient.componentDao().insert(dbTester.getSession(),module);
  dbTester.getSession().commit();
  treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT,1).setUuid("ABCD").setKey(PROJECT_KEY).addChildren(ReportComponent.builder(Component.Type.MODULE,2).setUuid("BCDE").setKey(MODULE_KEY).build()).build());
  underTest.execute();
}
