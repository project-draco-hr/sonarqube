{
  if (other == org.sonar.batch.protocol.output.BatchReport.SyntaxHighlighting.getDefaultInstance())   return this;
  if (other.hasFileRef()) {
    setFileRef(other.getFileRef());
  }
  if (highlightingRuleBuilder_ == null) {
    if (!other.highlightingRule_.isEmpty()) {
      if (highlightingRule_.isEmpty()) {
        highlightingRule_=other.highlightingRule_;
        bitField0_=(bitField0_ & ~0x00000002);
      }
 else {
        ensureHighlightingRuleIsMutable();
        highlightingRule_.addAll(other.highlightingRule_);
      }
      onChanged();
    }
  }
 else {
    if (!other.highlightingRule_.isEmpty()) {
      if (highlightingRuleBuilder_.isEmpty()) {
        highlightingRuleBuilder_.dispose();
        highlightingRuleBuilder_=null;
        highlightingRule_=other.highlightingRule_;
        bitField0_=(bitField0_ & ~0x00000002);
        highlightingRuleBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getHighlightingRuleFieldBuilder() : null;
      }
 else {
        highlightingRuleBuilder_.addAllMessages(other.highlightingRule_);
      }
    }
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
