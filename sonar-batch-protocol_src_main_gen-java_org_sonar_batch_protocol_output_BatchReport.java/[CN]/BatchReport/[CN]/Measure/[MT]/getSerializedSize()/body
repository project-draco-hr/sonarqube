{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(1,valueType_.getNumber());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(2,booleanValue_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(3,intValue_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(4,longValue_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(5,doubleValue_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(6,getStringValueBytes());
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(7,getMetricKeyBytes());
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(9,getDescriptionBytes());
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(10,getRuleKeyBytes());
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(11,severity_.getNumber());
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(12,getAlertStatusBytes());
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(13,getAlertTextBytes());
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(14,variationValue1_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(15,variationValue2_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(16,variationValue3_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(17,variationValue4_);
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(18,variationValue5_);
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(19,tendency_);
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(20,charactericId_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
