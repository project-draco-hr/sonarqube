{
  if (other == org.sonar.batch.protocol.output.BatchReport.Issue.getDefaultInstance())   return this;
  if (other.hasRuleRepository()) {
    bitField0_|=0x00000001;
    ruleRepository_=other.ruleRepository_;
    onChanged();
  }
  if (other.hasRuleKey()) {
    bitField0_|=0x00000002;
    ruleKey_=other.ruleKey_;
    onChanged();
  }
  if (other.hasLine()) {
    setLine(other.getLine());
  }
  if (other.hasMsg()) {
    bitField0_|=0x00000008;
    msg_=other.msg_;
    onChanged();
  }
  if (other.hasSeverity()) {
    setSeverity(other.getSeverity());
  }
  if (!other.tag_.isEmpty()) {
    if (tag_.isEmpty()) {
      tag_=other.tag_;
      bitField0_=(bitField0_ & ~0x00000020);
    }
 else {
      ensureTagIsMutable();
      tag_.addAll(other.tag_);
    }
    onChanged();
  }
  if (other.hasEffortToFix()) {
    setEffortToFix(other.getEffortToFix());
  }
  if (other.hasIsNew()) {
    setIsNew(other.getIsNew());
  }
  if (other.hasUuid()) {
    bitField0_|=0x00000100;
    uuid_=other.uuid_;
    onChanged();
  }
  if (other.hasDebtInMinutes()) {
    setDebtInMinutes(other.getDebtInMinutes());
  }
  if (other.hasResolution()) {
    bitField0_|=0x00000400;
    resolution_=other.resolution_;
    onChanged();
  }
  if (other.hasStatus()) {
    bitField0_|=0x00000800;
    status_=other.status_;
    onChanged();
  }
  if (other.hasChecksum()) {
    bitField0_|=0x00001000;
    checksum_=other.checksum_;
    onChanged();
  }
  if (other.hasManualSeverity()) {
    setManualSeverity(other.getManualSeverity());
  }
  if (other.hasReporter()) {
    bitField0_|=0x00004000;
    reporter_=other.reporter_;
    onChanged();
  }
  if (other.hasAssignee()) {
    bitField0_|=0x00008000;
    assignee_=other.assignee_;
    onChanged();
  }
  if (other.hasActionPlanKey()) {
    bitField0_|=0x00010000;
    actionPlanKey_=other.actionPlanKey_;
    onChanged();
  }
  if (other.hasAttributes()) {
    bitField0_|=0x00020000;
    attributes_=other.attributes_;
    onChanged();
  }
  if (other.hasAuthorLogin()) {
    bitField0_|=0x00040000;
    authorLogin_=other.authorLogin_;
    onChanged();
  }
  if (other.hasCreationDate()) {
    setCreationDate(other.getCreationDate());
  }
  if (other.hasCloseDate()) {
    setCloseDate(other.getCloseDate());
  }
  if (other.hasUpdateDate()) {
    setUpdateDate(other.getUpdateDate());
  }
  if (other.hasSelectedAt()) {
    setSelectedAt(other.getSelectedAt());
  }
  if (other.hasDiffFields()) {
    bitField0_|=0x00800000;
    diffFields_=other.diffFields_;
    onChanged();
  }
  if (other.hasIsChanged()) {
    setIsChanged(other.getIsChanged());
  }
  if (other.hasMustSendNotification()) {
    setMustSendNotification(other.getMustSendNotification());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
