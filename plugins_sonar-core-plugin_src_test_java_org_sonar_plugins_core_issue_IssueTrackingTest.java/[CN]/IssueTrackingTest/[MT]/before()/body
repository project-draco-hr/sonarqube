{
  Rule rule1=Rule.create("squid","AvoidCycle");
  rule1.setId(1);
  Rule rule2=Rule.create("squid","NullDeref");
  rule2.setId(2);
  Rule rule3=Rule.create("pmd","UnusedLocalVariable");
  rule3.setId(3);
  ruleFinder=mock(RuleFinder.class);
  when(ruleFinder.findById(1)).thenReturn(rule1);
  when(ruleFinder.findById(2)).thenReturn(rule2);
  when(ruleFinder.findById(3)).thenReturn(rule3);
  when(ruleFinder.findByKey(RuleKey.of("squid","AvoidCycle"))).thenReturn(rule1);
  when(ruleFinder.findByKey(RuleKey.of("squid","NullDeref"))).thenReturn(rule2);
  when(ruleFinder.findByKey(RuleKey.of("pmd","UnusedLocalVariable"))).thenReturn(rule3);
  lastSnapshots=mock(LastSnapshots.class);
  project=mock(Project.class);
  when(project.getAnalysisDate()).thenReturn(analysisDate);
  tracking=new IssueTracking(project,ruleFinder,lastSnapshots,null);
}
