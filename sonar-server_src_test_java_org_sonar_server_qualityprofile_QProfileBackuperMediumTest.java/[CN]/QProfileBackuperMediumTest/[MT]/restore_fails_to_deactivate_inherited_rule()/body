{
  db.qualityProfileDao().insert(dbSession,QualityProfileDto.createFor(XOO_PROFILE_KEY),QualityProfileDto.createFor(XOO_CHILD_PROFILE_KEY).setParent(XOO_PROFILE_KEY.name()));
  dbSession.commit();
  RuleActivation activation=new RuleActivation(ActiveRuleKey.of(XOO_PROFILE_KEY,RuleKey.of("xoo","x1")));
  activation.setSeverity(Severity.INFO);
  activation.setParameter("max","10");
  tester.get(RuleActivator.class).activate(dbSession,activation);
  dbSession.commit();
  dbSession.clearCache();
  try {
    tester.get(QProfileBackuper.class).restore(new StringReader(Resources.toString(getClass().getResource("QProfileBackuperMediumTest/restore_fails_to_deactivate_inherited_rule.xml"),Charsets.UTF_8)),null);
    fail();
  }
 catch (  IllegalStateException e) {
    assertThat(e).hasMessage("Cannot deactivate inherited rule 'xoo:x1'");
  }
}
