{
  db.qualityProfileDao().insert(dbSession,QualityProfileDto.createFor(XOO_PROFILE_KEY));
  RuleActivation activation=new RuleActivation(ActiveRuleKey.of(XOO_PROFILE_KEY,RuleKey.of("xoo","x1")));
  activation.setSeverity(Severity.INFO);
  activation.setParameter("max","10");
  tester.get(RuleActivator.class).activate(dbSession,activation);
  activation=new RuleActivation(ActiveRuleKey.of(XOO_PROFILE_KEY,RuleKey.of("xoo","x2")));
  activation.setSeverity(Severity.INFO);
  tester.get(RuleActivator.class).activate(dbSession,activation);
  dbSession.commit();
  dbSession.clearCache();
  tester.get(QProfileBackuper.class).restore(new StringReader(Resources.toString(getClass().getResource("QProfileBackuperMediumTest/restore.xml"),Charsets.UTF_8)));
  List<ActiveRule> activeRules=tester.get(QProfileService.class).findActiveRulesByProfile(XOO_PROFILE_KEY);
  assertThat(activeRules).hasSize(1);
  assertThat(activeRules.get(0).severity()).isEqualTo("BLOCKER");
  assertThat(activeRules.get(0).inheritance()).isEqualTo(ActiveRule.Inheritance.NONE);
  assertThat(activeRules.get(0).params().get("max")).isEqualTo("7");
}
