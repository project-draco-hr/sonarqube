{
  Characteristic defaultRootCharacteristic=new Characteristic().setKey("PORTABILITY");
  new Characteristic().setKey("COMPILER_RELATED_PORTABILITY").setParent(defaultRootCharacteristic);
  defaultModel.addRootCharacteristic(defaultRootCharacteristic);
  TechnicalDebtModel dbModel=new TechnicalDebtModel();
  Characteristic dbRootCharacteristic=new Characteristic().setKey("PORTABILITY");
  Characteristic dbCharacteristic=new Characteristic().setKey("COMPILER_RELATED_PORTABILITY").setParent(dbRootCharacteristic);
  dbModel.addRootCharacteristic(dbRootCharacteristic);
  Requirement dbRequirement=new Requirement().setRuleKey(null).setFunction("linear").setFactor(WorkUnit.create(30.0,WorkUnit.MINUTES)).setCharacteristic(dbCharacteristic);
  when(sqaleModelFinder.findAll()).thenReturn(dbModel);
  TechnicalDebtModel result=manager.initAndMergePlugins(ValidationMessages.create(),ruleCache);
  verify(service).disable(eq(dbRequirement),eq(session));
  verifyNoMoreInteractions(service);
  assertThat(result.requirements()).isEmpty();
}
