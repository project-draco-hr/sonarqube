{
  long period1=10000L;
  long period2=20000L;
  long period3=30000L;
  long period4=40000L;
  long period5=50000L;
  periodsHolder.setPeriods(new Period(1,SOME_PERIOD_MODE,null,period1,SOME_SNAPSHOT_ID),new Period(2,SOME_PERIOD_MODE,null,period2,SOME_SNAPSHOT_ID),new Period(3,SOME_PERIOD_MODE,null,period3,SOME_SNAPSHOT_ID),new Period(4,SOME_PERIOD_MODE,null,period4,SOME_SNAPSHOT_ID),new Period(5,SOME_PERIOD_MODE,null,period5,SOME_SNAPSHOT_ID));
  when(sqaleRatingSettings.getDevCost(LANGUAGE_1_KEY)).thenReturn(LANGUAGE_1_DEV_COST);
  treeRootHolder.setRoot(builder(PROJECT,ROOT_REF).addChildren(builder(FILE,LANGUAGE_1_FILE_REF).setFileAttributes(new FileAttributes(false,LANGUAGE_1_KEY)).build()).build());
  Measure newDebtMeasure=newMeasureBuilder().setVariations(new MeasureVariations(500d,500d,500d,120d,120d)).createNoValue();
  measureRepository.addRawMeasure(LANGUAGE_1_FILE_REF,NEW_TECHNICAL_DEBT_KEY,newDebtMeasure);
  measureRepository.addRawMeasure(LANGUAGE_1_FILE_REF,NCLOC_DATA_KEY,createNclocDataMeasure(2,3,4));
  scmInfoRepository.setScmInfo(LANGUAGE_1_FILE_REF,createChangesets(period2 - 100,2,period2 + 100,2));
  measureRepository.addRawMeasure(ROOT_REF,NEW_TECHNICAL_DEBT_KEY,newMeasureBuilder().setVariations(new MeasureVariations(1200d,1200d,1200d,820d,820d)).createNoValue());
  underTest.visit(treeRootHolder.getRoot());
  assertThat(measureRepository.getAddedRawMeasure(LANGUAGE_1_FILE_REF,NEW_SQALE_DEBT_RATIO_KEY)).hasVariation1(833.333,VARIATION_COMPARISON_OFFSET).hasVariation2(833.333,VARIATION_COMPARISON_OFFSET).hasVariation3(0d,VARIATION_COMPARISON_OFFSET).hasVariation4(0d,VARIATION_COMPARISON_OFFSET).hasVariation5(0d,VARIATION_COMPARISON_OFFSET);
}
