{
  LoadedTemplateDto expectedTemplate=new LoadedTemplateDto().setKey(PermissionTemplateDto.DEFAULT.getKee()).setType(LoadedTemplateDto.PERMISSION_TEMPLATE_TYPE);
  PermissionTemplateDto permissionTemplate=PermissionTemplateDto.DEFAULT.setId(1L);
  when(loadedTemplateDao.countByTypeAndKey(LoadedTemplateDto.PERMISSION_TEMPLATE_TYPE,PermissionTemplateDto.DEFAULT.getKee())).thenReturn(0);
  when(permissionTemplateDao.insert(any(DbSession.class),eq(PermissionTemplateDto.DEFAULT))).thenReturn(permissionTemplate);
  when(groupDao.selectByName(any(DbSession.class),eq(DefaultGroups.ADMINISTRATORS))).thenReturn(new GroupDto().setId(1L));
  when(groupDao.selectByName(any(DbSession.class),eq(DefaultGroups.USERS))).thenReturn(new GroupDto().setId(2L));
  RegisterPermissionTemplates initializer=new RegisterPermissionTemplates(dbClient,settings);
  initializer.start();
  verify(loadedTemplateDao).insert(argThat(Matches.template(expectedTemplate)));
  verify(permissionTemplateDao).insert(any(DbSession.class),eq(PermissionTemplateDto.DEFAULT));
  verify(permissionTemplateDao).insertGroupPermission(1L,1L,UserRole.ADMIN);
  verify(permissionTemplateDao).insertGroupPermission(1L,1L,UserRole.ISSUE_ADMIN);
  verify(permissionTemplateDao).insertGroupPermission(1L,null,UserRole.USER);
  verify(permissionTemplateDao).insertGroupPermission(1L,null,UserRole.CODEVIEWER);
  verifyNoMoreInteractions(permissionTemplateDao);
  verify(settings).saveProperty(RegisterPermissionTemplates.DEFAULT_TEMPLATE_PROPERTY,PermissionTemplateDto.DEFAULT.getKee());
}
