{
  RulesProfile profile=RulesProfile.create();
  SMInputFactory inputFactory=initStax();
  try {
    SMHierarchicCursor rootC=inputFactory.rootElementCursor(reader);
    rootC.advance();
    SMInputCursor cursor=rootC.childElementCursor();
    while (cursor.getNext() != null) {
      String nodeName=cursor.getLocalName();
      if (StringUtils.equals("rules",nodeName)) {
        SMInputCursor rulesCursor=cursor.childElementCursor("rule");
        processRules(rulesCursor,profile,messages);
      }
 else       if (StringUtils.equals("name",nodeName)) {
        profile.setName(StringUtils.trim(cursor.collectDescendantText(false)));
      }
 else       if (StringUtils.equals("language",nodeName)) {
        profile.setLanguage(StringUtils.trim(cursor.collectDescendantText(false)));
      }
    }
  }
 catch (  XMLStreamException e) {
    messages.addErrorText("XML is not valid: " + e.getMessage());
  }
  checkProfile(profile,messages);
  return profile;
}
