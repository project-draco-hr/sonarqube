{
  for (  Project project : projects) {
    String[] excludedArtifactIds=project.getConfiguration().getStringArray("sonar.skippedModules");
    String[] includedArtifactIds=project.getConfiguration().getStringArray("sonar.includedModules");
    Set<String> includedModulesIdSet=Sets.newHashSet();
    Set<String> excludedModulesIdSet=Sets.newHashSet();
    if (includedArtifactIds != null) {
      includedModulesIdSet.addAll(Arrays.asList(includedArtifactIds));
    }
    if (excludedArtifactIds != null) {
      excludedModulesIdSet.addAll(Arrays.asList(excludedArtifactIds));
      includedModulesIdSet.removeAll(excludedModulesIdSet);
    }
    if (!includedModulesIdSet.isEmpty()) {
      for (      Project currentProject : projects) {
        if (!includedModulesIdSet.contains(getArtifactId(currentProject))) {
          exclude(currentProject);
        }
      }
    }
 else {
      for (      String excludedArtifactId : excludedModulesIdSet) {
        Project excludedProject=getProjectByArtifactId(excludedArtifactId);
        exclude(excludedProject);
      }
    }
  }
  for (Iterator<Project> it=projects.iterator(); it.hasNext(); ) {
    Project project=it.next();
    if (project.isExcluded()) {
      LoggerFactory.getLogger(getClass()).info("Module {} is excluded from analysis",project.getName());
      project.removeFromParent();
      it.remove();
    }
  }
}
