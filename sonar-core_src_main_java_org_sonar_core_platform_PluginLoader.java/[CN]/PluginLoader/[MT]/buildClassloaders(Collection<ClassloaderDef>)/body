{
  ClassloaderBuilder builder=new ClassloaderBuilder();
  for (  ClassloaderDef def : defs) {
    builder.newClassloader(def.getBasePluginKey(),getClass().getClassLoader()).setExportMask(def.getBasePluginKey(),def.getMask()).setLoadingOrder(def.getBasePluginKey(),def.isSelfFirstStrategy() ? SELF_FIRST : LoadingOrder.PARENT_FIRST);
    for (    File file : def.getFiles()) {
      builder.addURL(def.getBasePluginKey(),fileToUrl(file));
    }
    for (    ClassloaderDef sibling : defs) {
      if (!sibling.getBasePluginKey().equals(def.getBasePluginKey())) {
        builder.addSibling(def.getBasePluginKey(),sibling.getBasePluginKey(),new Mask());
      }
    }
  }
  Map<String,ClassLoader> classloadersByBasePluginKey=builder.build();
  for (  ClassloaderDef def : defs) {
    ClassLoader builtClassloader=classloadersByBasePluginKey.get(def.getBasePluginKey());
    if (builtClassloader == null) {
      throw new IllegalStateException(String.format("Fail to create classloader for plugin [%s]",def.getBasePluginKey()));
    }
    def.setBuiltClassloader(builtClassloader);
  }
}
