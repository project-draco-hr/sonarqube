{
  Map<String,ClassloaderDef> classloadersByBasePlugin=new HashMap<>();
  for (  PluginInfo info : infoByKeys.values()) {
    String baseKey=basePluginKey(info,infoByKeys);
    ClassloaderDef def=classloadersByBasePlugin.get(baseKey);
    if (def == null) {
      def=new ClassloaderDef(baseKey);
      classloadersByBasePlugin.put(baseKey,def);
    }
    ExplodedPlugin explodedPlugin=exploder.explode(info);
    def.addFiles(asList(explodedPlugin.getMain()));
    def.addFiles(explodedPlugin.getLibs());
    def.addMainClass(info.getKey(),info.getMainClass());
    for (    String defaultSharedResource : DEFAULT_SHARED_RESOURCES) {
      def.getMask().addInclusion(defaultSharedResource + info.getKey() + "/");
    }
    if (Strings.isNullOrEmpty(info.getBasePlugin())) {
      def.setSelfFirstStrategy(info.isUseChildFirstClassLoader());
    }
  }
  return classloadersByBasePlugin.values();
}
