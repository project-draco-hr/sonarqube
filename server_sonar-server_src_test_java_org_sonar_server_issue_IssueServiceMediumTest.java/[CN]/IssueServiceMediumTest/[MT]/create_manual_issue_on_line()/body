{
  ComponentDto project=newProject();
  ComponentDto file=newFile(project);
  newSourceLine(file,1,"arthur");
  createDefaultGroup();
  newUser("arthur");
  MockUserSession.set().setLogin("john").addProjectPermissions(UserRole.USER,project.key());
  RuleDto manualRule=RuleTesting.newManualRule("manualRuleKey");
  tester.get(RuleDao.class).insert(session,manualRule);
  session.commit();
  Issue result=service.createManualIssue(file.key(),manualRule.getKey(),1,"Fix it",Severity.MINOR,2d);
  IssueDoc manualIssue=IssueIndex.getByKey(result.key());
  assertThat(manualIssue.componentUuid()).isEqualTo(file.uuid());
  assertThat(manualIssue.projectUuid()).isEqualTo(project.uuid());
  assertThat(manualIssue.ruleKey()).isEqualTo(manualRule.getKey());
  assertThat(manualIssue.message()).isEqualTo("Fix it");
  assertThat(manualIssue.line()).isEqualTo(1);
  assertThat(manualIssue.severity()).isEqualTo(Severity.MINOR);
  assertThat(manualIssue.effortToFix()).isEqualTo(2d);
  assertThat(manualIssue.reporter()).isEqualTo("john");
  assertThat(manualIssue.assignee()).isEqualTo("arthur");
}
