{
  tester.clearDbAndIndexes();
  db=tester.get(DbClient.class);
  indexClient=tester.get(IndexClient.class);
  session=db.openSession(false);
  service=tester.get(IssueService.class);
  rule=RuleTesting.newXooX1();
  tester.get(RuleDao.class).insert(session,rule);
  project=ComponentTesting.newProjectDto();
  tester.get(ComponentDao.class).insert(session,project);
  SnapshotDto projectSnapshot=SnapshotTesting.createForProject(project);
  tester.get(SnapshotDao.class).insert(session,projectSnapshot);
  file=ComponentTesting.newFileDto(project);
  tester.get(ComponentDao.class).insert(session,file);
  tester.get(SnapshotDao.class).insert(session,SnapshotTesting.createForComponent(file,projectSnapshot));
  connectedUser=new UserDto().setLogin("gandalf").setName("Gandalf");
  db.userDao().insert(session,connectedUser);
  tester.get(PermissionFacade.class).insertUserPermission(project.getId(),connectedUser.getId(),UserRole.USER,session);
  MockUserSession.set().setLogin(connectedUser.getLogin()).setUserId(connectedUser.getId().intValue()).setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN).addProjectPermissions(UserRole.USER,project.key()).addProjectPermissions(UserRole.ISSUE_ADMIN,project.key());
  session.commit();
  tester.get(InternalPermissionService.class).addPermission(new PermissionChange().setComponentKey(project.getKey()).setGroup(DefaultGroups.ANYONE).setPermission(UserRole.USER));
}
