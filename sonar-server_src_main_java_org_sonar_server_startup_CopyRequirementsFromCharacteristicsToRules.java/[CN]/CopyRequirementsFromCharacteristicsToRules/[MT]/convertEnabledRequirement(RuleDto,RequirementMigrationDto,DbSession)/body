{
  ruleRow.setSubCharacteristicId(enabledRequirement.getParentId() != null ? enabledRequirement.getParentId() : null);
  ruleRow.setRemediationFunction(enabledRequirement.getFunction().toUpperCase());
  ruleRow.setRemediationCoefficient(convertDuration(enabledRequirement.getCoefficientValue(),enabledRequirement.getCoefficientUnit()));
  ruleRow.setRemediationOffset(convertDuration(enabledRequirement.getOffsetValue(),enabledRequirement.getOffsetUnit()));
  if (DebtRemediationFunction.Type.CONSTANT_ISSUE.name().equals(ruleRow.getRemediationFunction()) && ruleRow.getRemediationCoefficient() != null) {
    ruleRow.setRemediationOffset(ruleRow.getRemediationCoefficient());
    ruleRow.setRemediationCoefficient(null);
  }
  if ((DebtRemediationFunction.Type.LINEAR.name().equals(ruleRow.getRemediationFunction()) || DebtRemediationFunction.Type.LINEAR_OFFSET.name().equals(ruleRow.getRemediationFunction())) && ruleRow.getRemediationCoefficient() == null) {
    ruleRow.setRemediationCoefficient("0" + convertUnit(enabledRequirement.getCoefficientUnit()));
  }
 else   if ((DebtRemediationFunction.Type.CONSTANT_ISSUE.name().equals(ruleRow.getRemediationFunction()) || DebtRemediationFunction.Type.LINEAR_OFFSET.name().equals(ruleRow.getRemediationFunction())) && ruleRow.getRemediationOffset() == null) {
    ruleRow.setRemediationOffset("0" + convertUnit(enabledRequirement.getOffsetUnit()));
  }
  if (!isDebtDefaultValuesSameAsOverriddenValues(ruleRow)) {
    dbClient.ruleDao().update(session,ruleRow);
  }
}
