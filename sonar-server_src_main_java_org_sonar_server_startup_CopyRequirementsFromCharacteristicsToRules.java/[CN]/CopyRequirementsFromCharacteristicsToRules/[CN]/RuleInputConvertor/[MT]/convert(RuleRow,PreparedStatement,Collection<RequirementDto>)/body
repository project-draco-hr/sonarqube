{
  RequirementDto enabledRequirement=Iterables.find(requirementsForRule,new Predicate<RequirementDto>(){
    @Override public boolean apply(    RequirementDto input){
      return input.isEnabled();
    }
  }
,null);
  if (enabledRequirement == null && !Rule.STATUS_REMOVED.equals(ruleRow.getStatus())) {
    updateStatement.setInt(1,RuleDto.DISABLED_CHARACTERISTIC_ID);
    updateStatement.setNull(2,Types.VARCHAR);
    updateStatement.setNull(3,Types.VARCHAR);
    updateStatement.setNull(4,Types.VARCHAR);
    updateStatement.setDate(5,new Date(system2.now()));
    updateStatement.setInt(6,ruleRow.getId());
    return true;
  }
 else   if (enabledRequirement != null) {
    ruleRow.setCharacteristicId(enabledRequirement.getParentId());
    ruleRow.setFunction(enabledRequirement.getFunction().toUpperCase());
    ruleRow.setFactor(convertDuration(enabledRequirement.getFactorValue(),enabledRequirement.getFactorUnit()));
    ruleRow.setOffset(convertDuration(enabledRequirement.getOffsetValue(),enabledRequirement.getOffsetUnit()));
    if (!isDebtDefaultValuesSameAsOverriddenValues(ruleRow)) {
      updateStatement.setInt(1,ruleRow.getCharacteristicId());
      updateStatement.setString(2,ruleRow.getFunction());
      updateStatement.setString(3,ruleRow.getFactor());
      updateStatement.setString(4,ruleRow.getOffset());
      updateStatement.setDate(5,new Date(system2.now()));
      updateStatement.setInt(6,ruleRow.getId());
      return true;
    }
  }
  return false;
}
