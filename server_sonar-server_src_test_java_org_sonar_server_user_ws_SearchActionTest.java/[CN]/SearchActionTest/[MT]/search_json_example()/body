{
  UserDto fmallet=userDb.insertUser(newUserDto("fmallet","Freddy Mallet","f@m.com").setActive(true).setLocal(true).setScmAccounts(emptyList()));
  UserDto simon=userDb.insertUser(newUserDto("sbrandhof","Simon","s.brandhof@company.tld").setActive(true).setLocal(false).setExternalIdentity("sbrandhof@ldap.com").setExternalIdentityProvider("LDAP").setScmAccounts(newArrayList("simon.brandhof","s.brandhof@company.tld")));
  GroupDto sonarUsers=groupDb.insertGroup(newGroupDto().setName("sonar-users"));
  GroupDto sonarAdministrators=groupDb.insertGroup(newGroupDto().setName("sonar-administrators"));
  dbClient.userGroupDao().insert(dbSession,new UserGroupDto().setUserId(simon.getId()).setGroupId(sonarUsers.getId()));
  dbClient.userGroupDao().insert(dbSession,new UserGroupDto().setUserId(fmallet.getId()).setGroupId(sonarUsers.getId()));
  dbClient.userGroupDao().insert(dbSession,new UserGroupDto().setUserId(fmallet.getId()).setGroupId(sonarAdministrators.getId()));
  for (int i=0; i < 3; i++) {
    dbClient.userTokenDao().insert(dbSession,newUserToken().setLogin(simon.getLogin()));
  }
  dbClient.userTokenDao().insert(dbSession,newUserToken().setLogin(fmallet.getLogin()));
  db.commit();
  userIndexer.index();
  loginAsAdmin();
  String response=ws.newGetRequest("api/users","search").execute().outputAsString();
  assertJson(response).isSimilarTo(getClass().getResource("search-example.json"));
}
