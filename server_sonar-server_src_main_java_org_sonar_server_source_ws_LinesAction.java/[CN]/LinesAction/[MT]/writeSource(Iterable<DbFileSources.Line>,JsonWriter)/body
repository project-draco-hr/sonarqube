{
  json.name("sources").beginArray();
  for (  DbFileSources.Line line : lines) {
    json.beginObject().prop("line",line.getLine()).prop("code",htmlSourceDecorator.getDecoratedSourceAsHtml(line.getSource(),line.getHighlighting(),line.getSymbols())).prop("scmAuthor",line.getScmAuthor()).prop("scmRevision",line.getScmRevision());
    if (line.hasScmDate()) {
      json.prop("scmDate",DateUtils.formatDateTime(new Date(line.getScmDate())));
    }
    if (line.hasUtLineHits()) {
      json.prop("utLineHits",line.getUtLineHits());
    }
    if (line.hasUtConditions()) {
      json.prop("utConditions",line.getUtConditions());
    }
    if (line.hasUtCoveredConditions()) {
      json.prop("utCoveredConditions",line.getUtCoveredConditions());
    }
    if (line.hasItLineHits()) {
      json.prop("itLineHits",line.getItLineHits());
    }
    if (line.hasItConditions()) {
      json.prop("itConditions",line.getItConditions());
    }
    if (line.hasItCoveredConditions()) {
      json.prop("itCoveredConditions",line.getItCoveredConditions());
    }
    json.prop("duplicated",line.getDuplicationCount() > 0);
    json.endObject();
  }
  json.endArray();
}
