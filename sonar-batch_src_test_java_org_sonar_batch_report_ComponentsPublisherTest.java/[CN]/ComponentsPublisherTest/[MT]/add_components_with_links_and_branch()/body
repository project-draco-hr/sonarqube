{
  Project root=new Project("foo:my_branch").setName("Root project").setAnalysisDate(DateUtils.parseDate(("2012-12-12")));
  root.setId(1).setUuid("PROJECT_UUID");
  resourceCache.add(root,null).setSnapshot(new Snapshot().setId(11));
  reactor.getRoot().properties().put(CoreProperties.LINKS_HOME_PAGE,"http://home");
  reactor.getRoot().properties().put(CoreProperties.PROJECT_BRANCH_PROPERTY,"my_branch");
  Project module1=new Project("module1:my_branch").setName("Module1");
  module1.setParent(root);
  module1.setId(2).setUuid("MODULE_UUID");
  resourceCache.add(module1,root).setSnapshot(new Snapshot().setId(12));
  ProjectDefinition moduleDef=ProjectDefinition.create().setKey("module1");
  moduleDef.properties().put(CoreProperties.LINKS_CI,"http://ci");
  reactor.getRoot().addSubProject(moduleDef);
  Directory dir=Directory.create("src");
  dir.setEffectiveKey("foo:src");
  dir.setId(3).setUuid("DIR_UUID");
  resourceCache.add(dir,module1).setSnapshot(new Snapshot().setId(13));
  org.sonar.api.resources.File file=org.sonar.api.resources.File.create("src/Foo.java",Java.INSTANCE,false);
  file.setEffectiveKey("foo:src/Foo.java");
  file.setId(4).setUuid("FILE_UUID");
  resourceCache.add(file,dir).setSnapshot(new Snapshot().setId(14));
  File outputDir=temp.newFolder();
  BatchReportWriter writer=new BatchReportWriter(outputDir);
  publisher.publish(writer);
  BatchReportReader reader=new BatchReportReader(outputDir);
  Component rootProtobuf=reader.readComponent(1);
  assertThat(rootProtobuf.getLinkCount()).isEqualTo(1);
  assertThat(rootProtobuf.getLink(0).getType()).isEqualTo(ComponentLinkType.HOME);
  assertThat(rootProtobuf.getLink(0).getHref()).isEqualTo("http://home");
  Component module1Protobuf=reader.readComponent(2);
  assertThat(module1Protobuf.getLinkCount()).isEqualTo(1);
  assertThat(module1Protobuf.getLink(0).getType()).isEqualTo(ComponentLinkType.CI);
  assertThat(module1Protobuf.getLink(0).getHref()).isEqualTo("http://ci");
}
