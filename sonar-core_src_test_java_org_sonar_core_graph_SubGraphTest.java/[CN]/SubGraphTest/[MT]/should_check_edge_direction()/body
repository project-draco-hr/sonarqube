{
  TinkerGraph graph=new TinkerGraph();
  Vertex a=GraphHelper.addVertex(graph,null,"key","a");
  Vertex b=GraphHelper.addVertex(graph,null,"key","b");
  Vertex c=GraphHelper.addVertex(graph,null,"key","c");
  Vertex d=GraphHelper.addVertex(graph,null,"key","d");
  Vertex e=GraphHelper.addVertex(graph,null,"key","e");
  Edge ab=GraphHelper.addEdge(graph,null,a,b,"uses");
  Edge bc=GraphHelper.addEdge(graph,null,b,c,"inherits");
  Edge ad=GraphHelper.addEdge(graph,null,a,d,"uses");
  Edge de=GraphHelper.addEdge(graph,null,d,e,"implements");
  Graph sub=SubGraph.extract(a,EdgePath.create(Direction.IN,"uses",Direction.OUT,"implements"));
  assertThat(sub.getVertices()).hasSize(1);
  assertThat(sub.getVertex(a.getId())).isNotNull();
  assertThat(sub.getEdges()).isEmpty();
}
