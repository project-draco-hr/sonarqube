{
  ProjectDefinition moduleDefinition=getComponentByType(DefaultProjectTree.class).getProjectDefinition(module);
  add(moduleDefinition,module,ModuleSettings.class);
  ModuleSettings moduleSettings=getComponentByType(ModuleSettings.class);
  module.setSettings(moduleSettings);
  add(EventBus.class,PhaseExecutor.class,RuleFinderCompatibility.class,PostJobsExecutor.class,DecoratorsExecutor.class,SensorsExecutor.class,InitializersExecutor.class,ProjectInitializer.class,moduleDefinition.getContainerExtensions(),ModuleInputFileCache.class,FileExclusions.class,ExclusionFilters.class,DeprecatedFileFilters.class,InputFileBuilderFactory.class,FileMetadata.class,StatusDetectionFactory.class,LanguageDetectionFactory.class,FileIndexer.class,ComponentIndexer.class,LanguageVerifier.class,FileSystemLogger.class,DefaultModuleFileSystem.class,ModuleFileSystemInitializer.class,ProjectFileSystemAdapter.class,ProjectClasspath.class,QProfileVerifier.class,SensorOptimizer.class,PostJobOptimizer.class,DefaultSensorContext.class,DefaultPostJobContext.class,DefaultSensorStorage.class,DeprecatedSensorContext.class,BatchExtensionDictionnary.class,IssueFilters.class,CoverageExclusions.class,ResourceFilters.class,ModuleQProfiles.class,new RulesProfileProvider(),QProfileSensor.class,QProfileDecorator.class,CheckFactory.class,IssuesReports.class,IssuableFactory.class,ModuleIssues.class,org.sonar.api.issue.NoSonarFilter.class,IssueInclusionPatternInitializer.class,IssueExclusionPatternInitializer.class,IssueExclusionsRegexpScanner.class,IssueExclusionsLoader.class,EnforceIssuesFilter.class,IgnoreIssuesFilter.class,NoSonarFilter.class,BatchPerspectives.class,HighlightableBuilder.class,SymbolizableBuilder.class);
}
