{
  ProjectDefinition moduleDefinition=getComponentByType(ProjectTree.class).getProjectDefinition(module);
  add(moduleDefinition,module,ModuleSettings.class);
  ModuleSettings moduleSettings=getComponentByType(ModuleSettings.class);
  module.setSettings(moduleSettings);
  add(EventBus.class,PhaseExecutor.class,PhasesTimeProfiler.class,PhaseExecutor.getPhaseClasses(),moduleDefinition.getContainerExtensions(),ModuleInputFileCache.class,FileExclusions.class,ExclusionFilters.class,DeprecatedFileFilters.class,InputFileBuilderFactory.class,StatusDetectionFactory.class,LanguageDetectionFactory.class,PreviousFileHashLoader.class,FileIndexer.class,ComponentIndexer.class,LanguageVerifier.class,FileSystemLogger.class,DefaultProjectClasspath.class,DefaultModuleFileSystem.class,ModuleFileSystemInitializer.class,ProjectFileSystemAdapter.class,QProfileVerifier.class,AnalyzerOptimizer.class,getComponentByType(ResourcePersister.class).getSnapshot(module),TimeMachineConfiguration.class,DefaultSensorContext.class,SensorContextAdaptor.class,BatchExtensionDictionnary.class,DefaultTimeMachine.class,ViolationFilters.class,IssueFilters.class,MeasurementFilters.class,ResourceFilters.class,new QualityGateProvider(),QualityGateVerifier.class,GenerateQualityGateEvents.class,ModuleQProfiles.class,new ActiveRulesProvider(),new RulesProfileProvider(),QProfileSensor.class,QProfileDecorator.class,QProfileEventsDecorator.class,CheckFactory.class,JsonReport.class,IssuableFactory.class,ModuleIssues.class,IssueInclusionPatternInitializer.class,IssueExclusionPatternInitializer.class,IssueExclusionsRegexpScanner.class,IssueExclusionsLoader.class,EnforceIssuesFilter.class,IgnoreIssuesFilter.class,LanguageDistributionDecorator.class,IssueChangelogDebtCalculator.class,DebtDecorator.class,NewDebtDecorator.class,SqaleRatingDecorator.class,SqaleRatingSettings.class,ScanPerspectives.class);
}
