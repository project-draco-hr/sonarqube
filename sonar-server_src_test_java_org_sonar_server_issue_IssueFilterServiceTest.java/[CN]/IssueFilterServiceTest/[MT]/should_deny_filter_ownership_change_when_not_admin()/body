{
  String currentUser="dave.loper";
  IssueFilterDto sharedFilter=new IssueFilterDto().setId(1L).setName("My filter").setUserLogin(currentUser).setShared(true);
  UserSession userSession=MockUserSession.create().setLogin(currentUser).setUserId(1).setPermissions();
  when(issueFilterDao.selectById(1L)).thenReturn(sharedFilter);
  try {
    DefaultIssueFilter issueFilter=new DefaultIssueFilter().setId(1L).setName("My filter").setShared(true).setUser("new.owner");
    service.update(issueFilter,userSession);
    fail();
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(ForbiddenException.class).hasMessage("User is not authorized to change the owner of this filter");
  }
  verify(issueFilterDao,never()).update(any(IssueFilterDto.class));
}
