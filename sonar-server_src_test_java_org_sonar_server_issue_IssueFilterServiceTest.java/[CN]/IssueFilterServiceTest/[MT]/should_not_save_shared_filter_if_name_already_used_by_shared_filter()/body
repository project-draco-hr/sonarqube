{
  when(issueFilterDao.selectByUser(eq("john"))).thenReturn(Collections.<IssueFilterDto>emptyList());
  when(issueFilterDao.selectSharedFilters()).thenReturn(newArrayList(new IssueFilterDto().setId(1L).setName("My Issue").setUserLogin("henry").setShared(true)));
  DefaultIssueFilter issueFilter=new DefaultIssueFilter().setName("My Issue").setShared(true);
  try {
    service.save(issueFilter,userSession);
    fail();
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(IllegalArgumentException.class).hasMessage("Other users already share filters with the same name");
  }
  verify(issueFilterDao,never()).insert(any(IssueFilterDto.class));
}
