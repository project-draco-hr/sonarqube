{
  MockUserSession.set().setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN).setLogin("me");
  CharacteristicDto characteristicDto=new CharacteristicDto().setKey("API").setName("Api").setEnabled(true);
  tester.get(CharacteristicDao.class).insert(characteristicDto,session);
  CharacteristicDto subCharacteristicDto=new CharacteristicDto().setKey("API_ABUSE").setName("API Abuse").setEnabled(true).setParentId(characteristicDto.getId());
  tester.get(CharacteristicDao.class).insert(subCharacteristicDto,session);
  RuleDto ruleDto=ruleDao.insert(session,RuleTesting.newDto(RuleKey.of("java","S001")).setName("Rule S001").setDescription("Rule S001 <b>description</b>").setSeverity(Severity.MINOR).setStatus(RuleStatus.BETA).setConfigKey("InternalKeyS001").setLanguage("xoo").setDefaultSubCharacteristicId(null).setDefaultRemediationFunction(null).setDefaultRemediationCoefficient(null).setDefaultRemediationOffset(null).setSubCharacteristicId(subCharacteristicDto.getId()).setRemediationFunction("LINEAR_OFFSET").setRemediationCoefficient("5d").setRemediationOffset("10h"));
  session.commit();
  session.clearCache();
  WsTester.TestRequest request=wsTester.newGetRequest("api/rules","show").setParam("key",ruleDto.getKey().toString());
  request.execute().assertJson(getClass(),"show_rule_with_overridden_debt_infos.json");
}
