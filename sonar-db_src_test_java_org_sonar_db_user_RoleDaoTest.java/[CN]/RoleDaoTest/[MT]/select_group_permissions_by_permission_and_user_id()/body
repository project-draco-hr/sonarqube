{
  long userId=11L;
  underTest.insertGroupRole(dbSession,new GroupRoleDto().setRole(UserRole.ADMIN).setGroupId(1L).setResourceId(2L));
  groupDb.addUserToGroup(userId,1L);
  underTest.insertGroupRole(dbSession,new GroupRoleDto().setRole(UserRole.ADMIN).setGroupId(2L).setResourceId(3L));
  groupDb.addUserToGroup(userId,2L);
  groupDb.addUserToGroup(userId,3L);
  underTest.insertGroupRole(dbSession,new GroupRoleDto().setRole(UserRole.ADMIN).setGroupId(3L).setResourceId(null));
  underTest.insertGroupRole(dbSession,new GroupRoleDto().setRole(UserRole.ADMIN).setGroupId(4L).setResourceId(4L));
  groupDb.addUserToGroup(12L,4L);
  underTest.insertGroupRole(dbSession,new GroupRoleDto().setRole(UserRole.USER).setGroupId(5L).setResourceId(5L));
  groupDb.addUserToGroup(userId,5L);
  underTest.insertUserRole(dbSession,new UserRoleDto().setRole(UserRole.ADMIN).setUserId(userId).setResourceId(2L));
  underTest.insertGroupRole(dbSession,new GroupRoleDto().setRole(UserRole.ADMIN).setGroupId(3L).setResourceId(3L));
  db.commit();
  List<Long> result=underTest.selectComponentIdsByPermissionAndUserId(dbSession,UserRole.ADMIN,userId);
  assertThat(result).hasSize(2).containsExactly(2L,3L);
}
