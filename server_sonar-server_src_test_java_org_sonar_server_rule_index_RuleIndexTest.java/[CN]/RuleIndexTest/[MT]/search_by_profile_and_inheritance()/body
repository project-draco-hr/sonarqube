{
  indexRules(newDoc(RULE_KEY_1),newDoc(RULE_KEY_2),newDoc(RULE_KEY_3),newDoc(RULE_KEY_4));
  ActiveRuleKey activeRuleKey1=ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_1);
  ActiveRuleKey activeRuleKey2=ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_2);
  ActiveRuleKey activeRuleKey3=ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_3);
  indexActiveRules(ActiveRuleDocTesting.newDoc(activeRuleKey1),ActiveRuleDocTesting.newDoc(activeRuleKey2),ActiveRuleDocTesting.newDoc(activeRuleKey3),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RULE_KEY_1)).setInheritance(INHERITED.name()),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RULE_KEY_2)).setInheritance(OVERRIDES.name()),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RULE_KEY_3)).setInheritance(INHERITED.name()));
  assertThat(index.search(new RuleQuery(),new SearchOptions()).getIds()).hasSize(4);
  assertThat(index.search(new RuleQuery().setActivation(true),new SearchOptions()).getIds()).hasSize(3);
  assertThat(index.search(new RuleQuery().setActivation(false),new SearchOptions()).getIds()).containsOnly(RULE_KEY_4);
  assertThat(index.search(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY1).setInheritance(ImmutableSet.of(INHERITED.name())),new SearchOptions()).getIds()).isEmpty();
  assertThat(index.search(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY2).setInheritance(ImmutableSet.of(INHERITED.name())),new SearchOptions()).getIds()).hasSize(2);
  assertThat(index.search(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY1).setInheritance(ImmutableSet.of(OVERRIDES.name())),new SearchOptions()).getIds()).isEmpty();
  assertThat(index.search(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY2).setInheritance(ImmutableSet.of(OVERRIDES.name())),new SearchOptions()).getIds()).hasSize(1);
  assertThat(index.search(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY1).setInheritance(ImmutableSet.of(INHERITED.name(),OVERRIDES.name())),new SearchOptions()).getIds()).isEmpty();
  assertThat(index.search(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY2).setInheritance(ImmutableSet.of(INHERITED.name(),OVERRIDES.name())),new SearchOptions()).getIds()).hasSize(3);
}
