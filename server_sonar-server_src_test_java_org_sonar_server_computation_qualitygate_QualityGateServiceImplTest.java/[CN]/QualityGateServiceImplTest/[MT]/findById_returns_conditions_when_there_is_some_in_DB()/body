{
  when(qualityGateDao.selectById(SOME_ID)).thenReturn(QUALITY_GATE_DTO);
  when(qualityGateConditionDao.selectForQualityGate(SOME_ID)).thenReturn(ImmutableList.of(CONDITION_1,CONDITION_2));
  when(metricRepository.getById(METRIC_ID_1)).thenReturn(METRIC_1);
  when(metricRepository.getById(METRIC_ID_2)).thenReturn(METRIC_2);
  Optional<QualityGate> res=underTest.findById(SOME_ID);
  assertThat(res).isPresent();
  assertThat(res.get().getId()).isEqualTo(SOME_ID);
  assertThat(res.get().getName()).isEqualTo(SOME_NAME);
  assertThat(res.get().getConditions()).containsOnly(new Condition(METRIC_1,CONDITION_1.getOperator(),CONDITION_1.getErrorThreshold(),CONDITION_1.getWarningThreshold(),CONDITION_1.getPeriod()),new Condition(METRIC_2,CONDITION_2.getOperator(),CONDITION_2.getErrorThreshold(),CONDITION_2.getWarningThreshold(),CONDITION_2.getPeriod()));
}
