{
  MetricFinder metricFinder=mock(MetricFinder.class);
  when(metricFinder.<Integer>findByKey(CoreMetrics.NCLOC_KEY)).thenReturn(CoreMetrics.NCLOC);
  when(metricFinder.<String>findByKey(CoreMetrics.FUNCTION_COMPLEXITY_DISTRIBUTION_KEY)).thenReturn(CoreMetrics.FUNCTION_COMPLEXITY_DISTRIBUTION);
  settings=new MapSettings();
  moduleIssues=mock(ModuleIssues.class);
  project=new Project("myProject");
  measureCache=mock(MeasureCache.class);
  CoverageExclusions coverageExclusions=mock(CoverageExclusions.class);
  when(coverageExclusions.accept(any(Resource.class),any(Measure.class))).thenReturn(true);
  resourceCache=new BatchComponentCache();
  ReportPublisher reportPublisher=mock(ReportPublisher.class);
  when(reportPublisher.getWriter()).thenReturn(new ScannerReportWriter(temp.newFolder()));
  underTest=new DefaultSensorStorage(metricFinder,moduleIssues,settings,coverageExclusions,resourceCache,reportPublisher,measureCache,mock(SonarCpdBlockIndex.class),contextPropertiesCache);
}
