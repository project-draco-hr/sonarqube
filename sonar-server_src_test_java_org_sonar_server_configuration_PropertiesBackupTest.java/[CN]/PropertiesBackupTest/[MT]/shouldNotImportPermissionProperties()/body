{
  when(persistentSettings.getGlobalProperties()).thenReturn(Lists.newArrayList(new PropertyDto().setKey("sonar.permission.template.default").setValue("default_template"),new PropertyDto().setKey("sonar.permission.template.TRK.default").setValue("default_template_for_projects"),new PropertyDto().setKey("erasable_key").setValue("erasable_value")));
  Collection<Property> newProperties=Arrays.asList(new Property("sonar.permission.template.default","another_default"),new Property("key_to_import","value_to_import"),new Property("erasable_key","new_value"));
  SonarConfig config=new SonarConfig();
  config.setProperties(newProperties);
  backup.importXml(config);
  Map<String,String> expectedProperties=new HashMap<String,String>();
  expectedProperties.put("key_to_import","value_to_import");
  expectedProperties.put("erasable_key","new_value");
  expectedProperties.put("sonar.permission.template.default","default_template");
  expectedProperties.put("sonar.permission.template.TRK.default","default_template_for_projects");
  verify(persistentSettings).saveProperties(argThat(IsMap.containing(expectedProperties)));
}
