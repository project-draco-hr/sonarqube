{
  treeRootHolder.setRoot(BALANCED_COMPONENT_TREE);
  measureRepository.addRawMeasure(1111,NEW_LINES_TO_COVER_KEY,createMeasureWithVariation(10,20));
  measureRepository.addRawMeasure(1112,NEW_LINES_TO_COVER_KEY,createMeasureWithVariation(8,16));
  measureRepository.addRawMeasure(1211,NEW_LINES_TO_COVER_KEY,createMeasureWithVariation(2,4));
  underTest.visit(BALANCED_COMPONENT_TREE);
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(20,40)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(11))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(18,36)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(111))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(18,36)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1111))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(10,20)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1112))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(8,16)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(12))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(2,4)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(121))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(2,4)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(1211))).containsOnly(entryOf(NEW_IT_COVERAGE_KEY,createMeasureWithVariation(2,4)));
}
