{
  treeRootHolder.setRoot(BALANCED_COMPONENT_TREE);
  measureRepository.addRawMeasure(1111,LINES_KEY,newMeasureBuilder().create(10));
  measureRepository.addRawMeasure(1112,LINES_KEY,newMeasureBuilder().create(8));
  measureRepository.addRawMeasure(1211,LINES_KEY,newMeasureBuilder().create(2));
  underTest.visit(BALANCED_COMPONENT_TREE);
  assertThat(measureRepository.getNewRawMeasure(1,NCLOC_KEY).get().getIntValue()).isEqualTo(20);
  assertThat(measureRepository.getNewRawMeasure(11,NCLOC_KEY).get().getIntValue()).isEqualTo(18);
  assertThat(measureRepository.getNewRawMeasure(111,NCLOC_KEY).get().getIntValue()).isEqualTo(18);
  assertThat(measureRepository.getNewRawMeasure(1111,NCLOC_KEY).get().getIntValue()).isEqualTo(10);
  assertThat(measureRepository.getNewRawMeasure(1112,NCLOC_KEY).get().getIntValue()).isEqualTo(8);
  assertThat(measureRepository.getNewRawMeasure(12,NCLOC_KEY).get().getIntValue()).isEqualTo(2);
  assertThat(measureRepository.getNewRawMeasure(121,NCLOC_KEY).get().getIntValue()).isEqualTo(2);
  assertThat(measureRepository.getNewRawMeasure(1211,NCLOC_KEY).get().getIntValue()).isEqualTo(2);
}
