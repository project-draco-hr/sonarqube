{
  Map<RulePriority,Multiset<Rule>> rulesPerSeverity=Maps.newHashMap();
  for (  Violation violation : context.getViolations()) {
    Multiset<Rule> rulesBag=initRules(rulesPerSeverity,violation.getSeverity());
    rulesBag.add(violation.getRule());
  }
  for (  RulePriority severity : RulePriority.values()) {
    Metric metric=SeverityUtils.severityToViolationMetric(severity);
    Collection<Measure> children=context.getChildrenMeasures(MeasuresFilters.rules(metric));
    for (    Measure child : children) {
      RuleMeasure childRuleMeasure=(RuleMeasure)child;
      Rule rule=childRuleMeasure.getRule();
      if (rule != null && MeasureUtils.hasValue(childRuleMeasure)) {
        Multiset<Rule> rulesBag=initRules(rulesPerSeverity,severity);
        rulesBag.add(rule,childRuleMeasure.getIntValue());
      }
    }
    Multiset<Rule> rulesBag=rulesPerSeverity.get(severity);
    if (rulesBag != null) {
      for (      Multiset.Entry<Rule> entry : rulesBag.entrySet()) {
        RuleMeasure measure=RuleMeasure.createForRule(metric,entry.getElement(),(double)entry.getCount());
        measure.setRulePriority(severity);
        context.saveMeasure(measure);
      }
    }
  }
}
