{
  ComponentDto component=new ComponentDto().setId(1L).setKey("Action.java");
  when(resourceDao.selectComponentsByIds(anyCollection())).thenReturn(newArrayList(component));
  IssueQuery query=IssueQuery.builder().build();
  IssueDto issue1=new IssueDto().setId(1L).setRuleId(50).setComponentId(123l).setRootComponentId(100l).setComponentKey("Action.java").setRootComponentKey("struts").setRuleKey("squid","AvoidCycle").setStatus("OPEN").setResolution("OPEN");
  IssueDto issue2=new IssueDto().setId(2L).setRuleId(50).setComponentId(123l).setRootComponentId(100l).setComponentKey("Action.java").setRootComponentKey("struts").setRuleKey("squid","AvoidCycle").setStatus("OPEN").setResolution("OPEN");
  List<IssueDto> dtoList=newArrayList(issue1,issue2);
  when(issueDao.selectByIds(anyCollection(),any(SqlSession.class))).thenReturn(dtoList);
  IssueQueryResult results=finder.find(query);
  assertThat(results.issues()).hasSize(2);
  assertThat(results.components()).hasSize(1);
  Issue issue=results.issues().iterator().next();
  assertThat(results.component(issue)).isEqualTo(component);
}
