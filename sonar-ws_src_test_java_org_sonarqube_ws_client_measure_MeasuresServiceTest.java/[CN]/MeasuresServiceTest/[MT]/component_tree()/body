{
  ComponentTreeWsRequest componentTreeRequest=new ComponentTreeWsRequest().setBaseComponentId(VALUE_BASE_COMPONENT_ID).setBaseComponentKey(VALUE_BASE_COMPONENT_KEY).setMetricKeys(VALUE_METRIC_KEYS).setStrategy(VALUE_STRATEGY).setQualifiers(VALUE_QUALIFIERS).setAdditionalFields(VALUE_ADDITIONAL_FIELDS).setSort(VALUE_SORT).setAsc(VALUE_ASC).setMetricSort(VALUE_METRIC_SORT).setPage(VALUE_PAGE).setPageSize(VALUE_PAGE_SIZE).setQuery(VALUE_QUERY).setDeveloperId(VALUE_DEVELOPER_ID).setDeveloperKey(VALUE_DEVELOPER_KEY);
  underTest.componentTree(componentTreeRequest);
  GetRequest getRequest=serviceTester.getGetRequest();
  assertThat(serviceTester.getGetParser()).isSameAs(ComponentTreeWsResponse.parser());
  serviceTester.assertThat(getRequest).hasParam(PARAM_BASE_COMPONENT_ID,VALUE_BASE_COMPONENT_ID).hasParam(PARAM_BASE_COMPONENT_KEY,VALUE_BASE_COMPONENT_KEY).hasParam(PARAM_METRIC_KEYS,"ncloc,complexity").hasParam(PARAM_STRATEGY,VALUE_STRATEGY).hasParam(PARAM_QUALIFIERS,"FIL,PRJ").hasParam(PARAM_ADDITIONAL_FIELDS,"metrics").hasParam("s","qualifier,metric").hasParam("asc",VALUE_ASC).hasParam(PARAM_METRIC_SORT,VALUE_METRIC_SORT).hasParam("p",VALUE_PAGE).hasParam("ps",VALUE_PAGE_SIZE).hasParam("q",VALUE_QUERY).hasParam(PARAM_DEVELOPER_ID,VALUE_DEVELOPER_ID).hasParam(PARAM_DEVELOPER_KEY,VALUE_DEVELOPER_KEY).andNoOtherParam();
}
