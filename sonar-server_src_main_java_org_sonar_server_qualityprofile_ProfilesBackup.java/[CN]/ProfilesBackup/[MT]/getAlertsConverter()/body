{
  return new Converter(){
    public void marshal(    Object source,    HierarchicalStreamWriter writer,    MarshallingContext context){
      Alert alert=(Alert)source;
      writeNode(writer,OPERATOR,alert.getOperator());
      writeNode(writer,VALUE_ERROR,alert.getValueError());
      writeNode(writer,VALUE_WARNING,alert.getValueWarning());
      if (alert.getPeriod() != null) {
        writeNode(writer,PERIOD,Integer.toString(alert.getPeriod()));
      }
      writeNode(writer,METRIC_KEY,alert.getMetric().getKey());
    }
    public Object unmarshal(    HierarchicalStreamReader reader,    UnmarshallingContext context){
      Map<String,String> values=readNode(reader);
      Alert alert=new Alert(null,new Metric(values.get(METRIC_KEY)),values.get(OPERATOR),values.get(VALUE_ERROR),values.get(VALUE_WARNING));
      String periodText=values.get(PERIOD);
      if (StringUtils.isNotEmpty(periodText)) {
        alert.setPeriod(Integer.parseInt(periodText));
      }
      return alert;
    }
    public boolean canConvert(    Class type){
      return type.equals(Alert.class);
    }
  }
;
}
