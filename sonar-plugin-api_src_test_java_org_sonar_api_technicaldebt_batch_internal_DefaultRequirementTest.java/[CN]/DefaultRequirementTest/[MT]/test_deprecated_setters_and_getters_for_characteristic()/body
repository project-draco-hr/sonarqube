{
  DefaultCharacteristic root=new DefaultCharacteristic().setId(1).setKey("REUSABILITY");
  DefaultCharacteristic characteristic=new DefaultCharacteristic().setId(1).setKey("MODULARITY").setName("Modularity").setParent(root).setRoot(root);
  DefaultRequirement requirement=new DefaultRequirement().setId(3).setRuleKey(RuleKey.of("repo","rule")).setCharacteristic(characteristic).setRootCharacteristic(root).setFunction("linear_offset").setFactor(WorkUnit.create(2d,WorkUnit.MINUTES)).setOffset(WorkUnit.create(1d,WorkUnit.HOURS));
  assertThat(requirement.factor()).isEqualTo(WorkUnit.create(2d,WorkUnit.MINUTES));
  assertThat(requirement.offset()).isEqualTo(WorkUnit.create(1d,WorkUnit.HOURS));
  assertThat(new DefaultRequirement().setId(3).setRuleKey(RuleKey.of("repo","rule")).setCharacteristic(characteristic).setRootCharacteristic(root).setFunction("linear_offset").setFactor(WorkUnit.create(2d,WorkUnit.DAYS)).factor()).isEqualTo(WorkUnit.create(2d,WorkUnit.DAYS));
}
