{
  Date now=new Date();
  Date twoWeeksAgo=DateUtils.addDays(now,-2 * 7);
  Date aLongTimeAgo=DateUtils.addDays(now,-365 * 7);
  ComponentDto project=ComponentTesting.newProjectDto().setKey("123").setCreatedAt(aLongTimeAgo).setUpdatedAt(aLongTimeAgo);
  dbClient.componentDao().insert(dbSession,project);
  SnapshotDto snapshot=SnapshotTesting.createForProject(project).setCreatedAt(twoWeeksAgo.getTime()).setStatus("P").setLast(true);
  dbClient.snapshotDao().insert(dbSession,snapshot);
  AnalysisReportDto report=new AnalysisReportDto().setProjectKey("123").setSnapshotId(snapshot.getId()).setStatus(Status.PENDING);
  dbClient.analysisReportDao().insert(dbSession,report);
  dbClient.propertiesDao().setProperty(new PropertyDto().setKey(DbCleanerConstants.WEEKS_BEFORE_DELETING_ALL_SNAPSHOTS).setValue("4"));
  dbClient.propertiesDao().setProperty(new PropertyDto().setKey(DbCleanerConstants.WEEKS_BEFORE_DELETING_ALL_SNAPSHOTS).setValue("1").setResourceId(project.getId()));
  dbSession.commit();
  ComputationContext context=new ComputationContext(report,project);
  sut.execute(context);
  dbSession.commit();
  assertThat(dbClient.snapshotDao().getNullableByKey(dbSession,snapshot.getId())).isNull();
}
