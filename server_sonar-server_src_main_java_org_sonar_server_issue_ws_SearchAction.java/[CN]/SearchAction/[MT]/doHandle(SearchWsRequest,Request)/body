{
  SearchOptions options=new SearchOptions();
  options.setPage(request.getPage(),request.getPageSize());
  options.addFacets(request.getFacets());
  EnumSet<SearchAdditionalField> additionalFields=SearchAdditionalField.getFromRequest(request);
  IssueQuery query=issueQueryService.createFromRequest(request);
  SearchResult<IssueDoc> result=issueIndex.search(query,options);
  List<String> issueKeys=from(result.getDocs()).transform(IssueDocToKey.INSTANCE).toList();
  SearchResponseLoader.Collector collector=new SearchResponseLoader.Collector(additionalFields,issueKeys);
  collectLoggedInUser(collector);
  collectRequestParams(collector,request);
  Facets facets=null;
  if (!options.getFacets().isEmpty()) {
    facets=result.getFacets();
    completeFacets(facets,request,wsRequest);
    collectFacets(collector,facets);
  }
  SearchResponseData data=searchResponseLoader.load(collector,facets);
  facets=reorderFacets(facets,options.getFacets());
  Paging paging=forPageIndex(options.getPage()).withPageSize(options.getLimit()).andTotal((int)result.getTotal());
  return searchResponseFormat.formatSearch(additionalFields,data,paging,facets);
}
