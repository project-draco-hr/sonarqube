{
  List<String> issueKeys=newArrayList();
  Set<RuleKey> ruleKeys=newHashSet();
  Set<String> projectKeys=newHashSet();
  Set<String> componentKeys=newHashSet();
  Set<Long> componentIds=newHashSet();
  Set<String> actionPlanKeys=newHashSet();
  List<String> userLogins=newArrayList();
  Map<String,User> usersByLogin=newHashMap();
  Multimap<String,DefaultIssueComment> commentsByIssues=ArrayListMultimap.create();
  for (  Issue issue : result.getHits()) {
    issueKeys.add(issue.key());
    ruleKeys.add(issue.ruleKey());
    projectKeys.add(issue.projectKey());
    componentKeys.add(issue.componentKey());
    actionPlanKeys.add(issue.actionPlanKey());
    if (issue.reporter() != null) {
      userLogins.add(issue.reporter());
    }
    if (issue.assignee() != null) {
      userLogins.add(issue.assignee());
    }
  }
  DbSession session=dbClient.openSession(false);
  try {
    List<DefaultIssueComment> comments=issueChangeDao.selectCommentsByIssues(session,issueKeys);
    for (    DefaultIssueComment issueComment : comments) {
      userLogins.add(issueComment.userLogin());
      commentsByIssues.put(issueComment.issueKey(),issueComment);
    }
    usersByLogin=getUsersByLogin(session,userLogins);
    List<ComponentDto> componentDtos=dbClient.componentDao().getByKeys(session,componentKeys);
    List<ComponentDto> subProjectDtos=dbClient.componentDao().findSubProjectsByComponentKeys(session,componentKeys);
    List<ComponentDto> projectDtos=dbClient.componentDao().getByKeys(session,projectKeys);
    componentDtos.addAll(subProjectDtos);
    componentDtos.addAll(projectDtos);
    writeProjects(json,projectDtos);
    writeComponents(json,componentDtos);
  }
  finally {
    session.close();
  }
  Map<String,ActionPlan> actionPlanByKeys=getActionPlanByKeys(actionPlanKeys);
  writeIssues(result,commentsByIssues,usersByLogin,actionPlanByKeys,request.paramAsStrings(EXTRA_FIELDS_PARAM),json);
  writeRules(json,!request.mandatoryParamAsBoolean(IssueFilterParameters.HIDE_RULES) ? ruleService.getByKeys(ruleKeys) : Collections.<Rule>emptyList());
  writeUsers(json,usersByLogin);
  writeActionPlans(json,actionPlanByKeys.values());
  writeLegacyPaging(context,json,result);
}
