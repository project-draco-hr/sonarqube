{
  addMandatoryValuesToFacet(facets,IssueFilterParameters.SEVERITIES,Severity.ALL);
  addMandatoryValuesToFacet(facets,IssueFilterParameters.STATUSES,Issue.STATUSES);
  addMandatoryValuesToFacet(facets,IssueFilterParameters.RESOLUTIONS,concat(singletonList(""),Issue.RESOLUTIONS));
  addMandatoryValuesToFacet(facets,IssueFilterParameters.PROJECT_UUIDS,request.getProjectUuids());
  List<String> assignees=Lists.newArrayList("");
  List<String> assigneesFromRequest=request.getAssignees();
  if (assigneesFromRequest != null) {
    assignees.addAll(assigneesFromRequest);
    assignees.remove(IssueQueryService.LOGIN_MYSELF);
  }
  addMandatoryValuesToFacet(facets,IssueFilterParameters.ASSIGNEES,assignees);
  addMandatoryValuesToFacet(facets,IssueFilterParameters.FACET_ASSIGNED_TO_ME,singletonList(userSession.getLogin()));
  addMandatoryValuesToFacet(facets,IssueFilterParameters.REPORTERS,request.getReporters());
  addMandatoryValuesToFacet(facets,IssueFilterParameters.RULES,request.getRules());
  addMandatoryValuesToFacet(facets,IssueFilterParameters.LANGUAGES,request.getLanguages());
  addMandatoryValuesToFacet(facets,IssueFilterParameters.TAGS,request.getTags());
  addMandatoryValuesToFacet(facets,IssueFilterParameters.TYPES,RuleType.ALL_NAMES);
  List<String> actionPlans=Lists.newArrayList("");
  List<String> actionPlansFromRequest=request.getActionPlans();
  if (actionPlansFromRequest != null) {
    actionPlans.addAll(actionPlansFromRequest);
  }
  addMandatoryValuesToFacet(facets,ACTION_PLANS,actionPlans);
  addMandatoryValuesToFacet(facets,IssueFilterParameters.COMPONENT_UUIDS,request.getComponentUuids());
  for (  String facetName : request.getFacets()) {
    LinkedHashMap<String,Long> buckets=facets.get(facetName);
    if (!IssueFilterParameters.FACET_ASSIGNED_TO_ME.equals(facetName)) {
      if (buckets != null) {
        List<String> requestParams=wsRequest.paramAsStrings(facetName);
        if (requestParams != null) {
          for (          String param : requestParams) {
            if (!buckets.containsKey(param) && !IssueQueryService.LOGIN_MYSELF.equals(param)) {
              buckets.put(param,0L);
            }
          }
        }
      }
    }
  }
}
