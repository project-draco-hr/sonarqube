{
  WebService.NewAction action=controller.createAction(SEARCH_ACTION).setHandler(this).setDescription("Search for issues. Requires Browse permission on project(s).<br/>" + "Since 5.5, response field 'debt' has been renamed to 'effort'").setSince("3.6").setResponseExample(Resources.getResource(this.getClass(),"example-search.json"));
  action.addPagingParams(100,MAX_LIMIT);
  action.createParam(Param.FACETS).setDescription("Comma-separated list of the facets to be computed. No facet is computed by default.").setPossibleValues(IssueIndex.SUPPORTED_FACETS);
  action.createParam(FACET_MODE).setDefaultValue(FACET_MODE_COUNT).setDescription("Choose the returned value for facet items, either count of issues or sum of debt.<br/>" + "Since 5.5, 'debt' mode is deprecated and replaced by 'effort'").setPossibleValues(FACET_MODE_COUNT,FACET_MODE_EFFORT,DEPRECATED_FACET_MODE_DEBT);
  action.addSortParams(IssueQuery.SORTS,null,true);
  action.createParam(ADDITIONAL_FIELDS).setSince("5.2").setDescription("Comma-separated list of the optional fields to be returned in response.").setPossibleValues(SearchAdditionalField.possibleValues());
  addComponentRelatedParams(action);
  action.createParam(ISSUES).setDescription("Comma-separated list of issue keys").setExampleValue("5bccd6e8-f525-43a2-8d76-fcb13dde79ef");
  action.createParam(SEVERITIES).setDescription("Comma-separated list of severities").setExampleValue(Severity.BLOCKER + "," + Severity.CRITICAL).setPossibleValues(Severity.ALL);
  action.createParam(STATUSES).setDescription("Comma-separated list of statuses").setExampleValue(Issue.STATUS_OPEN + "," + Issue.STATUS_REOPENED).setPossibleValues(Issue.STATUSES);
  action.createParam(RESOLUTIONS).setDescription("Comma-separated list of resolutions").setExampleValue(Issue.RESOLUTION_FIXED + "," + Issue.RESOLUTION_REMOVED).setPossibleValues(Issue.RESOLUTIONS);
  action.createParam(RESOLVED).setDescription("To match resolved or unresolved issues").setBooleanPossibleValues();
  action.createParam(RULES).setDescription("Comma-separated list of coding rule keys. Format is <repository>:<rule>").setExampleValue("squid:AvoidCycles");
  action.createParam(TAGS).setDescription("Comma-separated list of tags.").setExampleValue("security,convention");
  action.createParam(TYPES).setDescription("Comma-separated list of types.").setSince("5.5").setPossibleValues(RuleType.values()).setExampleValue(format("%s,%s",RuleType.CODE_SMELL,RuleType.BUG));
  action.createParam(ACTION_PLANS).setDescription("Comma-separated list of action plan keys (not names)").setExampleValue("3f19de90-1521-4482-a737-a311758ff513");
  action.createParam(PLANNED).setDescription("To retrieve issues associated to an action plan or not").setBooleanPossibleValues();
  action.createParam(REPORTERS).setDescription("Comma-separated list of reporter logins").setExampleValue("admin");
  action.createParam(AUTHORS).setDescription("Comma-separated list of SCM accounts").setExampleValue("torvalds@linux-foundation.org");
  action.createParam(ASSIGNEES).setDescription("Comma-separated list of assignee logins. The value '__me__' can be used as a placeholder for user who performs the request").setExampleValue("admin,usera,__me__");
  action.createParam(ASSIGNED).setDescription("To retrieve assigned or unassigned issues").setBooleanPossibleValues();
  action.createParam(LANGUAGES).setDescription("Comma-separated list of languages. Available since 4.4").setExampleValue("java,js");
  action.createParam(CREATED_AT).setDescription("To retrieve issues created in a specific analysis, identified by an ISO-formatted datetime stamp.").setExampleValue("2013-05-01T13:00:00+0100");
  action.createParam(CREATED_AFTER).setDescription("To retrieve issues created after the given date (exclusive). Format: date or datetime ISO formats. If this parameter is set, createdSince must not be set").setExampleValue("2013-05-01 (or 2013-05-01T13:00:00+0100)");
  action.createParam(CREATED_BEFORE).setDescription("To retrieve issues created before the given date (exclusive). Format: date or datetime ISO formats").setExampleValue("2013-05-01 (or 2013-05-01T13:00:00+0100)");
  action.createParam(CREATED_IN_LAST).setDescription("To retrieve issues created during a time span before the current time (exclusive). " + "Accepted units are 'y' for year, 'm' for month, 'w' for week and 'd' for day. " + "If this parameter is set, createdAfter must not be set").setExampleValue("1m2w (1 month 2 weeks)");
}
