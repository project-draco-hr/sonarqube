{
  LOG.info("Sending email: {}",emailMessage);
  String domain="nemo.sonarsource.org";
  String listId="<sonar." + domain + ">";
  String serverUrl="http://nemo.sonarsource.org";
  SimpleEmail email=new SimpleEmail();
  if (StringUtils.isNotEmpty(emailMessage.getMessageId())) {
    String messageId="<" + emailMessage.getMessageId() + "@"+ domain+ ">";
    email.addHeader("In-Reply-To",messageId);
    email.addHeader("References",messageId);
  }
  email.addHeader("List-Id",listId);
  email.addHeader("List-Archive",serverUrl);
  email.setFrom(configuration.getFrom(),StringUtils.defaultIfBlank(emailMessage.getFrom(),FROM_NAME_DEFAULT));
  email.addTo(emailMessage.getTo()," ");
  String subject=StringUtils.defaultIfBlank(StringUtils.trimToEmpty(configuration.getPrefix()) + " ","") + StringUtils.defaultString(emailMessage.getSubject(),SUBJECT_DEFAULT);
  email.setSubject(subject);
  email.setMsg(emailMessage.getMessage());
  email.setHostName(configuration.getSmtpHost());
  email.setSmtpPort(Integer.parseInt(configuration.getSmtpPort()));
  email.setTLS(configuration.isUseTLS());
  if (StringUtils.isNotBlank(configuration.getSmtpUsername()) || StringUtils.isNotBlank(configuration.getSmtpPassword())) {
    email.setAuthentication(configuration.getSmtpUsername(),configuration.getSmtpPassword());
  }
  email.setSocketConnectionTimeout(SOCKET_TIMEOUT);
  email.setSocketTimeout(SOCKET_TIMEOUT);
  email.send();
}
