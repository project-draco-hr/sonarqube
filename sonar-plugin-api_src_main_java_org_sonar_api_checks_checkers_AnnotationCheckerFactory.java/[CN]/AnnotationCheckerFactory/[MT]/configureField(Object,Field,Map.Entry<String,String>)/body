{
  field.setAccessible(true);
  if (field.getType().equals(String.class)) {
    field.set(checker,parameter.getValue());
  }
 else   if (field.getType().getSimpleName().equals("int")) {
    field.setInt(checker,Integer.parseInt(parameter.getValue()));
  }
 else   if (field.getType().getSimpleName().equals("short")) {
    field.setShort(checker,Short.parseShort(parameter.getValue()));
  }
 else   if (field.getType().getSimpleName().equals("long")) {
    field.setLong(checker,Long.parseLong(parameter.getValue()));
  }
 else   if (field.getType().getSimpleName().equals("double")) {
    field.setDouble(checker,Double.parseDouble(parameter.getValue()));
  }
 else   if (field.getType().getSimpleName().equals("boolean")) {
    field.setBoolean(checker,Boolean.parseBoolean(parameter.getValue()));
  }
 else   if (field.getType().getSimpleName().equals("byte")) {
    field.setByte(checker,Byte.parseByte(parameter.getValue()));
  }
 else   if (field.getType().equals(Integer.class)) {
    field.set(checker,new Integer(Integer.parseInt(parameter.getValue())));
  }
 else   if (field.getType().equals(Long.class)) {
    field.set(checker,new Long(Long.parseLong(parameter.getValue())));
  }
 else   if (field.getType().equals(Double.class)) {
    field.set(checker,new Double(Double.parseDouble(parameter.getValue())));
  }
 else   if (field.getType().equals(Boolean.class)) {
    field.set(checker,Boolean.valueOf(Boolean.parseBoolean(parameter.getValue())));
  }
 else {
    throw new UnvalidCheckerException("The type of the field " + field + " is not supported: "+ field.getType());
  }
}
