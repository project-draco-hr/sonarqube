{
  PermissionTemplateDto template1=templateDb.insertTemplate();
  PermissionTemplateDto template2=templateDb.insertTemplate();
  PermissionTemplateDto template3=templateDb.insertTemplate();
  GroupDto group1=groupDb.insertGroup();
  GroupDto group2=groupDb.insertGroup();
  GroupDto group3=groupDb.insertGroup();
  templateDb.addGroupToTemplate(42L,group1.getId(),ISSUE_ADMIN);
  templateDb.addGroupToTemplate(template1.getId(),group1.getId(),CODEVIEWER);
  templateDb.addGroupToTemplate(template1.getId(),group2.getId(),CODEVIEWER);
  templateDb.addGroupToTemplate(template1.getId(),group3.getId(),CODEVIEWER);
  templateDb.addGroupToTemplate(template1.getId(),null,CODEVIEWER);
  templateDb.addGroupToTemplate(template1.getId(),group1.getId(),ADMIN);
  templateDb.addGroupToTemplate(template2.getId(),group1.getId(),ADMIN);
  final List<CountByTemplateAndPermissionDto> result=new ArrayList<>();
  underTest.groupsCountByTemplateIdAndPermission(dbSession,Arrays.asList(template1.getId(),template2.getId(),template3.getId()),new ResultHandler(){
    @Override public void handleResult(    ResultContext context){
      result.add((CountByTemplateAndPermissionDto)context.getResultObject());
    }
  }
);
  assertThat(result).hasSize(3);
  assertThat(result).extracting("permission").containsOnly(ADMIN,CODEVIEWER);
  assertThat(result).extracting("templateId").containsOnly(template1.getId(),template2.getId());
  assertThat(result).extracting("count").containsOnly(4,1);
}
