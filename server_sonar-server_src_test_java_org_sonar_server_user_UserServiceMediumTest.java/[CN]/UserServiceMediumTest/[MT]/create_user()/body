{
  MockUserSession.set().setLogin("john").setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);
  GroupDto userGroup=new GroupDto().setName(CoreProperties.CORE_DEFAULT_GROUP_DEFAULT_VALUE);
  dbClient.groupDao().insert(session,userGroup);
  session.commit();
  boolean result=service.create(NewUser.create().setLogin("user").setName("User").setEmail("user@mail.com").setPassword("password").setPasswordConfirmation("password").setScmAccounts(newArrayList("u1","u_1")));
  assertThat(result).isFalse();
  UserDto userDto=dbClient.userDao().selectNullableByLogin(session,"user");
  assertThat(userDto).isNotNull();
  assertThat(userDto.getId()).isNotNull();
  assertThat(userDto.getLogin()).isEqualTo("user");
  assertThat(userDto.getName()).isEqualTo("User");
  assertThat(userDto.getEmail()).isEqualTo("user@mail.com");
  assertThat(userDto.getCryptedPassword()).isNotNull();
  assertThat(userDto.getSalt()).isNotNull();
  assertThat(userDto.getScmAccountsAsList()).containsOnly("u1","u_1");
  assertThat(userDto.getCreatedAt()).isNotNull();
  assertThat(userDto.getUpdatedAt()).isNotNull();
  UserDoc userDoc=service.getNullableByLogin("user");
  assertThat(userDoc).isNotNull();
  assertThat(userDoc.login()).isEqualTo("user");
  assertThat(userDoc.name()).isEqualTo("User");
  assertThat(userDoc.email()).isEqualTo("user@mail.com");
  assertThat(userDoc.scmAccounts()).containsOnly("u1","u_1");
  assertThat(userDoc.createdAt()).isNotNull();
  assertThat(userDoc.updatedAt()).isNotNull();
}
