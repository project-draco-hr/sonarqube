{
  ResourceModel model=findOrCreateModel(project,parent);
  model.setDeprecatedKey(project.getKey());
  model.setLanguageKey(null);
  if (project instanceof ResourceCopy) {
    model.setCopyResourceId(((ResourceCopy)project).getCopyResourceId());
  }
  Snapshot parentSnapshot=null;
  if (parent != null) {
    parentSnapshot=resourceCache.get(parent.getEffectiveKey()).snapshot();
    model.setRootId((Integer)ObjectUtils.defaultIfNull(parentSnapshot.getRootProjectId(),parentSnapshot.getResourceId()));
  }
 else {
    model.setRootId(null);
  }
  model=session.save(model);
  project.setId(model.getId());
  project.setUuid(model.getUuid());
  Snapshot snapshot=new Snapshot(model,parentSnapshot);
  snapshot.setVersion(project.getAnalysisVersion());
  snapshot.setCreatedAt(dateToLong(project.getAnalysisDate()));
  snapshot.setBuildDate(System.currentTimeMillis());
  snapshot=session.save(snapshot);
  session.commit();
  if (!permissions.hasRoles(project)) {
    permissions.grantDefaultRoles(project);
  }
  return snapshot;
}
