{
  return new DbSynchronizationHandler(){
    private final Map<String,IssueAuthorizationDto> authorizationDtoMap=new HashMap<String,IssueAuthorizationDto>();
    @Override public void handleResult(    ResultContext context){
      Map<String,Object> row=(Map<String,Object>)context.getResultObject();
      String project=(String)row.get("project");
      String user=(String)row.get("user");
      String group=(String)row.get("permission_group");
      Date updatedAt=(Date)row.get("updated_at");
      IssueAuthorizationDto issueAuthorizationDto=authorizationDtoMap.get(project);
      if (issueAuthorizationDto == null) {
        issueAuthorizationDto=new IssueAuthorizationDto().setProject(project).setPermission(UserRole.USER);
        issueAuthorizationDto.setUpdatedAt(updatedAt);
      }
      if (group != null) {
        issueAuthorizationDto.addGroup(group);
      }
      if (user != null) {
        issueAuthorizationDto.addUser(user);
      }
      authorizationDtoMap.put(project,issueAuthorizationDto);
    }
    @Override public void enqueueCollected(){
      for (      IssueAuthorizationDto authorization : authorizationDtoMap.values()) {
        session.enqueue(new UpsertDto<IssueAuthorizationDto>(getIndexType(),authorization,true));
      }
    }
  }
;
}
