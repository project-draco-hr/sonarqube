{
  boolean isAdmin=userSession.hasProjectPermissionByUuid(UserRole.ADMIN,component.projectUuid());
  boolean isProject=Qualifiers.PROJECT.equals(component.qualifier());
  Locale locale=userSession.locale();
  String componentKey=encodeComponentKey(component);
  List<ConfigPage> configPages=Lists.newArrayList();
  configPages.add(new ConfigPage(isAdmin && componentTypeHasProperty(component,PROPERTY_CONFIGURABLE),String.format("/project/settings?id=%s",componentKey),i18n.message(locale,"project_settings.page",null)));
  configPages.add(new ConfigPage(isProject,String.format("/project/profile?id=%s",componentKey),i18n.message(locale,"project_quality_profiles.page",null)));
  configPages.add(new ConfigPage(isProject,String.format("/project/qualitygate?id=%s",componentKey),i18n.message(locale,"project_quality_gate.page",null)));
  configPages.add(new ConfigPage(isAdmin,String.format("/manual_measures/index?id=%s",componentKey),i18n.message(locale,"manual_measures.page",null)));
  configPages.add(new ConfigPage(isAdmin && isProject,String.format("/action_plans/index?id=%s",componentKey),i18n.message(locale,"action_plans.page",null)));
  configPages.add(new ConfigPage(isAdmin && isProject,String.format("/project/links?id=%s",componentKey),i18n.message(locale,"project_links.page",null)));
  configPages.add(new ConfigPage(componentTypeHasProperty(component,PROPERTY_HAS_ROLE_POLICY),String.format("/project_roles/index?id=%s",componentKey),i18n.message(locale,"permissions.page",null)));
  configPages.add(new ConfigPage(componentTypeHasProperty(component,PROPERTY_MODIFIABLE_HISTORY),String.format("/project/history?id=%s",componentKey),i18n.message(locale,"project_history.page",null)));
  configPages.add(new ConfigPage(componentTypeHasProperty(component,PROPERTY_UPDATABLE_KEY),String.format("/project/key?id=%s",componentKey),i18n.message(locale,"update_key.page",null)));
  configPages.add(new ConfigPage(componentTypeHasProperty(component,PROPERTY_DELETABLE),String.format("/project/deletion?id=%s",componentKey),i18n.message(locale,"deletion.page",null)));
  return Collections2.filter(configPages,new Predicate<ConfigPage>(){
    @Override public boolean apply(    ConfigPage input){
      return input.visible;
    }
  }
);
}
