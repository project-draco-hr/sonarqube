{
  if (file.lines() == 0) {
    return null;
  }
  List<String> lines;
  try {
    lines=FileUtils.readLines(file.file(),file.encoding());
  }
 catch (  IOException e) {
    throw new IllegalStateException("Unable to read file",e);
  }
  if (lines.size() == file.lines() - 1) {
    lines.add("");
  }
  Map<Integer,String> authorsByLine=getLineMetric(file,CoreMetrics.SCM_AUTHORS_BY_LINE_KEY);
  Map<Integer,String> revisionsByLine=getLineMetric(file,CoreMetrics.SCM_REVISIONS_BY_LINE_KEY);
  Map<Integer,String> datesByLine=getLineMetric(file,CoreMetrics.SCM_LAST_COMMIT_DATETIMES_BY_LINE_KEY);
  Map<Integer,String> utHitsByLine=getLineMetric(file,CoreMetrics.COVERAGE_LINE_HITS_DATA_KEY);
  Map<Integer,String> utCondByLine=getLineMetric(file,CoreMetrics.CONDITIONS_BY_LINE_KEY);
  Map<Integer,String> utCoveredCondByLine=getLineMetric(file,CoreMetrics.COVERED_CONDITIONS_BY_LINE_KEY);
  Map<Integer,String> itHitsByLine=getLineMetric(file,CoreMetrics.IT_COVERAGE_LINE_HITS_DATA_KEY);
  Map<Integer,String> itCondByLine=getLineMetric(file,CoreMetrics.IT_CONDITIONS_BY_LINE_KEY);
  Map<Integer,String> itCoveredCondByLine=getLineMetric(file,CoreMetrics.IT_COVERED_CONDITIONS_BY_LINE_KEY);
  Map<Integer,String> overallHitsByLine=getLineMetric(file,CoreMetrics.OVERALL_COVERAGE_LINE_HITS_DATA_KEY);
  Map<Integer,String> overallCondByLine=getLineMetric(file,CoreMetrics.OVERALL_CONDITIONS_BY_LINE_KEY);
  Map<Integer,String> overallCoveredCondByLine=getLineMetric(file,CoreMetrics.OVERALL_COVERED_CONDITIONS_BY_LINE_KEY);
  SyntaxHighlightingData highlighting=loadHighlighting(file);
  String[] highlightingPerLine=computeHighlightingPerLine(file,highlighting);
  String[] symbolReferencesPerLine=computeSymbolReferencesPerLine(file,loadSymbolReferences(file));
  String[] duplicationsPerLine=computeDuplicationsPerLine(file,duplicationCache.byComponent(file.key()));
  ByteArrayOutputStream output=new ByteArrayOutputStream();
  CsvWriter csv=CsvWriter.of(new OutputStreamWriter(output,UTF_8));
  for (int lineIdx=1; lineIdx <= file.lines(); lineIdx++) {
    csv.values(revisionsByLine.get(lineIdx),authorsByLine.get(lineIdx),datesByLine.get(lineIdx),utHitsByLine.get(lineIdx),utCondByLine.get(lineIdx),utCoveredCondByLine.get(lineIdx),itHitsByLine.get(lineIdx),itCondByLine.get(lineIdx),itCoveredCondByLine.get(lineIdx),overallHitsByLine.get(lineIdx),overallCondByLine.get(lineIdx),overallCoveredCondByLine.get(lineIdx),highlightingPerLine[lineIdx - 1],symbolReferencesPerLine[lineIdx - 1],duplicationsPerLine[lineIdx - 1],CharMatcher.anyOf(BOM).removeFrom(lines.get(lineIdx - 1)));
  }
  csv.close();
  return StringUtils.defaultIfEmpty(new String(output.toByteArray(),UTF_8),null);
}
