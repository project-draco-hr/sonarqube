{
  String fileUuid=resourceCache.get(inputFile).resource().getUuid();
  byte[] data=computeData(inputFile);
  String dataHash=DigestUtils.md5Hex(data);
  FileSourceDto previousDto=previousDtosByUuid.get(fileUuid);
  if (previousDto == null) {
    FileSourceDto dto=new FileSourceDto().setProjectUuid(projectTree.getRootProject().getUuid()).setFileUuid(fileUuid).setBinaryData(data).setDataHash(dataHash).setSrcHash(inputFile.hash()).setLineHashes(lineHashesAsMd5Hex(inputFile)).setCreatedAt(system2.now()).setUpdatedAt(0L);
    mapper.insert(dto);
    session.commit();
  }
 else {
    boolean binaryDataUpdated=!dataHash.equals(previousDto.getDataHash());
    boolean srcHashUpdated=!inputFile.hash().equals(previousDto.getSrcHash());
    if (binaryDataUpdated || srcHashUpdated) {
      previousDto.setBinaryData(data).setDataHash(dataHash).setSrcHash(inputFile.hash()).setLineHashes(lineHashesAsMd5Hex(inputFile));
      if (binaryDataUpdated) {
        previousDto.setUpdatedAt(0L);
      }
      mapper.update(previousDto);
      session.commit();
    }
  }
}
