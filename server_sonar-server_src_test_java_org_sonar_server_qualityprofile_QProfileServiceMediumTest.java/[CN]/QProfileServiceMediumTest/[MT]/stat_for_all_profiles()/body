{
  userSessionRule.login().setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN);
  service.activate(XOO_P1_KEY,new RuleActivation(RuleTesting.XOO_X1).setSeverity("MINOR"));
  service.activate(XOO_P2_KEY,new RuleActivation(RuleTesting.XOO_X1).setSeverity("BLOCKER"));
  dbSession.clearCache();
  activeRuleIndexer.index();
  Map<String,Multimap<String,FacetValue>> stats=loader.getAllProfileStats();
  assertThat(stats.size()).isEqualTo(2);
  assertThat(stats.get(XOO_P1_KEY).size()).isEqualTo(3);
  assertThat(stats.get(XOO_P1_KEY).get(RuleIndexDefinition.FIELD_ACTIVE_RULE_SEVERITY).size()).isEqualTo(1);
  assertThat(stats.get(XOO_P1_KEY).get(RuleIndexDefinition.FIELD_ACTIVE_RULE_INHERITANCE).size()).isEqualTo(1);
  assertThat(stats.get(XOO_P1_KEY).get("countActiveRules").size()).isEqualTo(1);
}
