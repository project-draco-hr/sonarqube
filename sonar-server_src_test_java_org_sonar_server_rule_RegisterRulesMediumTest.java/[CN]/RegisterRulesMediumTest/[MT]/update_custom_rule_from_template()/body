{
  RuleIndex index=tester.get(RuleIndex.class);
  Rule templateRule=index.getByKey(RuleKey.of("xoo","template1"));
  RuleKey customRuleKey=tester.get(RuleCreator.class).create(NewRule.createForCustomRule("CUSTOM_RULE",templateRule.key()).setName("My custom").setHtmlDescription("Some description").setSeverity(Severity.MAJOR).setStatus(RuleStatus.READY).setParameters(ImmutableMap.of("format","txt")));
  RuleDto customRuleDto=db.ruleDao().getByKey(dbSession,customRuleKey);
  db.ruleDao().update(dbSession,customRuleDto.setLanguage("other language").setConfigKey("other config key").setDefaultSubCharacteristicId(45).setDefaultRemediationFunction("LINEAR_OFFSET").setDefaultRemediationCoefficient("1h").setDefaultRemediationOffset("5min").setEffortToFixDescription("effort to fix desc"));
  dbSession.commit();
  dbSession.clearCache();
  tester.get(Platform.class).executeStartupTasks();
  Rule customRule=index.getByKey(customRuleKey);
  assertThat(customRule.language()).isEqualTo("xoo");
  assertThat(customRule.internalKey()).isNull();
  assertThat(customRule.debtSubCharacteristicKey()).isNull();
  assertThat(customRule.debtRemediationFunction()).isNull();
}
