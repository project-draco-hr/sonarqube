{
  RuleIndex index=tester.get(RuleIndex.class);
  Rule templateRule=index.getByKey(RuleKey.of("xoo","template1"));
  RuleKey customRuleKey=tester.get(RuleCreator.class).create(new NewRule().setRuleKey("CUSTOM_RULE").setTemplateKey(templateRule.key()).setName("My custom").setHtmlDescription("Some description").setSeverity(Severity.MAJOR).setStatus(RuleStatus.READY).setParameters(ImmutableMap.of("format","txt")));
  dbSession.commit();
  dbSession.clearCache();
  RuleDto customRuleDto=db.ruleDao().getByKey(dbSession,customRuleKey);
  RuleParamDto customRuleParamDto=db.ruleDao().findRuleParamsByRuleKey(dbSession,customRuleKey).get(0);
  db.ruleDao().removeRuleParam(dbSession,customRuleDto,customRuleParamDto);
  db.ruleDao().addRuleParam(dbSession,customRuleDto,customRuleParamDto.setName("format2"));
  dbSession.commit();
  dbSession.clearCache();
  Rule customRule=index.getByKey(customRuleKey);
  assertThat(customRule.params()).hasSize(1);
  assertThat(customRule.params().get(0).key()).isEqualTo("format2");
  tester.get(Platform.class).executeStartupTasks();
  Rule customRuleReloaded=index.getByKey(customRuleKey);
  assertThat(customRuleReloaded.params().get(0).key()).isEqualTo("format2");
}
