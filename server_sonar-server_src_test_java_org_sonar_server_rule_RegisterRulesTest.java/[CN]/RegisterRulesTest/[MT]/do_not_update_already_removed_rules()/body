{
  execute(new FakeRepositoryV1());
  assertThat(dbClient.ruleDao().selectAll(dbTester.getSession())).hasSize(2);
  RuleDto rule2=dbClient.ruleDao().getByKey(dbTester.getSession(),RuleKey.of("fake","rule2"));
  assertThat(rule2.getStatus()).isEqualTo(RuleStatus.READY);
  when(system.now()).thenReturn(DATE2.getTime());
  execute(new FakeRepositoryV2());
  dbClient.ruleDao().update(dbTester.getSession(),dbClient.ruleDao().getByKey(dbTester.getSession(),RuleKey.of("fake","rule1")));
  dbTester.getSession().commit();
  rule2=dbClient.ruleDao().getNullableByKey(dbTester.getSession(),RuleKey.of("fake","rule2"));
  assertThat(rule2.getStatus()).isEqualTo(RuleStatus.REMOVED);
  when(system.now()).thenReturn(DATE3.getTime());
  execute(new FakeRepositoryV2());
  dbTester.getSession().commit();
  rule2=dbClient.ruleDao().getNullableByKey(dbTester.getSession(),RuleKey.of("fake","rule2"));
  assertThat(rule2.getStatus()).isEqualTo(RuleStatus.REMOVED);
  assertThat(rule2.getUpdatedAt()).isEqualTo(DATE2);
}
