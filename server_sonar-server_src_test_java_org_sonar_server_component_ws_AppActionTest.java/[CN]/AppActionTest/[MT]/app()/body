{
  userSessionRule.login("john").addComponentPermission(UserRole.USER,SUB_PROJECT_KEY,COMPONENT_KEY);
  ComponentDto project=newProject();
  ComponentDto file=ComponentTesting.newFileDto(project).setId(10L).setKey(COMPONENT_KEY).setUuid(COMPONENT_UUID).setName("Plugin.java").setProjectUuid("THE_PROJECT").setLongName("src/main/java/org/sonar/api/Plugin.java").setPath("src/main/java/org/sonar/api/Plugin.java").setRootUuid("uuid_5");
  when(componentDao.selectByUuid(session,COMPONENT_UUID)).thenReturn(Optional.of(file));
  when(componentDao.selectOrFailByUuid(session,"uuid_5")).thenReturn(new ComponentDto().setUuid("uuid_5").setLongName("SonarQube :: Plugin API").setKey(SUB_PROJECT_KEY));
  when(componentDao.selectOrFailByUuid(session,project.uuid())).thenReturn(project);
  when(propertiesDao.selectByQuery(any(PropertyQuery.class),eq(session))).thenReturn(newArrayList(new PropertyDto()));
  WsTester.TestRequest request=tester.newGetRequest("api/components","app").setParam("uuid",COMPONENT_UUID);
  request.execute().assertJson(getClass(),"app.json");
}
