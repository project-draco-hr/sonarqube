{
  Property function=properties.function();
  if (function != null) {
    Property factorProperty=properties.factor();
    String factor=factorProperty != null ? factorProperty.toDuration() : null;
    Property offsetProperty=properties.offset();
    String offset=offsetProperty != null ? offsetProperty.toDuration() : null;
    String functionKey=function.getTextValue();
    if ("linear_threshold".equals(functionKey) && factor != null) {
      LOG.warn(String.format("Linear with threshold function is no longer used, remediation function of '%s' is replaced by linear.",ruleKey));
      return new RuleDebt().setRuleKey(ruleKey).setFunction(DebtRemediationFunction.createLinear(factor));
    }
 else     if ("constant_resource".equals(functionKey)) {
      LOG.warn(String.format("Constant/file function is no longer used, technical debt definitions on '%s' are ignored.",ruleKey));
    }
 else     if (DebtRemediationFunction.Type.CONSTANT_ISSUE.name().toLowerCase().equals(functionKey) && factor != null && offset == null) {
      return new RuleDebt().setRuleKey(ruleKey).setFunction(DebtRemediationFunction.createConstantPerIssue(factor));
    }
 else {
      return new RuleDebt().setRuleKey(ruleKey).setFunction(DebtRemediationFunction.create(DebtRemediationFunction.Type.valueOf(functionKey.toUpperCase()),factor,offset));
    }
  }
  return null;
}
