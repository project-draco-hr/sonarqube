{
  when(dao.selectById(10,session)).thenReturn(new CharacteristicDto().setId(10).setKey("MEMORY_EFFICIENCY").setOrder(2));
  when(dao.selectEnabledRootCharacteristics(session)).thenReturn(newArrayList(new CharacteristicDto().setId(2).setKey("PORTABILITY").setOrder(1),new CharacteristicDto().setId(10).setKey("MEMORY_EFFICIENCY").setOrder(2)));
  DebtCharacteristic result=service.moveUp(10);
  verify(dao,times(2)).update(characteristicCaptor.capture(),eq(session));
  assertThat(result.order()).isEqualTo(1);
  assertThat(characteristicCaptor.getAllValues().get(0).getOrder()).isEqualTo(2);
  assertThat(characteristicCaptor.getAllValues().get(0).getUpdatedAt()).isEqualTo(now);
  assertThat(characteristicCaptor.getAllValues().get(1).getOrder()).isEqualTo(1);
  assertThat(characteristicCaptor.getAllValues().get(1).getUpdatedAt()).isEqualTo(now);
}
