{
  DbSession batchSession=mock(DbSession.class);
  when(dbClient.openSession(true)).thenReturn(batchSession);
  when(ruleDao.selectRulesByDebtSubCharacteristicId(batchSession,2)).thenReturn(newArrayList(new RuleDto().setSubCharacteristicId(10).setRemediationFunction("LINEAR_OFFSET").setRemediationCoefficient("2h").setRemediationOffset("5min").setDefaultSubCharacteristicId(2).setDefaultRemediationFunction("LINEAR_OFFSET").setDefaultRemediationCoefficient("4h").setDefaultRemediationOffset("15min")));
  when(dao.selectById(batchSession,2)).thenReturn(subCharacteristicDto);
  service.delete(2);
  verify(ruleDao).update(eq(batchSession),ruleCaptor.capture());
  RuleDto ruleDto=ruleCaptor.getValue();
  assertThat(ruleDto.getDefaultSubCharacteristicId()).isNull();
  assertThat(ruleDto.getDefaultRemediationFunction()).isNull();
  assertThat(ruleDto.getDefaultRemediationCoefficient()).isNull();
  assertThat(ruleDto.getDefaultRemediationOffset()).isNull();
  assertThat(ruleDto.getSubCharacteristicId()).isEqualTo(10);
  assertThat(ruleDto.getRemediationFunction()).isEqualTo("LINEAR_OFFSET");
  assertThat(ruleDto.getRemediationCoefficient()).isEqualTo("2h");
  assertThat(ruleDto.getRemediationOffset()).isEqualTo("5min");
  verify(dao).update(characteristicCaptor.capture(),eq(batchSession));
  CharacteristicDto characteristicDto=characteristicCaptor.getValue();
  assertThat(characteristicDto.getId()).isEqualTo(2);
  assertThat(characteristicDto.isEnabled()).isFalse();
  assertThat(characteristicDto.getUpdatedAt()).isEqualTo(now);
}
