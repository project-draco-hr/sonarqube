{
  grantAccess();
  when(userSession.isLoggedIn()).thenReturn(true);
  when(authorizationDao.isAuthorizedComponentId(anyLong(),anyInt(),anyString())).thenReturn(false);
  try {
    issueService.checkAuthorization(userSession,issue,UserRole.USER);
    fail();
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("User does not have the required role");
  }
}
