{
  double currentTechnicalDebtValue=technicalDebtConverter.toDays(currentTechnicalDebt);
  Collections.sort(technicalDebtChangelog,new Comparator<FieldDiffs>(){
    @Override public int compare(    FieldDiffs fieldDiffs,    FieldDiffs fieldDiffs2){
      return fieldDiffs.createdAt().compareTo(fieldDiffs2.createdAt());
    }
  }
);
  for (  FieldDiffs fieldDiffs : technicalDebtChangelog) {
    if (isAfter(fieldDiffs.createdAt(),periodDate)) {
      WorkDayDuration pastTechnicalDebt=newValue(IssueUpdater.TECHNICAL_DEBT,fieldDiffs);
      double pastTechnicalDebtValue=technicalDebtConverter.toDays(pastTechnicalDebt);
      return currentTechnicalDebtValue - pastTechnicalDebtValue;
    }
  }
  return 0d;
}
