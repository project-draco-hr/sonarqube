{
  initLogging();
  ImmutableSettings.Builder esSettings=ImmutableSettings.settingsBuilder().put("node.name","sonarqube-" + System.currentTimeMillis()).put("node.data",true).put("node.local",true).put("cluster.name","sonarqube").put("index.number_of_shards","1").put("index.number_of_replicas","0").put("index.mapper.dynamic",false).put("index.analysis.analyzer.sortable.type","custom").put("index.analysis.analyzer.sortable.tokenizer","keyword").put("index.analysis.analyzer.sortable.filter","lowercase").put("index.analysis.analyzer.rule_name.type","custom").put("index.analysis.analyzer.rule_name.tokenizer","standard").putArray("index.analysis.analyzer.rule_name.filter","lowercase","rule_name_ngram").put("index.analysis.filter.rule_name_ngram.type","nGram").put("index.analysis.filter.rule_name_ngram.min_gram",3).put("index.analysis.filter.rule_name_ngram.max_gram",5).putArray("index.analysis.filter.rule_name_ngram.token_chars","letter","digit");
  initDirs(esSettings);
  initRestConsole(esSettings);
  initNetwork(esSettings);
  node=NodeBuilder.nodeBuilder().settings(esSettings).node();
  node.start();
  addIndexTemplates();
  if (node.client().admin().cluster().prepareHealth().setWaitForYellowStatus().setTimeout(healthTimeout).execute().actionGet().getStatus() == ClusterHealthStatus.RED) {
    throw new IllegalStateException(String.format("Elasticsearch index is corrupt, please delete directory '%s/%s' and relaunch the SonarQube server.",fileSystem.getHomeDir().getAbsolutePath(),DATA_DIR));
  }
  LOG.info("Elasticsearch started");
}
