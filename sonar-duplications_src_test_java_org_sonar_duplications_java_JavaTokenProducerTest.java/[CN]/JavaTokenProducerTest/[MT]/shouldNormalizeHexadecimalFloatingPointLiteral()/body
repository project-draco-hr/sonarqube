{
  assertThat(chunk("0xAF."),isNumericLiteral());
  assertThat(chunk("0XAF.P1"),isNumericLiteral());
  assertThat(chunk("0xAF.p+1"),isNumericLiteral());
  assertThat(chunk("0XAF.p-1"),isNumericLiteral());
  assertThat(chunk("0xAF.f"),isNumericLiteral());
  assertThat(chunk("0XAF.BC"),isNumericLiteral());
  assertThat(chunk("0xAF.BCP1"),isNumericLiteral());
  assertThat(chunk("0XAF.BCp+1"),isNumericLiteral());
  assertThat(chunk("0xAF.BCP-1"),isNumericLiteral());
  assertThat(chunk("0xAF.BCf"),isNumericLiteral());
  assertThat(chunk("0xAF.BCp1F"),isNumericLiteral());
  assertThat(chunk("0XAF.BCP+1d"),isNumericLiteral());
  assertThat(chunk("0XAF.BCp-1D"),isNumericLiteral());
  assertThat(chunk("0xAFp1"),isNumericLiteral());
  assertThat(chunk("0XAFp+1"),isNumericLiteral());
  assertThat(chunk("0xAFp-1"),isNumericLiteral());
  assertThat(chunk("0XAFp1f"),isNumericLiteral());
  assertThat(chunk("0xAFp+1d"),isNumericLiteral());
  assertThat(chunk("0XAFp-1D"),isNumericLiteral());
}
