{
  org.sonarqube.ws.Rules.SearchResponse result=new org.sonarqube.ws.Rules.SearchResponse(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.total_=total_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.p_=p_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.ps_=ps_;
  if (rulesBuilder_ == null) {
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      rules_=java.util.Collections.unmodifiableList(rules_);
      bitField0_=(bitField0_ & ~0x00000008);
    }
    result.rules_=rules_;
  }
 else {
    result.rules_=rulesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000008;
  }
  if (activesBuilder_ == null) {
    result.actives_=actives_;
  }
 else {
    result.actives_=activesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000010;
  }
  if (qProfilesBuilder_ == null) {
    result.qProfiles_=qProfiles_;
  }
 else {
    result.qProfiles_=qProfilesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000020;
  }
  if (facetsBuilder_ == null) {
    result.facets_=facets_;
  }
 else {
    result.facets_=facetsBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
