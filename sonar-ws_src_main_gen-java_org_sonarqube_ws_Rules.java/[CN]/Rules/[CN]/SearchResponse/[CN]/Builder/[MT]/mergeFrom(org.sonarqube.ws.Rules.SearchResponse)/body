{
  if (other == org.sonarqube.ws.Rules.SearchResponse.getDefaultInstance())   return this;
  if (other.hasTotal()) {
    setTotal(other.getTotal());
  }
  if (other.hasP()) {
    setP(other.getP());
  }
  if (other.hasPs()) {
    setPs(other.getPs());
  }
  if (rulesBuilder_ == null) {
    if (!other.rules_.isEmpty()) {
      if (rules_.isEmpty()) {
        rules_=other.rules_;
        bitField0_=(bitField0_ & ~0x00000008);
      }
 else {
        ensureRulesIsMutable();
        rules_.addAll(other.rules_);
      }
      onChanged();
    }
  }
 else {
    if (!other.rules_.isEmpty()) {
      if (rulesBuilder_.isEmpty()) {
        rulesBuilder_.dispose();
        rulesBuilder_=null;
        rules_=other.rules_;
        bitField0_=(bitField0_ & ~0x00000008);
        rulesBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getRulesFieldBuilder() : null;
      }
 else {
        rulesBuilder_.addAllMessages(other.rules_);
      }
    }
  }
  if (other.hasActives()) {
    mergeActives(other.getActives());
  }
  if (other.hasQProfiles()) {
    mergeQProfiles(other.getQProfiles());
  }
  if (other.hasFacets()) {
    mergeFacets(other.getFacets());
  }
  this.mergeUnknownFields(other.unknownFields);
  onChanged();
  return this;
}
