{
  org.sonarqube.ws.Rules.Active result=new org.sonarqube.ws.Rules.Active(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.qProfile_=qProfile_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.inherit_=inherit_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.severity_=severity_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.parent_=parent_;
  if (paramsBuilder_ == null) {
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      params_=java.util.Collections.unmodifiableList(params_);
      bitField0_=(bitField0_ & ~0x00000010);
    }
    result.params_=params_;
  }
 else {
    result.params_=paramsBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
