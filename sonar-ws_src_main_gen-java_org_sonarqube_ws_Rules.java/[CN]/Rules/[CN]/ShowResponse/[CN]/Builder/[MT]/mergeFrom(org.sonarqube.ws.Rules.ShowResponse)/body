{
  if (other == org.sonarqube.ws.Rules.ShowResponse.getDefaultInstance())   return this;
  if (other.hasRule()) {
    mergeRule(other.getRule());
  }
  if (activesBuilder_ == null) {
    if (!other.actives_.isEmpty()) {
      if (actives_.isEmpty()) {
        actives_=other.actives_;
        bitField0_=(bitField0_ & ~0x00000002);
      }
 else {
        ensureActivesIsMutable();
        actives_.addAll(other.actives_);
      }
      onChanged();
    }
  }
 else {
    if (!other.actives_.isEmpty()) {
      if (activesBuilder_.isEmpty()) {
        activesBuilder_.dispose();
        activesBuilder_=null;
        actives_=other.actives_;
        bitField0_=(bitField0_ & ~0x00000002);
        activesBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getActivesFieldBuilder() : null;
      }
 else {
        activesBuilder_.addAllMessages(other.actives_);
      }
    }
  }
  this.mergeUnknownFields(other.unknownFields);
  onChanged();
  return this;
}
