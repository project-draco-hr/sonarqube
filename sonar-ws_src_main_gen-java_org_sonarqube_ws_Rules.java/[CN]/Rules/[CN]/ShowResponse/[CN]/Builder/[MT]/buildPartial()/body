{
  org.sonarqube.ws.Rules.ShowResponse result=new org.sonarqube.ws.Rules.ShowResponse(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  if (ruleBuilder_ == null) {
    result.rule_=rule_;
  }
 else {
    result.rule_=ruleBuilder_.build();
  }
  if (activesBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      actives_=java.util.Collections.unmodifiableList(actives_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.actives_=actives_;
  }
 else {
    result.actives_=activesBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
