{
  QueryContext queryContext=new QueryContext().setPage(1,0);
  SearchRequestBuilder esSearch=getClient().prepareSearch(this.getIndexName()).setTypes(this.getIndexType()).setIndices(this.getIndexName());
  QueryBuilder esQuery=QueryBuilders.matchAllQuery();
  BoolFilterBuilder esFilter=getFilter(query,queryContext);
  if (esFilter.hasClauses()) {
    esSearch.setQuery(QueryBuilders.filteredQuery(esQuery,esFilter));
  }
 else {
    esSearch.setQuery(esQuery);
  }
  esSearch.addAggregation(AggregationBuilders.terms(IssueNormalizer.IssueField.ASSIGNEE.field()).size(Integer.MAX_VALUE).field(IssueNormalizer.IssueField.ASSIGNEE.field()));
  esSearch.addAggregation(AggregationBuilders.missing("notAssigned").field(IssueNormalizer.IssueField.ASSIGNEE.field()));
  SearchResponse response=getClient().execute(esSearch);
  Terms aggregation=(Terms)response.getAggregations().getAsMap().get(IssueNormalizer.IssueField.ASSIGNEE.field());
  List<FacetValue> facetValues=newArrayList();
  for (  Terms.Bucket value : aggregation.getBuckets()) {
    facetValues.add(new FacetValue(value.getKey(),(int)value.getDocCount()));
  }
  facetValues.add(new FacetValue("_notAssigned_",(int)((InternalMissing)response.getAggregations().get("notAssigned")).getDocCount()));
  return facetValues;
}
