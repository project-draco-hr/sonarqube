{
  Date now=system.newDate();
  SimpleDateFormat tzFormat=new SimpleDateFormat("XX");
  tzFormat.setTimeZone(TimeZone.getDefault());
  String timeZoneString=tzFormat.format(now);
  DateHistogram.Interval bucketSize=DateHistogram.Interval.YEAR;
  Date createdAfter=query.createdAfter();
  long startTime=createdAfter == null ? getMinCreatedAt(filters,esQuery) : createdAfter.getTime();
  Date createdBefore=query.createdBefore();
  long endTime=createdBefore == null ? now.getTime() : createdBefore.getTime();
  Duration timeSpan=new Duration(startTime,endTime);
  if (timeSpan.isShorterThan(TWENTY_DAYS)) {
    bucketSize=DateHistogram.Interval.DAY;
  }
 else   if (timeSpan.isShorterThan(TWENTY_WEEKS)) {
    bucketSize=DateHistogram.Interval.WEEK;
  }
 else   if (timeSpan.isShorterThan(TWENTY_MONTHS)) {
    bucketSize=DateHistogram.Interval.MONTH;
  }
  return AggregationBuilders.dateHistogram(IssueFilterParameters.CREATED_AT).field(IssueIndexDefinition.FIELD_ISSUE_FUNC_CREATED_AT).interval(bucketSize).minDocCount(0L).format(DateUtils.DATETIME_FORMAT).preZone(timeZoneString).postZone(timeZoneString).extendedBounds(startTime,endTime);
}
