{
  DirectedGraph<String,StringEdge> dcg=DirectedGraph.createStringDirectedGraph();
  dcg.addEdge("A","B",7).addEdge("B","C",3).addEdge("C","A",2);
  dcg.addEdge("D","E",3).addEdge("E","D",5);
  dcg.addEdge("F","G",1).addEdge("G","H",4).addEdge("H","F",7);
  CycleDetector<String> cycleDetector=new CycleDetector<String>(dcg);
  cycleDetector.detectCycles();
  MinimumFeedbackEdgeSetSolver solver=new MinimumFeedbackEdgeSetSolver(cycleDetector.getCycles());
  Set<Edge> feedbackEdges=solver.getEdges();
  assertThat(feedbackEdges.size(),is(3));
  assertTrue(feedbackEdges.contains(dcg.getEdge("C","A")));
  assertTrue(feedbackEdges.contains(dcg.getEdge("D","E")));
  assertTrue(feedbackEdges.contains(dcg.getEdge("F","G")));
}
