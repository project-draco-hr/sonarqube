{
  List<Issues.Component> result=new ArrayList<>();
  Collection<ComponentDto> components=data.getComponents();
  if (components != null) {
    for (    ComponentDto dto : components) {
      String uuid=dto.uuid();
      Issues.Component.Builder builder=Issues.Component.newBuilder().setId(dto.getId()).setKey(dto.key()).setUuid(uuid).setQualifier(dto.qualifier()).setName(nullToEmpty(dto.name())).setLongName(nullToEmpty(dto.longName())).setEnabled(dto.isEnabled());
      String path=dto.path();
      if (!Strings.isNullOrEmpty(path)) {
        builder.setPath(path);
      }
      if (!uuid.equals(dto.getRootUuid())) {
        ComponentDto project=data.getComponentByUuid(dto.projectUuid());
        builder.setProjectId(project.getId());
        ComponentDto subProject=data.getComponentByUuid(dto.getRootUuid());
        builder.setSubProjectId(subProject.getId());
      }
      result.add(builder.build());
    }
  }
  return result;
}
