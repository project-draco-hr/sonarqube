{
  addDuplicatedBlock(FILE_1_REF,2);
  addDuplicatedBlock(FILE_2_REF,3);
  addRawMeasure(FILE_1_REF,COMMENT_LINES_KEY,2);
  addRawMeasure(FILE_2_REF,COMMENT_LINES_KEY,10);
  addRawMeasure(DIRECTORY_REF,COMMENT_LINES_KEY,12);
  addRawMeasure(SUB_MODULE_1_REF,COMMENT_LINES_KEY,12);
  addRawMeasure(MODULE_REF,COMMENT_LINES_KEY,12);
  addRawMeasure(ROOT_REF,COMMENT_LINES_KEY,12);
  addRawMeasure(FILE_1_REF,NCLOC_KEY,8);
  addRawMeasure(FILE_2_REF,NCLOC_KEY,30);
  addRawMeasure(DIRECTORY_REF,NCLOC_KEY,38);
  addRawMeasure(SUB_MODULE_1_REF,NCLOC_KEY,38);
  addRawMeasure(MODULE_REF,NCLOC_KEY,38);
  addRawMeasure(ROOT_REF,NCLOC_KEY,38);
  underTest.execute();
  assertRawMeasureValue(FILE_1_REF,DUPLICATED_LINES_DENSITY_KEY,20d);
  assertRawMeasureValue(FILE_2_REF,DUPLICATED_LINES_DENSITY_KEY,7.5d);
  assertNoRawMeasure(FILE_3_REF,DUPLICATED_LINES_DENSITY_KEY);
  assertNoRawMeasure(FILE_4_REF,DUPLICATED_LINES_DENSITY_KEY);
  assertRawMeasureValue(DIRECTORY_REF,DUPLICATED_LINES_DENSITY_KEY,10d);
  assertRawMeasureValue(SUB_MODULE_1_REF,DUPLICATED_LINES_DENSITY_KEY,10d);
  assertNoRawMeasure(SUB_MODULE_2_REF,DUPLICATED_LINES_DENSITY_KEY);
  assertRawMeasureValue(MODULE_REF,DUPLICATED_LINES_DENSITY_KEY,10d);
  assertRawMeasureValue(ROOT_REF,DUPLICATED_LINES_DENSITY_KEY,10d);
}
