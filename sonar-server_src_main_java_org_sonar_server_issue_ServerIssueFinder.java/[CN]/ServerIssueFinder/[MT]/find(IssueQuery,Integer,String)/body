{
  LOG.debug("IssueQuery : {}",query);
  SqlSession sqlSession=myBatis.openSession();
  try {
    List<IssueDto> dtos=issueDao.select(query,sqlSession);
    Set<Integer> componentIds=Sets.newLinkedHashSet();
    for (    IssueDto issueDto : dtos) {
      componentIds.add(issueDto.getResourceId());
    }
    Set<Integer> authorizedComponentIds=authorizationDao.keepAuthorizedComponentIds(componentIds,currentUserId,role,sqlSession);
    Set<Integer> ruleIds=Sets.newLinkedHashSet();
    List<Issue> issues=Lists.newArrayList();
    for (    IssueDto dto : dtos) {
      if (authorizedComponentIds.contains(dto.getResourceId())) {
        issues.add(dto.toDefaultIssue());
        ruleIds.add(dto.getRuleId());
      }
    }
    if (!issues.isEmpty()) {
      return new DefaultResults(issues,getRulesByIssue(issues,ruleIds),getComponentsByIssue(issues,componentIds));
    }
 else {
      return new DefaultResults(issues);
    }
  }
  finally {
    MyBatis.closeQuietly(sqlSession);
  }
}
