{
  final String language="xoo";
  ComponentDto project=dbClient.componentDao().insert(session,ComponentTesting.newProjectDto("abcd").setKey("polop").setName("Polop").setLanguage(language));
  dbClient.snapshotDao().insert(session,new SnapshotDto().setLast(true).setQualifier(project.qualifier()).setResourceId(project.getId()).setRootProjectId(project.getId()).setScope(project.scope()));
  session.commit();
  MockUserSession.set().addProjectUuidPermissions(UserRole.USER,"abcd");
@NavigationSection(NavigationSection.RESOURCE) @ResourceScope(Scopes.PROJECT) @ResourceQualifier(Qualifiers.PROJECT) @ResourceLanguage(language) class FirstPage implements Page {
    @Override public String getTitle(){
      return "First Page";
    }
    @Override public String getId(){
      return "first_page";
    }
  }
  Page page1=new FirstPage();
@NavigationSection(NavigationSection.RESOURCE) @ResourceScope(Scopes.PROJECT) @ResourceQualifier(Qualifiers.PROJECT) @ResourceLanguage(language) class SecondPage implements Page {
    @Override public String getTitle(){
      return "Second Page";
    }
    @Override public String getId(){
      return "/second/page";
    }
  }
  Page page2=new SecondPage();
  wsTester=new WsTester(new NavigationWs(new ComponentNavigationAction(dbClient,activeDashboardDao,new Views(new Page[]{page1,page2}),i18n,projectConfigurationPages)));
  wsTester.newGetRequest("api/navigation","component").setParam("componentKey","polop").execute().assertJson(getClass(),"with_extensions.json");
}
