{
  MeasuresDistribution distribution=new MeasuresDistribution(squid.search(new QueryByParent(squidPackage),new QueryByType(SourceClass.class),new QueryByMeasure(metric,QueryByMeasure.Operator.GREATER_THAN_EQUALS,0)));
  Map<Integer,Integer> distrib=distribution.distributeAccordingTo(metric,limits);
  StringBuilder distribString=new StringBuilder(32);
  for (  Map.Entry<Integer,Integer> entry : distrib.entrySet()) {
    distribString.append(entry.getKey()).append("=").append(entry.getValue().toString()).append(";");
  }
  distribString.setLength(distribString.length() - 1);
  return distribString.toString();
}
