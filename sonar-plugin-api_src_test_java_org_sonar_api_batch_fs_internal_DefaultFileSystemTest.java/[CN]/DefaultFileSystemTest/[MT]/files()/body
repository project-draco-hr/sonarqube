{
  DefaultFileSystem fs=new DefaultFileSystem();
  assertThat(fs.inputFiles(fs.predicates().all())).isEmpty();
  fs.add(new DefaultInputFile("foo","src/Foo.php").setLanguage("php").setFile(temp.newFile()));
  fs.add(new DefaultInputFile("foo","src/Bar.java").setLanguage("java").setFile(temp.newFile()));
  fs.add(new DefaultInputFile("foo","src/Baz.java").setLanguage("java").setFile(temp.newFile()));
  fs.add(new DefaultInputFile("foo","src/readme.txt").setFile(temp.newFile()));
  assertThat(fs.inputFile(fs.predicates().hasRelativePath("src/Bar.java"))).isNotNull();
  assertThat(fs.inputFile(fs.predicates().hasRelativePath("does/not/exist"))).isNull();
  assertThat(fs.files(fs.predicates().all())).hasSize(4);
  assertThat(fs.files(fs.predicates().hasLanguage("java"))).hasSize(2);
  assertThat(fs.files(fs.predicates().hasLanguage("cobol"))).isEmpty();
  assertThat(fs.hasFiles(fs.predicates().all())).isTrue();
  assertThat(fs.hasFiles(fs.predicates().hasLanguage("java"))).isTrue();
  assertThat(fs.hasFiles(fs.predicates().hasLanguage("cobol"))).isFalse();
  assertThat(fs.inputFiles(fs.predicates().all())).hasSize(4);
  assertThat(fs.inputFiles(fs.predicates().hasLanguage("php"))).hasSize(1);
  assertThat(fs.inputFiles(fs.predicates().hasLanguage("java"))).hasSize(2);
  assertThat(fs.inputFiles(fs.predicates().hasLanguage("cobol"))).isEmpty();
  assertThat(fs.languages()).containsOnly("java","php");
}
