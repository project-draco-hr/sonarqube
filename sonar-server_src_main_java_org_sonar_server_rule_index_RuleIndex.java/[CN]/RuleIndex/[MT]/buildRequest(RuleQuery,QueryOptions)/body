{
  SearchRequestBuilder esSearch=getClient().prepareSearch(this.getIndexName()).setTypes(this.getIndexType()).setIndices(this.getIndexName());
  if (options.isFacet()) {
    this.setFacets(esSearch);
  }
  if (query.getSortField() != null) {
    FieldSortBuilder sort=SortBuilders.fieldSort(query.getSortField().sortField());
    if (query.isAscendingSort()) {
      sort.order(SortOrder.ASC);
    }
 else {
      sort.order(SortOrder.DESC);
    }
    esSearch.addSort(sort);
  }
 else   if (query.getQueryText() != null && !query.getQueryText().isEmpty()) {
    esSearch.addSort(SortBuilders.scoreSort());
  }
 else {
    esSearch.addSort(RuleNormalizer.RuleField.UPDATED_AT.sortField(),SortOrder.DESC);
    esSearch.addSort(RuleNormalizer.RuleField.KEY.sortField(),SortOrder.ASC);
  }
  esSearch.setFrom(options.getOffset());
  esSearch.setSize(options.getLimit());
  Set<String> fields=new HashSet<String>();
  if (!options.getFieldsToReturn().isEmpty()) {
    for (    String fieldToReturn : options.getFieldsToReturn()) {
      if (!fieldToReturn.isEmpty()) {
        fields.add(fieldToReturn);
      }
    }
    fields.add(RuleNormalizer.RuleField.KEY.field());
  }
 else {
    for (    IndexField indexField : RuleNormalizer.RuleField.ALL_FIELDS) {
      fields.add(indexField.field());
    }
  }
  esSearch.setFetchSource(fields.toArray(new String[fields.size()]),null);
  return esSearch;
}
