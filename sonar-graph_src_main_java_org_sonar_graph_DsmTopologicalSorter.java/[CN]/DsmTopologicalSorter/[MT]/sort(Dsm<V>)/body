{
  DsmTopologicalSorter<V> partitionner=new DsmTopologicalSorter<V>(dsm);
  boolean dsmCanBeSorted=true;
  while (dsmCanBeSorted) {
    boolean dsmCanBeSortedOnLeft=partitionner.pushToLeftVerticesWithoutIncomingEdges();
    boolean dsmCanBeSortedOnRight=partitionner.pushToRightVerticesWithoutOutgointEdges();
    dsmCanBeSorted=dsmCanBeSortedOnLeft || dsmCanBeSortedOnRight;
  }
  boolean isCyclicGraph=partitionner.leftOrderedIndex < partitionner.rightOrderedIndex;
  if (isCyclicGraph) {
    throw new IllegalStateException("Can't sort a cyclic graph.");
  }
}
