{
  Object propertyValue;
  if (hasEmbeddedTypes) {
    JSONObject json=(JSONObject)node;
    if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_UNKNOWN)) {
      propertyValue=null;
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_BOOLEAN)) {
      propertyValue=json.get(GraphonTokens.VALUE);
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_FLOAT)) {
      propertyValue=((Double)json.get(GraphonTokens.VALUE)).floatValue();
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_DOUBLE)) {
      propertyValue=json.get(GraphonTokens.VALUE);
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_INTEGER)) {
      propertyValue=((Long)json.get(GraphonTokens.VALUE)).intValue();
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_LONG)) {
      propertyValue=json.get(GraphonTokens.VALUE);
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_STRING)) {
      propertyValue=json.get(GraphonTokens.VALUE);
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_LIST)) {
      propertyValue=readProperties(((JSONArray)json.get(GraphonTokens.VALUE)).iterator(),hasEmbeddedTypes);
    }
 else     if (json.get(GraphonTokens.TYPE).equals(GraphonTokens.TYPE_MAP)) {
      propertyValue=readProperties((JSONObject)json.get(GraphonTokens.VALUE),false,hasEmbeddedTypes);
    }
 else {
      propertyValue=node.toString();
    }
  }
 else {
    if (node == null) {
      propertyValue=null;
    }
 else     if (node instanceof Boolean) {
      propertyValue=node;
    }
 else     if (node instanceof Double) {
      propertyValue=node;
    }
 else     if (node instanceof Integer) {
      propertyValue=node;
    }
 else     if (node instanceof Long) {
      propertyValue=node;
    }
 else     if (node instanceof String) {
      propertyValue=node;
    }
 else     if (node instanceof JSONArray) {
      propertyValue=readProperties(((JSONArray)node).iterator(),hasEmbeddedTypes);
    }
 else     if (node instanceof JSONObject) {
      propertyValue=readProperties((JSONObject)node,false,hasEmbeddedTypes);
    }
 else {
      propertyValue=node;
    }
  }
  return propertyValue;
}
