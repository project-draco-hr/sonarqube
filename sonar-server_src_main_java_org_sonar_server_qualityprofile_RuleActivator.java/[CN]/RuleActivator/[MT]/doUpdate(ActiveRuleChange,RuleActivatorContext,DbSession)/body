{
  ActiveRuleDto activeRule;
  ActiveRuleDao dao=db.activeRuleDao();
  activeRule=context.activeRule();
  activeRule.setSeverity(change.getSeverity());
  if (change.getInheritance() != null) {
    activeRule.setInheritance(change.getInheritance().name());
  }
  dao.update(dbSession,activeRule);
  for (  Map.Entry<String,String> param : change.getParameters().entrySet()) {
    ActiveRuleParamDto activeRuleParamDto=context.activeRuleParamsAsMap().get(param.getKey());
    if (activeRuleParamDto == null) {
      if (param.getValue() != null) {
        activeRuleParamDto=ActiveRuleParamDto.createFor(context.ruleParamsByKeys().get(param.getKey()));
        activeRuleParamDto.setValue(param.getValue());
        dao.addParam(dbSession,activeRule,activeRuleParamDto);
      }
    }
 else {
      if (param.getValue() != null) {
        activeRuleParamDto.setValue(param.getValue());
        dao.updateParam(dbSession,activeRule,activeRuleParamDto);
      }
 else {
        dao.deleteParam(dbSession,activeRule,activeRuleParamDto);
      }
    }
  }
  return activeRule;
}
