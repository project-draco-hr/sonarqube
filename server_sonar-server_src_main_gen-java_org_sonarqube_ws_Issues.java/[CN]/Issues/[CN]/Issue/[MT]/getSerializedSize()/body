{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getKeyBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getRuleBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(3,getComponentBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(4,componentId_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(5,getProjectBytes());
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(6,getSubProjectBytes());
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(7,line_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(8,getResolutionBytes());
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(9,getStatusBytes());
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(10,getMessageBytes());
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(11,getDebtBytes());
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(12,getAssigneeBytes());
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(13,getReporterBytes());
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(14,getScmAuthorBytes());
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(15,getActionPlanBytes());
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(16,getActionPlanNameBytes());
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(17,getAttrBytes());
  }
{
    int dataSize=0;
    for (int i=0; i < tags_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(tags_.getByteString(i));
    }
    size+=dataSize;
    size+=2 * getTagsList().size();
  }
{
    int dataSize=0;
    for (int i=0; i < transitions_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(transitions_.getByteString(i));
    }
    size+=dataSize;
    size+=2 * getTransitionsList().size();
  }
{
    int dataSize=0;
    for (int i=0; i < actions_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(actions_.getByteString(i));
    }
    size+=dataSize;
    size+=2 * getActionsList().size();
  }
  for (int i=0; i < comments_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(21,comments_.get(i));
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(22,getCreationDateBytes());
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(23,getUpdateDateBytes());
  }
  if (((bitField0_ & 0x00080000) == 0x00080000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(24,getFUpdateAgeBytes());
  }
  if (((bitField0_ & 0x00100000) == 0x00100000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(25,getCloseDateBytes());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
