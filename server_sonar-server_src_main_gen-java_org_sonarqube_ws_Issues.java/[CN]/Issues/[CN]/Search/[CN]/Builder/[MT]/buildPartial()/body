{
  org.sonarqube.ws.Issues.Search result=new org.sonarqube.ws.Issues.Search(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  if (pagingBuilder_ == null) {
    result.paging_=paging_;
  }
 else {
    result.paging_=pagingBuilder_.build();
  }
  if (issuesBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      issues_=java.util.Collections.unmodifiableList(issues_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.issues_=issues_;
  }
 else {
    result.issues_=issuesBuilder_.build();
  }
  if (facetsBuilder_ == null) {
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      facets_=java.util.Collections.unmodifiableList(facets_);
      bitField0_=(bitField0_ & ~0x00000004);
    }
    result.facets_=facets_;
  }
 else {
    result.facets_=facetsBuilder_.build();
  }
  if (projectsBuilder_ == null) {
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      projects_=java.util.Collections.unmodifiableList(projects_);
      bitField0_=(bitField0_ & ~0x00000008);
    }
    result.projects_=projects_;
  }
 else {
    result.projects_=projectsBuilder_.build();
  }
  if (componentsBuilder_ == null) {
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      components_=java.util.Collections.unmodifiableList(components_);
      bitField0_=(bitField0_ & ~0x00000010);
    }
    result.components_=components_;
  }
 else {
    result.components_=componentsBuilder_.build();
  }
  if (rulesBuilder_ == null) {
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      rules_=java.util.Collections.unmodifiableList(rules_);
      bitField0_=(bitField0_ & ~0x00000020);
    }
    result.rules_=rules_;
  }
 else {
    result.rules_=rulesBuilder_.build();
  }
  if (usersBuilder_ == null) {
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      users_=java.util.Collections.unmodifiableList(users_);
      bitField0_=(bitField0_ & ~0x00000040);
    }
    result.users_=users_;
  }
 else {
    result.users_=usersBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
