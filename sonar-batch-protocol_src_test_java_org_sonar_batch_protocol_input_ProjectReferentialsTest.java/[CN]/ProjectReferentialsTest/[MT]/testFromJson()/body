{
  ProjectReferentials ref=ProjectReferentials.fromJson("{timestamp:1," + "qprofilesByLanguage:{java:{key:\"squid-java\",name:Java,language:java,rulesUpdatedAt:\"1984-03-14T00:00:00+0100\"}}," + "activeRules:[{repositoryKey:repo,ruleKey:rule,name:Rule,severity:MAJOR,internalKey:rule1,language:java,params:{param1:value1}}],"+ "settingsByModule:{foo:{prop:value}},"+ "fileDataByModuleAndPath:{foo:{\"src/main/java/Foo.java\":{hash:xyz,scmLastCommitDatetimesByLine:\"1\u003d12345,2\u003d3456\",scmRevisionsByLine:\"1\u003d345,2\u003d345\",scmAuthorsByLine:\"1\u003dhenryju,2\u003dgaudin\"}}},"+ "lastAnalysisDate:\"2014-10-31T00:00:00+0100\"}");
  assertThat(ref.timestamp()).isEqualTo(1);
  ActiveRule activeRule=ref.activeRules().iterator().next();
  assertThat(activeRule.ruleKey()).isEqualTo("rule");
  assertThat(activeRule.repositoryKey()).isEqualTo("repo");
  assertThat(activeRule.name()).isEqualTo("Rule");
  assertThat(activeRule.severity()).isEqualTo("MAJOR");
  assertThat(activeRule.internalKey()).isEqualTo("rule1");
  assertThat(activeRule.language()).isEqualTo("java");
  assertThat(activeRule.params()).includes(MapAssert.entry("param1","value1"));
  assertThat(activeRule.param("param1")).isEqualTo("value1");
  QProfile qProfile=ref.qProfiles().iterator().next();
  assertThat(qProfile.key()).isEqualTo("squid-java");
  assertThat(qProfile.name()).isEqualTo("Java");
  assertThat(qProfile.rulesUpdatedAt()).isEqualTo(new SimpleDateFormat("dd/MM/yyyy").parse("14/03/1984"));
  assertThat(ref.settings("foo")).includes(MapAssert.entry("prop","value"));
  assertThat(ref.fileData("foo","src/main/java/Foo.java").hash()).isEqualTo("xyz");
  assertThat(ref.fileData("foo","src/main/java/Foo.java").scmAuthorsByLine()).isEqualTo("1=henryju,2=gaudin");
  assertThat(ref.fileData("foo","src/main/java/Foo.java").scmLastCommitDatetimesByLine()).isEqualTo("1=12345,2=3456");
  assertThat(ref.fileData("foo","src/main/java/Foo.java").scmRevisionsByLine()).isEqualTo("1=345,2=345");
  assertThat(ref.lastAnalysisDate()).isEqualTo(new SimpleDateFormat("dd/MM/yyyy").parse("31/10/2014"));
}
