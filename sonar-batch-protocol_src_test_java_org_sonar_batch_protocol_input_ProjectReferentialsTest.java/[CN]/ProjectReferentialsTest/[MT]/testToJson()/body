{
  ProjectReferentials ref=new ProjectReferentials();
  assertThat(ref.settings("foo")).isEmpty();
  ref.addQProfile(new QProfile("squid-java","Java","java",new SimpleDateFormat("dd/MM/yyyy").parse("14/03/1984")));
  HashMap<String,String> settings=new HashMap<String,String>();
  settings.put("prop1","value1");
  ref.addSettings("foo",settings);
  settings=new HashMap<String,String>();
  settings.put("prop2","value2");
  ref.addSettings("foo",settings);
  ref.settings("foo").put("prop","value");
  ActiveRule activeRule=new ActiveRule("repo","rule","templateRule","Rule","MAJOR","rule","java");
  activeRule.addParam("param1","value1");
  ref.addActiveRule(activeRule);
  ref.setLastAnalysisDate(new SimpleDateFormat("dd/MM/yyyy").parse("31/10/2014"));
  ref.setTimestamp(10);
  ref.addFileData("foo","src/main/java/Foo.java",new FileData("xyz","1=12345,2=3456","1=345,2=345","1=henryju,2=gaudin"));
  System.out.println(ref.toJson());
  JSONAssert.assertEquals("{timestamp:10," + "qprofilesByLanguage:{java:{key:\"squid-java\",name:Java,language:java,rulesUpdatedAt:\"1984-03-14T00:00:00+0100\"}}," + "activeRules:[{repositoryKey:repo,ruleKey:rule,templateRuleKey:templateRule,name:Rule,severity:MAJOR,internalKey:rule,language:java,params:{param1:value1}}],"+ "settingsByModule:{foo:{prop1:value1,prop2:value2,prop:value}},"+ "fileDataByModuleAndPath:{foo:{\"src/main/java/Foo.java\":{hash:xyz,scmLastCommitDatetimesByLine:\"1\u003d12345,2\u003d3456\",scmRevisionsByLine:\"1\u003d345,2\u003d345\",scmAuthorsByLine:\"1\u003dhenryju,2\u003dgaudin\"}}},"+ "lastAnalysisDate:\"2014-10-31T00:00:00+0100\"}",ref.toJson(),true);
}
