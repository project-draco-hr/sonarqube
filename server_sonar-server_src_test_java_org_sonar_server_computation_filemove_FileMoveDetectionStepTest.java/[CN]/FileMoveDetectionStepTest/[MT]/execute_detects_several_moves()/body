{
  analysisMetadataHolder.setBaseProjectSnapshot(SNAPSHOT);
  Component file4=fileComponent(5);
  Component file5=fileComponent(6);
  Component file6=fileComponent(7);
  ComponentDto[] dtos=mockComponents(FILE_1.getKey(),FILE_2.getKey(),file4.getKey(),file5.getKey());
  mockContentOfFileIdDb(FILE_1.getKey(),CONTENT1);
  mockContentOfFileIdDb(FILE_2.getKey(),LESS_CONTENT1);
  mockContentOfFileIdDb(file4.getKey(),new String[]{"e","f","g","h","i"});
  mockContentOfFileIdDb(file5.getKey(),CONTENT2);
  setFilesInReport(FILE_3,file4,file6);
  setFileContentInReport(FILE_3_REF,CONTENT1);
  setFileContentInReport(file4.getReportAttributes().getRef(),new String[]{"a","b"});
  setFileContentInReport(file6.getReportAttributes().getRef(),LESS_CONTENT2);
  underTest.execute();
  assertThat(movedFilesRepository.getComponentsWithOriginal()).containsOnly(FILE_3,file6);
  MovedFilesRepository.OriginalFile originalFile2=movedFilesRepository.getOriginalFile(FILE_3).get();
  assertThat(originalFile2.getId()).isEqualTo(dtos[0].getId());
  assertThat(originalFile2.getKey()).isEqualTo(dtos[0].getKey());
  assertThat(originalFile2.getUuid()).isEqualTo(dtos[0].uuid());
  MovedFilesRepository.OriginalFile originalFile5=movedFilesRepository.getOriginalFile(file6).get();
  assertThat(originalFile5.getId()).isEqualTo(dtos[3].getId());
  assertThat(originalFile5.getKey()).isEqualTo(dtos[3].getKey());
  assertThat(originalFile5.getUuid()).isEqualTo(dtos[3].uuid());
}
