{
  when(profileLoader.countAllActiveRules()).thenReturn(ImmutableMap.of("sonar-way-xoo1-12345",11L,"my-sonar-way-xoo2-34567",33L));
  qualityProfileDao.insert(session,QualityProfileDto.createFor("sonar-way-xoo1-12345").setLanguage(xoo1.getKey()).setName("Sonar way").setDefault(true),QualityProfileDto.createFor("sonar-way-xoo2-23456").setLanguage(xoo2.getKey()).setName("Sonar way"),QualityProfileDto.createFor("my-sonar-way-xoo2-34567").setLanguage(xoo2.getKey()).setName("My Sonar way").setParentKee("sonar-way-xoo2-23456"),QualityProfileDto.createFor("sonar-way-other-666").setLanguage("other").setName("Sonar way").setDefault(true));
  new ComponentDao().insert(session,ComponentTesting.newProjectDto("project-uuid1"),ComponentTesting.newProjectDto("project-uuid2"));
  qualityProfileDao.insertProjectProfileAssociation("project-uuid1","sonar-way-xoo2-23456",session);
  qualityProfileDao.insertProjectProfileAssociation("project-uuid2","sonar-way-xoo2-23456",session);
  session.commit();
  tester.newGetRequest("api/qualityprofiles","search").execute().assertJson(this.getClass(),"search.json");
}
