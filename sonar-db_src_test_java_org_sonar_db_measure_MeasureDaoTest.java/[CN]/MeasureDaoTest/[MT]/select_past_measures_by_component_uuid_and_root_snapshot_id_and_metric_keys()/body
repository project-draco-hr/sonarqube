{
  db.prepareDbUnit(getClass(),"past_measures.xml");
  Map<Long,PastMeasureDto> fileMeasures=pastMeasuresById(underTest.selectByComponentUuidAndProjectSnapshotIdAndMetricIds(dbSession,"CDEF",1000L,ImmutableSet.of(1,2)));
  assertThat(fileMeasures).hasSize(2);
  PastMeasureDto fileMeasure1=fileMeasures.get(5L);
  assertThat(fileMeasure1.getValue()).isEqualTo(5d);
  assertThat(fileMeasure1.getMetricId()).isEqualTo(1);
  assertThat(fileMeasure1.getRuleId()).isNull();
  assertThat(fileMeasure1.getCharacteristicId()).isNull();
  assertThat(fileMeasure1.getPersonId()).isNull();
  PastMeasureDto fileMeasure2=fileMeasures.get(6L);
  assertThat(fileMeasure2.getValue()).isEqualTo(60d);
  assertThat(fileMeasure2.getMetricId()).isEqualTo(2);
  Map<Long,PastMeasureDto> projectMeasures=pastMeasuresById(underTest.selectByComponentUuidAndProjectSnapshotIdAndMetricIds(dbSession,"ABCD",1000L,ImmutableSet.of(1,2)));
  assertThat(projectMeasures).hasSize(2);
  PastMeasureDto projectMeasure1=projectMeasures.get(1L);
  assertThat(projectMeasure1.getValue()).isEqualTo(60d);
  assertThat(projectMeasure1.getMetricId()).isEqualTo(1);
  PastMeasureDto projectMeasure2=projectMeasures.get(2L);
  assertThat(projectMeasure2.getValue()).isEqualTo(80d);
  assertThat(projectMeasure2.getMetricId()).isEqualTo(2);
  assertThat(underTest.selectByComponentUuidAndProjectSnapshotIdAndMetricIds(dbSession,"UNKNOWN",1000L,ImmutableSet.of(1,2))).isEmpty();
  assertThat(underTest.selectByComponentUuidAndProjectSnapshotIdAndMetricIds(dbSession,"CDEF",987654L,ImmutableSet.of(1,2))).isEmpty();
  assertThat(underTest.selectByComponentUuidAndProjectSnapshotIdAndMetricIds(dbSession,"CDEF",1000L,ImmutableSet.of(123,456))).isEmpty();
}
