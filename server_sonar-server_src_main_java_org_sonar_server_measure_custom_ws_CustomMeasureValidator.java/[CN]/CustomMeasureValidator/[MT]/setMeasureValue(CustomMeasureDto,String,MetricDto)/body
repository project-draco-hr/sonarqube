{
  Metric.ValueType metricType=Metric.ValueType.valueOf(metric.getValueType());
  try {
switch (metricType) {
case BOOL:
      checkAndSetBooleanMeasureValue(measure,valueAsString);
    break;
case INT:
case MILLISEC:
  checkAndSetIntegerMeasureValue(measure,valueAsString);
break;
case WORK_DUR:
checkAndSetLongMeasureValue(measure,valueAsString);
break;
case FLOAT:
case PERCENT:
case RATING:
checkAndSetFloatMeasureValue(measure,valueAsString);
break;
case LEVEL:
checkAndSetLevelMeasureValue(measure,valueAsString);
break;
case STRING:
case DATA:
case DISTRIB:
measure.setTextValue(valueAsString);
break;
default :
throw new IllegalArgumentException("Unsupported metric type:" + metricType.description());
}
}
 catch (Exception e) {
throw new IllegalArgumentException(String.format("Incorrect value '%s' for metric type '%s'",valueAsString,metricType.description()),e);
}
}
