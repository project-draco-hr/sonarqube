{
  LOG.info("Copy table " + table);
  String selectQuery="select * from " + table;
  if (whereClauses.length > 0) {
    List<String> clauses=Lists.newArrayList();
    for (    String whereClause : whereClauses) {
      clauses.add('(' + whereClause + ')');
    }
    selectQuery+=" WHERE " + Joiner.on(" AND ").join(clauses);
  }
  truncate(dest,table);
  Connection sourceConnection=null;
  Statement sourceStatement=null;
  ResultSet sourceResultSet=null;
  Connection destConnection=null;
  ResultSet destResultSet=null;
  PreparedStatement destStatement=null;
  try {
    sourceConnection=source.getConnection();
    sourceStatement=sourceConnection.createStatement();
    sourceResultSet=sourceStatement.executeQuery(selectQuery);
    if (sourceResultSet.next()) {
      int colCount=sourceResultSet.getMetaData().getColumnCount();
      destConnection=dest.getConnection();
      destConnection.setAutoCommit(false);
      destStatement=destConnection.prepareStatement("INSERT INTO " + table + " VALUES("+ StringUtils.repeat("?",",",colCount)+ ")");
      do {
        for (int col=1; col <= colCount; col++) {
          Object value=sourceResultSet.getObject(col);
          destStatement.setObject(col,value);
        }
        destStatement.addBatch();
      }
 while (sourceResultSet.next());
      destStatement.executeBatch();
      destConnection.commit();
    }
  }
 catch (  SQLException e) {
    LOG.error("Fail to copy table " + table,e);
    throw new SonarException("Fail to copy table " + table,e);
  }
 finally {
    DatabaseUtils.closeQuietly(destStatement);
    DatabaseUtils.closeQuietly(destResultSet);
    DatabaseUtils.closeQuietly(destConnection);
    DatabaseUtils.closeQuietly(sourceResultSet);
    DatabaseUtils.closeQuietly(sourceStatement);
    DatabaseUtils.closeQuietly(sourceConnection);
  }
  return this;
}
