{
  File baseJarFile=temp.newFile(), extensionJarFile=temp.newFile();
  PluginInfo base=new PluginInfo("foo").setName("Foo").setMainClass("org.foo.FooPlugin").setFile(baseJarFile);
  PluginInfo extension=new PluginInfo("fooContrib").setName("Foo Contrib").setMainClass("org.foo.ContribPlugin").setFile(extensionJarFile).setBasePlugin("foo").setUseChildFirstClassLoader(true);
  PluginLoader loader=new PluginLoader(new BasicPluginUnzipper());
  Map<String,PluginLoader.ClassloaderDef> defs=loader.defineClassloaders(ImmutableMap.of("foo",base,"fooContrib",extension));
  assertThat(defs).containsOnlyKeys("foo");
  PluginLoader.ClassloaderDef def=defs.get("foo");
  assertThat(def.basePluginKey).isEqualTo("foo");
  assertThat(def.selfFirstStrategy).isFalse();
  assertThat(def.files).containsOnly(baseJarFile,extensionJarFile);
  assertThat(def.mainClassesByPluginKey).containsOnly(MapEntry.entry("foo","org.foo.FooPlugin"),entry("fooContrib","org.foo.ContribPlugin"));
}
