{
  String actionPlanKey=issue.actionPlanKey();
  WorkDayDuration technicalDebt=issue.technicalDebt();
  Date updateDate=issue.updateDate();
  Date closeDate=issue.closeDate();
  json.prop("key",issue.key()).prop("component",issue.componentKey()).prop("componentLongName",result.component(issue).longName()).prop("componentQualifier",result.component(issue).qualifier()).prop("project",result.project(issue).key()).prop("projectLongName",result.project(issue).longName()).prop("rule",issue.ruleKey().toString()).prop("ruleName",result.rule(issue).getName()).prop("line",issue.line()).prop("message",issue.message()).prop("resolution",issue.resolution()).prop("status",issue.status()).prop("severity",issue.severity()).prop("author",issue.authorLogin()).prop("actionPlan",actionPlanKey).prop("debt",technicalDebt != null ? technicalDebtFormatter.format(UserSession.get().locale(),technicalDebt) : null).prop("actionPlanName",actionPlanKey != null ? result.actionPlan(issue).name() : null).prop("creationDate",DateUtils.formatDateTime(issue.creationDate())).prop("updateDate",updateDate != null ? DateUtils.formatDateTime(updateDate) : null).prop("closeDate",closeDate != null ? DateUtils.formatDateTime(closeDate) : null);
  addUserWithLabel(result,issue.assignee(),"assignee",json);
  addUserWithLabel(result,issue.reporter(),"reporter",json);
}
