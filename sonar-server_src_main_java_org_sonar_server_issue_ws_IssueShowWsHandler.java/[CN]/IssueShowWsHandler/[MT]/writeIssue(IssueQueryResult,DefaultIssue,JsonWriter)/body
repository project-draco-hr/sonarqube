{
  ComponentDto component=(ComponentDto)result.component(issue);
  ComponentDto module=(ComponentDto)getModule(result,component);
  ComponentDto project=(ComponentDto)geProject(result,component);
  String actionPlanKey=issue.actionPlanKey();
  ActionPlan actionPlan=result.actionPlan(issue);
  Long technicalDebt=issue.debt();
  Date updateDate=issue.updateDate();
  Date closeDate=issue.closeDate();
  json.prop("key",issue.key()).prop("component",issue.componentKey()).prop("componentLongName",component != null ? component.longName() : null).prop("componentQualifier",component != null ? component.qualifier() : null).prop("moduleLongName",module != null && project != null && !module.getId().equals(project.getId()) ? module.longName() : null).prop("project",issue.projectKey()).prop("projectLongName",project != null ? project.longName() : null).prop("rule",issue.ruleKey().toString()).prop("ruleName",result.rule(issue).getName()).prop("line",issue.line()).prop("message",issue.message()).prop("resolution",issue.resolution()).prop("status",issue.status()).prop("severity",issue.severity()).prop("author",issue.authorLogin()).prop("actionPlan",actionPlanKey).prop("actionPlanName",actionPlan != null ? actionPlan.name() : null).prop("debt",technicalDebt != null ? workDurationFormatter.format(technicalDebt,WorkDurationFormatter.Format.SHORT) : null).prop("creationDate",DateUtils.formatDateTime(issue.creationDate())).prop("fCreationDate",formatDate(issue.creationDate())).prop("updateDate",updateDate != null ? DateUtils.formatDateTime(updateDate) : null).prop("fUpdateDate",formatDate(updateDate)).prop("fUpdateAge",formatAgeDate(updateDate)).prop("closeDate",closeDate != null ? DateUtils.formatDateTime(closeDate) : null).prop("fCloseDate",formatDate(issue.closeDate()));
  addUserWithLabel(result,issue.assignee(),"assignee",json);
  addUserWithLabel(result,issue.reporter(),"reporter",json);
  addCharacteristics(result,issue,json);
}
