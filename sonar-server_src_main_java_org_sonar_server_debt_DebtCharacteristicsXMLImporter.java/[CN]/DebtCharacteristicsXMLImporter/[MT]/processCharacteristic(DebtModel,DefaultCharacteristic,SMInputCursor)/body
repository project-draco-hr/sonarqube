{
  DefaultCharacteristic characteristic=new DefaultCharacteristic();
  SMInputCursor cursor=chcCursor.childElementCursor();
  while (cursor.getNext() != null) {
    String node=cursor.getLocalName();
    if (StringUtils.equals(node,CHARACTERISTIC_KEY)) {
      characteristic.setKey(cursor.collectDescendantText().trim());
      characteristic.setParent(parent);
    }
 else     if (StringUtils.equals(node,CHARACTERISTIC_NAME)) {
      characteristic.setName(cursor.collectDescendantText().trim(),false);
    }
 else     if (StringUtils.equals(node,CHARACTERISTIC)) {
      processCharacteristic(model,characteristic,cursor);
    }
  }
  if (StringUtils.isNotBlank(characteristic.key()) && characteristic.isRoot()) {
    characteristic.setOrder(model.rootCharacteristics().size() + 1);
    model.addRootCharacteristic(characteristic);
    return characteristic;
  }
  return null;
}
