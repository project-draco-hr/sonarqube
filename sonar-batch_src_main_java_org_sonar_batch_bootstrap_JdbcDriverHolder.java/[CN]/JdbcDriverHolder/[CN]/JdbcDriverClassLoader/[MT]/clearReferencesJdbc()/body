{
  InputStream is=getResourceAsStream("org/sonar/batch/bootstrap/JdbcLeakPrevention.class");
  byte[] classBytes=new byte[2048];
  int offset=0;
  try {
    int read=is.read(classBytes,offset,classBytes.length - offset);
    while (read > -1) {
      offset+=read;
      if (offset == classBytes.length) {
        byte[] tmp=new byte[classBytes.length * 2];
        System.arraycopy(classBytes,0,tmp,0,classBytes.length);
        classBytes=tmp;
      }
      read=is.read(classBytes,offset,classBytes.length - offset);
    }
    Class<?> lpClass=defineClass("org.sonar.batch.bootstrap.JdbcLeakPrevention",classBytes,0,offset,this.getClass().getProtectionDomain());
    Object obj=lpClass.newInstance();
    obj.getClass().getMethod("unregisterDrivers").invoke(obj);
  }
 catch (  Exception e) {
    LOG.warn("JDBC driver deregistration failed",e);
  }
 finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException ioe) {
        LOG.warn(ioe.getMessage(),ioe);
      }
    }
  }
}
