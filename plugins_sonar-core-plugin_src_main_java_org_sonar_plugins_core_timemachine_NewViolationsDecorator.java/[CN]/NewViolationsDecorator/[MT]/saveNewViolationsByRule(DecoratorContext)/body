{
  ListMultimap<Rule,Measure> childrenByRule=ArrayListMultimap.create();
  Collection<Measure> children=context.getChildrenMeasures(MeasuresFilters.rules(CoreMetrics.NEW_VIOLATIONS));
  for (  Measure childMeasure : children) {
    RuleMeasure childRuleMeasure=(RuleMeasure)childMeasure;
    Rule rule=childRuleMeasure.getRule();
    if (rule != null) {
      childrenByRule.put(rule,childMeasure);
      ruleToLevel.put(childRuleMeasure.getRule(),childRuleMeasure.getRulePriority());
    }
  }
  Set<Rule> rules=Sets.newHashSet(violationsByRule.keys());
  rules.addAll(childrenByRule.keys());
  for (  Rule rule : rules) {
    RuleMeasure measure=RuleMeasure.createForRule(CoreMetrics.NEW_VIOLATIONS,rule,null);
    measure.setRulePriority(ruleToLevel.get(rule));
    for (    PastSnapshot pastSnapshot : timeMachineConfiguration.getProjectPastSnapshots()) {
      int variationIndex=pastSnapshot.getIndex();
      int count=countViolations(violationsByRule.get(rule),pastSnapshot.getTargetDate());
      double sum=sumChildren(variationIndex,childrenByRule.get(rule)) + count;
      measure.setVariation(variationIndex,sum);
    }
    context.saveMeasure(measure);
  }
}
