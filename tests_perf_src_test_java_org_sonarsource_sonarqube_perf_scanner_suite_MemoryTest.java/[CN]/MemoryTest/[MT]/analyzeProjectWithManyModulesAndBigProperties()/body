{
  File baseDir=temp.newFolder();
  prepareModule(baseDir,"moduleA",1);
  prepareModule(baseDir,"moduleB",1);
  prepareModule(baseDir,"moduleC",1);
  FileUtils.write(new File(baseDir,"sonar-project.properties"),"sonar.modules=moduleA,moduleB,moduleC\n",true);
  FileUtils.write(new File(baseDir,"sonar-project.properties"),"sonar.myBigProp=" + Strings.repeat("A",10000),true);
  SonarScanner scanner=SonarScanner.create().setProperties("sonar.projectKey","big-module-tree","sonar.projectName","Big Module Tree","sonar.projectVersion","1.0","sonar.sources","","sonar.showProfiling","true");
  scanner.setEnvironmentVariable("SONAR_RUNNER_OPTS","-Xmx512m -server -XX:MaxPermSize=64m").setProjectDir(baseDir);
  BuildResult result=orchestrator.executeBuild(scanner);
  perfRule.assertDurationAround(MavenLogs.extractTotalTime(result.getLogs()),4480L);
  orchestrator.getServer().getAdminWsClient().create(new PropertyCreateQuery("sonar.anotherBigProp",Strings.repeat("B",1000),"big-module-tree"));
  result=orchestrator.executeBuild(scanner);
  perfRule.assertDurationAround(MavenLogs.extractTotalTime(result.getLogs()),4420L);
}
