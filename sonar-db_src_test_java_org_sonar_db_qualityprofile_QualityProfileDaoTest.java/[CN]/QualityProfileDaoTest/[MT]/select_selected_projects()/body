{
  ComponentDto project1=componentDbTester.insertComponent(newProjectDto().setName("Project1 name"));
  ComponentDto project2=componentDbTester.insertComponent(newProjectDto().setName("Project2 name"));
  ComponentDto project3=componentDbTester.insertComponent(newProjectDto().setName("Project3 name"));
  QualityProfileDto profile1=newQualityProfileDto();
  qualityProfileDb.insertQualityProfiles(profile1);
  qualityProfileDb.associateProjectWithQualityProfile(project1,profile1);
  qualityProfileDb.associateProjectWithQualityProfile(project2,profile1);
  QualityProfileDto profile2=newQualityProfileDto();
  qualityProfileDb.insertQualityProfiles(profile2);
  qualityProfileDb.associateProjectWithQualityProfile(project3,profile2);
  assertThat(underTest.selectSelectedProjects(profile1.getKey(),null,dbSession)).extracting("projectId","projectUuid","projectKey","projectName","profileKey").containsOnly(tuple(project1.getId(),project1.uuid(),project1.key(),project1.name(),profile1.getKey()),tuple(project2.getId(),project2.uuid(),project2.key(),project2.name(),profile1.getKey()));
  assertThat(underTest.selectSelectedProjects(profile1.getKey(),"ect1",dbSession)).hasSize(1);
  assertThat(underTest.selectSelectedProjects("unknown",null,dbSession)).isEmpty();
}
