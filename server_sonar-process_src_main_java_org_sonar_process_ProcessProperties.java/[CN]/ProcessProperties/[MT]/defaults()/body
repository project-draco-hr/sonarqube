{
  Map<String,String> defaults=new HashMap<>();
  defaults.put(ProcessProperties.CLUSTER_NAME,"sonarqube");
  defaults.put(ProcessProperties.CLUSTER_NODE_NAME,"sonar-" + System.currentTimeMillis());
  defaults.put(ProcessProperties.SEARCH_HOST,"127.0.0.1");
  defaults.put(ProcessProperties.SEARCH_JAVA_OPTS,"-Xmx1G -Xms256m -Xss256k -Djna.nosys=true " + "-XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly " + "-XX:+HeapDumpOnOutOfMemoryError");
  defaults.put(ProcessProperties.SEARCH_JAVA_ADDITIONAL_OPTS,"");
  defaults.put(ProcessProperties.WEB_JAVA_OPTS,"-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError");
  defaults.put(ProcessProperties.WEB_JAVA_ADDITIONAL_OPTS,"");
  defaults.put(ProcessProperties.CE_JAVA_OPTS,"-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError");
  defaults.put(ProcessProperties.CE_JAVA_ADDITIONAL_OPTS,"");
  defaults.put(ProcessProperties.JDBC_MAX_ACTIVE,"60");
  defaults.put(ProcessProperties.JDBC_MAX_IDLE,"5");
  defaults.put(ProcessProperties.JDBC_MIN_IDLE,"2");
  defaults.put(ProcessProperties.JDBC_MAX_WAIT,"5000");
  defaults.put(ProcessProperties.JDBC_MIN_EVICTABLE_IDLE_TIME_MILLIS,"600000");
  defaults.put(ProcessProperties.JDBC_TIME_BETWEEN_EVICTION_RUNS_MILLIS,"30000");
  return defaults;
}
