{
  final Date createdAt=DateUtils.parseDate("2011-12-25");
  ReviewDto review=new ReviewDto().setRuleId(3).setViolationPermanentId(100).setCreatedAt(createdAt).setSeverity(RulePriority.BLOCKER.toString());
  ReviewDao dao=mock(ReviewDao.class);
  when(dao.selectOpenByResourceId(eq(100L),(Predicate<ReviewDto>[])anyVararg())).thenReturn(Lists.newArrayList(review));
  RuleFinder ruleFinder=mock(RuleFinder.class);
  when(ruleFinder.findById(3)).thenReturn(new Rule());
  DecoratorContext context=mock(DecoratorContext.class);
  ManualViolationInjector injector=new ManualViolationInjector(dao,ruleFinder);
  injector.decorate(new Project("key").setId(100),context);
  verify(context,times(1)).saveViolation(argThat(new BaseMatcher<Violation>(){
    public boolean matches(    Object o){
      Violation v=(Violation)o;
      return v.getPermanentId() == 100 && v.getRule() != null && v.isManual() && v.getCreatedAt().equals(createdAt) && v.getSeverity().equals(RulePriority.BLOCKER);
    }
    public void describeTo(    Description description){
    }
  }
));
}
