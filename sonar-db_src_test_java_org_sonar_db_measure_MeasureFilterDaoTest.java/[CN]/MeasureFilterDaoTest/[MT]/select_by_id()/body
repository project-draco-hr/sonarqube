{
  MeasureFilterDto dto=new MeasureFilterDto().setUserId(10L).setName("name").setDescription("description").setData("data").setShared(true).setCreatedAt(new Date(1000L)).setUpdatedAt(new Date(2000L));
  underTest.insert(session,dto);
  session.commit();
  MeasureFilterDto dtoReloded=underTest.selectById(session,dto.getId());
  assertThat(dtoReloded).isNotNull();
  assertThat(dtoReloded.getUserId()).isEqualTo(10L);
  assertThat(dtoReloded.getName()).isEqualTo("name");
  assertThat(dtoReloded.getDescription()).isEqualTo("description");
  assertThat(dtoReloded.getData()).isEqualTo("data");
  assertThat(dtoReloded.isShared()).isTrue();
  assertThat(dtoReloded.getCreatedAt()).isEqualTo(new Date(1000L));
  assertThat(dtoReloded.getUpdatedAt()).isEqualTo(new Date(2000L));
  assertThat(underTest.selectById(session,123L)).isNull();
}
