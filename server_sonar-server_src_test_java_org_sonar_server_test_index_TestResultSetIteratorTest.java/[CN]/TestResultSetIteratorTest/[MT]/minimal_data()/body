{
  dbTester.prepareDbUnit(getClass(),"shared.xml");
  List<DbFileSources.Test> tests=Arrays.asList(DbFileSources.Test.newBuilder().setUuid("U1").setName("N1").build());
  TestTesting.updateDataColumn(dbTester.getSession(),"F1",tests);
  underTest=TestResultSetIterator.create(dbTester.getDbClient(),dbTester.getSession(),0L,null);
  FileSourcesUpdaterHelper.Row row=underTest.next();
  assertThat(row.getProjectUuid()).isEqualTo("P1");
  assertThat(row.getFileUuid()).isEqualTo("F1");
  assertThat(row.getUpdatedAt()).isEqualTo(1416239042000L);
  assertThat(row.getUpdateRequests()).hasSize(1);
  UpdateRequest firstRequest=row.getUpdateRequests().get(0);
  Map<String,Object> doc=firstRequest.doc().sourceAsMap();
  assertThat(doc).contains(entry(FIELD_PROJECT_UUID,"P1"),entry(FIELD_FILE_UUID,"F1"),entry(FIELD_TEST_UUID,"U1"),entry(FIELD_NAME,"N1"),entry(FIELD_UPDATED_AT,1416239042000L));
  ;
  assertThat(doc).containsKeys(FIELD_DURATION_IN_MS,FIELD_STACKTRACE,FIELD_MESSAGE,FIELD_STATUS,FIELD_COVERED_FILES);
}
