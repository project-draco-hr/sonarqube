{
  requireNonNull(component);
  requireNonNull(metric);
  try (DbSession dbSession=dbClient.openSession(false)){
    MeasureQuery query=MeasureQuery.builder().setComponentUuid(component.getUuid()).setMetricKey(metric.getKey()).build();
    java.util.Optional<MeasureDto> measureDto=dbClient.measureDao().selectSingle(dbSession,query);
    if (measureDto.isPresent()) {
      return underTest.toMeasure(measureDto.get(),metric);
    }
    return Optional.absent();
  }
 }
