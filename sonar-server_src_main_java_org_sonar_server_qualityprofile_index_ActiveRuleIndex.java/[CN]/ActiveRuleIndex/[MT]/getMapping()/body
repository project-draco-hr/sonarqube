{
  XContentBuilder mapping=jsonBuilder().startObject().startObject(this.indexDefinition.getIndexType()).field("dynamic","strict").startObject("_parent").field("type",new RuleIndexDefinition().getIndexType()).endObject().startObject("_id").field("path",ActiveRuleNormalizer.ActiveRuleField.KEY.key()).endObject().startObject("_routing").field("required",true).field("path",ActiveRuleNormalizer.ActiveRuleField.RULE_KEY.key()).endObject();
  mapping.startObject("properties");
  addMatchField(mapping,ActiveRuleNormalizer.ActiveRuleField.KEY.key(),"string");
  addMatchField(mapping,ActiveRuleNormalizer.ActiveRuleField.RULE_KEY.key(),"string");
  addMatchField(mapping,ActiveRuleNormalizer.ActiveRuleField.INHERITANCE.key(),"string");
  addMatchField(mapping,ActiveRuleNormalizer.ActiveRuleField.SEVERITY.key(),"string");
  addMatchField(mapping,ActiveRuleNormalizer.ActiveRuleField.PROFILE_ID.key(),"string");
  mapping.startObject(ActiveRuleNormalizer.ActiveRuleField.PARAMS.key()).field("type","object").startObject("properties").startObject("_id").field("type","string").endObject().startObject(ActiveRuleNormalizer.ActiveRuleParamField.NAME.key()).field("type","string").endObject().startObject(ActiveRuleNormalizer.ActiveRuleParamField.VALUE.key()).field("type","string").endObject().endObject();
  mapping.endObject();
  mapping.endObject().endObject();
  return mapping;
}
