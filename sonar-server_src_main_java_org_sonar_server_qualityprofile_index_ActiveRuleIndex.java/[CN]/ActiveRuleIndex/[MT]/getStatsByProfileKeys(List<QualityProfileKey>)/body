{
  String[] stringKeys=new String[keys.size()];
  for (int i=0; i < keys.size(); i++) {
    stringKeys[i]=keys.get(i).toString();
  }
  SearchResponse response=getClient().prepareSearch(this.getIndexName()).setQuery(QueryBuilders.filteredQuery(QueryBuilders.matchAllQuery(),FilterBuilders.termsFilter(ActiveRuleNormalizer.ActiveRuleField.PROFILE_KEY.field(),stringKeys))).addAggregation(AggregationBuilders.terms(ActiveRuleNormalizer.ActiveRuleField.PROFILE_KEY.field()).field(ActiveRuleNormalizer.ActiveRuleField.PROFILE_KEY.field()).subAggregation(AggregationBuilders.terms(ActiveRuleNormalizer.ActiveRuleField.INHERITANCE.field()).field(ActiveRuleNormalizer.ActiveRuleField.INHERITANCE.field())).subAggregation(AggregationBuilders.terms(ActiveRuleNormalizer.ActiveRuleField.SEVERITY.field()).field(ActiveRuleNormalizer.ActiveRuleField.SEVERITY.field())).subAggregation(AggregationBuilders.count("countActiveRules"))).setSize(0).setTypes(this.getIndexType()).get();
  System.out.println("response = " + response);
  Map<QualityProfileKey,Multimap<String,FacetValue>> stats=new HashMap<QualityProfileKey,Multimap<String,FacetValue>>();
  Aggregation aggregation=response.getAggregations().get(ActiveRuleNormalizer.ActiveRuleField.PROFILE_KEY.field());
  for (  Terms.Bucket value : ((Terms)aggregation).getBuckets()) {
    stats.put(QualityProfileKey.parse(value.getKey()),this.processAggregations(value.getAggregations()));
  }
  return stats;
}
