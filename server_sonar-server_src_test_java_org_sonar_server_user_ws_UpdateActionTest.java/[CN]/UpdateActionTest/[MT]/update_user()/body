{
  Map<String,Object> userDocMap=newHashMap();
  userDocMap.put("login","john");
  userDocMap.put("name","John");
  userDocMap.put("email","john@email.com");
  userDocMap.put("scmAccounts",newArrayList("jn"));
  userDocMap.put("active",true);
  userDocMap.put("createdAt",15000L);
  userDocMap.put("updatedAt",15000L);
  when(index.getByLogin("john")).thenReturn(new UserDoc(userDocMap));
  tester.newPostRequest("api/users","update").setParam("login","john").setParam("name","John").setParam("email","john@email.com").setParam("scm_accounts","jn").setParam("password","1234").setParam("password_confirmation","1234").execute().assertJson(getClass(),"update_user.json");
  verify(updater).update(userCaptor.capture());
  assertThat(userCaptor.getValue().login()).isEqualTo("john");
  assertThat(userCaptor.getValue().name()).isEqualTo("John");
  assertThat(userCaptor.getValue().email()).isEqualTo("john@email.com");
  assertThat(userCaptor.getValue().scmAccounts()).containsOnly("jn");
  assertThat(userCaptor.getValue().password()).isEqualTo("1234");
  assertThat(userCaptor.getValue().passwordConfirmation()).isEqualTo("1234");
}
