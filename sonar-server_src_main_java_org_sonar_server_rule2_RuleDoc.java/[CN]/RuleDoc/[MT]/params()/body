{
  List<RuleParam> params=new ArrayList<RuleParam>();
  if (this.fields.get(RuleField.PARAMS.key()) != null) {
    Collection<Map<String,Object>> esParams=(Collection<Map<String,Object>>)this.fields.get(RuleField.PARAMS.key());
    for (    final Map<String,Object> param : esParams) {
      params.add(new RuleParam(){
{
          this.fields=param;
        }
        Map<String,Object> fields;
        @Override public String key(){
          return (String)param.get(RuleNormalizer.RuleParamField.NAME.key());
        }
        @Override public String description(){
          return (String)param.get(RuleNormalizer.RuleParamField.DESCRIPTION.key());
        }
        @Override public String defaultValue(){
          return (String)param.get(RuleNormalizer.RuleParamField.VALUE.key());
        }
        @Override public RuleParamType type(){
          return RuleParamType.parse((String)param.get(RuleNormalizer.RuleParamField.TYPE.key()));
        }
      }
);
    }
  }
  return params;
}
