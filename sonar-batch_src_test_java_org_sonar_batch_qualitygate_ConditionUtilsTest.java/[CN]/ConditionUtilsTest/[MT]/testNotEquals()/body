{
  metric.setType(Metric.ValueType.FLOAT);
  measure.setValue(10.2d);
  when(condition.operator()).thenReturn(QualityGateConditionDto.OPERATOR_NOT_EQUALS);
  when(condition.metric()).thenReturn(metric);
  when(condition.errorThreshold()).thenReturn("10.2");
  assertThat(ConditionUtils.getLevel(condition,measure)).isEqualTo(Metric.Level.OK);
  when(condition.errorThreshold()).thenReturn("10.1");
  assertThat(ConditionUtils.getLevel(condition,measure)).isEqualTo(Metric.Level.ERROR);
  metric.setType(Metric.ValueType.STRING);
  measure.setData("TEST");
  measure.setValue(null);
  when(condition.errorThreshold()).thenReturn("TEST");
  assertThat(ConditionUtils.getLevel(condition,measure)).isEqualTo(Metric.Level.OK);
  when(condition.errorThreshold()).thenReturn("TEST2");
  assertThat(ConditionUtils.getLevel(condition,measure)).isEqualTo(Metric.Level.ERROR);
}
