{
  long userId1=insertUser("user1");
  long userId2=insertUser("user2");
  ComponentDto projectDto=insertProject("PROJECT_A");
  long projectId=projectDto.getId();
  String projectKey=projectDto.key();
  insertProperty("notification.DispatcherWithGlobalSubscribers.Email","true",null,userId2);
  insertProperty("notification.DispatcherWithProjectSubscribers.Email","true",projectId,userId1);
  insertProperty("notification.DispatcherWithGlobalAndProjectSubscribers.Email","true",56L,userId1);
  insertProperty("notification.DispatcherWithGlobalAndProjectSubscribers.Email","true",projectId,userId1);
  insertProperty("notification.DispatcherWithGlobalAndProjectSubscribers.Email","true",null,userId2);
  assertThat(underTest.selectNotificationSubscribers("NotSexyDispatcher","Email",projectKey)).isEmpty();
  assertThat(underTest.selectNotificationSubscribers("DispatcherWithGlobalSubscribers","Email",projectKey)).containsOnly("user2");
  assertThat(underTest.selectNotificationSubscribers("DispatcherWithGlobalSubscribers","Email",null)).containsOnly("user2");
  assertThat(underTest.selectNotificationSubscribers("DispatcherWithProjectSubscribers","Email",projectKey)).containsOnly("user1");
  assertThat(underTest.selectNotificationSubscribers("DispatcherWithGlobalAndProjectSubscribers","Email",projectKey)).containsOnly("user1","user2");
}
