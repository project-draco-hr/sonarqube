{
  ComponentDto project1=insertProject("uuid_45");
  ComponentDto project2=insertProject("uuid_56");
  long userId1=insertUser("user1");
  long userId2=insertUser("user2");
  long userId3=insertUser("user3");
  insertProperty("notification.NewViolations.Email","true",project1.getId(),userId2);
  insertProperty("notification.NewViolations.Twitter","true",null,userId3);
  insertProperty("notification.NewViolations.Twitter","true",project2.getId(),userId1);
  insertProperty("notification.NewViolations.Twitter","true",project2.getId(),userId3);
  assertThat(underTest.selectUsersForNotification("NewViolations","Email",null)).isEmpty();
  assertThat(underTest.selectUsersForNotification("NewViolations","Email","uuid_78")).isEmpty();
  assertThat(underTest.selectUsersForNotification("NewViolations","Email","uuid_45")).hasSize(1).containsOnly("user2");
  assertThat(underTest.selectUsersForNotification("NewViolations","Twitter",null)).hasSize(1).containsOnly("user3");
  assertThat(underTest.selectUsersForNotification("NewViolations","Twitter","uuid_78")).isEmpty();
  assertThat(underTest.selectUsersForNotification("NewViolations","Twitter","uuid_56")).hasSize(2).containsOnly("user1","user3");
}
