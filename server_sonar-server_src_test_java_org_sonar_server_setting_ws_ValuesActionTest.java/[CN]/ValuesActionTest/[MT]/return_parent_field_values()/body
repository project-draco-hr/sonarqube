{
  setUserAsSystemAdmin();
  ComponentDto module=componentDb.insertComponent(newModuleDto(project));
  ComponentDto subModule=componentDb.insertComponent(newModuleDto(module));
  propertyDefinitions.addComponent(PropertyDefinition.builder("foo").type(PropertyType.PROPERTY_SET).fields(asList(PropertyFieldDefinition.build("key").name("Key").build(),PropertyFieldDefinition.build("size").name("Size").build())).build());
  propertyDb.insertPropertySet("foo",null,ImmutableMap.of("key","keyG1","size","sizeG1"));
  propertyDb.insertPropertySet("foo",project,ImmutableMap.of("key","keyP1","size","sizeP1"));
  propertyDb.insertPropertySet("foo",module,ImmutableMap.of("key","keyM1","size","sizeM1"));
  assertParentFieldValues(executeRequestForComponentProperties(subModule,"foo").getSettings(0),ImmutableMap.of("key","keyM1","size","sizeM1"));
  assertParentFieldValues(executeRequestForComponentProperties(module,"foo").getSettings(0),ImmutableMap.of("key","keyP1","size","sizeP1"));
  assertParentFieldValues(executeRequestForComponentProperties(project,"foo").getSettings(0),ImmutableMap.of("key","keyG1","size","sizeG1"));
  assertParentFieldValues(executeRequestForGlobalProperties("foo").getSettings(0));
}
