{
  snapshotCache=mock(SnapshotCache.class);
  measureCache=mock(MeasureCache.class);
  DuplicationCache duplicationCache=mock(DuplicationCache.class);
  when(duplicationCache.entries()).thenReturn(Collections.<Cache.Entry<ArrayList<DuplicationGroup>>>emptyList());
  ResourceCache resourceCache=mock(ResourceCache.class);
  when(snapshotCache.get("foo")).thenReturn(projectSnapshot);
  when(snapshotCache.get("foo:org/foo")).thenReturn(packageSnapshot);
  when(resourceCache.get("foo")).thenReturn(project);
  when(resourceCache.get("foo:org/foo/Bar.java")).thenReturn(aFile);
  when(resourceCache.get("foo:org/foo")).thenReturn(aDirectory);
  measurePersister=new MeasurePersister(getMyBatis(),ruleFinder,measureCache,snapshotCache,resourceCache,duplicationCache,mock(MetricFinder.class));
}
