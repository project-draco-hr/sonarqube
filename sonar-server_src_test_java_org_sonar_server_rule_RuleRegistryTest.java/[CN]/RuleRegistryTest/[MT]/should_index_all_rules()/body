{
  int ruleId1=3;
  RuleDto rule1=new RuleDto();
  rule1.setRepositoryKey("repo");
  rule1.setRuleKey("key1");
  rule1.setId(ruleId1);
  rule1.setSeverity(1);
  rule1.setNoteData("noteData");
  rule1.setNoteUserLogin("userLogin");
  int ruleId2=4;
  RuleDto rule2=new RuleDto();
  rule2.setRepositoryKey("repo");
  rule2.setRuleKey("key2");
  rule2.setId(ruleId2);
  rule2.setSeverity(2);
  rule2.setParentId(ruleId1);
  List<RuleDto> rules=ImmutableList.of(rule1,rule2);
  RuleParamDto paramRule2=new RuleParamDto();
  paramRule2.setName("name");
  paramRule2.setRuleId(ruleId2);
  Multimap<Integer,RuleParamDto> params=ArrayListMultimap.create();
  params.put(ruleId2,paramRule2);
  RuleRuleTagDto systemTag1Rule2=new RuleRuleTagDto();
  systemTag1Rule2.setRuleId(ruleId2);
  systemTag1Rule2.setTag("tag1");
  systemTag1Rule2.setType(RuleTagType.SYSTEM);
  RuleRuleTagDto systemTag2Rule2=new RuleRuleTagDto();
  systemTag2Rule2.setRuleId(ruleId2);
  systemTag2Rule2.setTag("tag2");
  systemTag2Rule2.setType(RuleTagType.SYSTEM);
  RuleRuleTagDto adminTagRule2=new RuleRuleTagDto();
  adminTagRule2.setRuleId(ruleId2);
  adminTagRule2.setTag("tag");
  adminTagRule2.setType(RuleTagType.ADMIN);
  Multimap<Integer,RuleRuleTagDto> tags=ArrayListMultimap.create();
  tags.put(ruleId2,systemTag1Rule2);
  tags.put(ruleId2,systemTag2Rule2);
  tags.put(ruleId2,adminTagRule2);
  registry.bulkRegisterRules(rules,params,tags);
  assertThat(registry.findIds(ImmutableMap.of("repositoryKey","repo"))).hasSize(2);
  Map<String,Object> rule2Document=esSetup.client().prepareGet("rules","rule",Integer.toString(ruleId2)).execute().actionGet().getSourceAsMap();
  assertThat((List<String>)rule2Document.get(RuleDocument.FIELD_SYSTEM_TAGS)).hasSize(2);
  assertThat((List<String>)rule2Document.get(RuleDocument.FIELD_ADMIN_TAGS)).hasSize(1);
}
