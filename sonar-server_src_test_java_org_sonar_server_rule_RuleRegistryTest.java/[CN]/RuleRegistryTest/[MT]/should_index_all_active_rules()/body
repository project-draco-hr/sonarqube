{
  int id=1;
  int profileId=42;
  ActiveRule rule=mock(ActiveRule.class);
  when(rule.getId()).thenReturn(id);
  Rule refRule=Rule.create();
  refRule.setId(1);
  when(rule.getRule()).thenReturn(refRule);
  RulesProfile profile=mock(RulesProfile.class);
  when(profile.getId()).thenReturn(profileId);
  when(rule.getRulesProfile()).thenReturn(profile);
  ActiveRuleParam param=mock(ActiveRuleParam.class);
  when(param.getKey()).thenReturn("string");
  when(param.getValue()).thenReturn("polop");
  List<ActiveRuleParam> params=ImmutableList.of(param);
  when(rule.getActiveRuleParams()).thenReturn(params);
  List<ActiveRule> rules=ImmutableList.of(rule);
  when(session.getResults(ActiveRule.class)).thenReturn(rules);
  registry.bulkRegisterActiveRules();
  assertThat(esSetup.exists("rules","active_rule","1"));
  SearchHit[] parentHit=esSetup.client().prepareSearch("rules").setFilter(hasChildFilter("active_rule",termFilter("profileId",profileId))).execute().actionGet().getHits().getHits();
  assertThat(parentHit).hasSize(1);
  assertThat(parentHit[0].getId()).isEqualTo("1");
  SearchHit[] childHit=esSetup.client().prepareSearch("rules").setFilter(hasParentFilter("rule",termFilter("key","RuleWithParameters"))).execute().actionGet().getHits().getHits();
  assertThat(childHit).hasSize(1);
  assertThat(childHit[0].getId()).isEqualTo("1");
}
