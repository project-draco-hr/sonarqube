{
  final int start=_next;
  final int type=nextType(CLASS_MULTI_ARRAY,CLASS_REREF);
  if (type == CLASS_REREF) {
    _next=start;
    final Object array=get(null,null);
    if (array == null || array instanceof DisplayMarker || array.getClass().isArray()) {
      appendDisplayable(sb,array,quoted,true);
    }
 else {
      throw new ConversionException("Referenced object is not an array");
    }
  }
 else {
    try {
      _depth++;
      final int componentClassHandle=nextType();
      checkSize(1);
      final int dimensions=_bytes[_next++] & 0xFF;
      if (prototype == null) {
        prototype=Array.newInstance(classForHandle(componentClassHandle),new int[dimensions]).getClass();
      }
      final int length=decodeElementCount();
      _serializedItemCount++;
      registerEncodedObject(sb.length());
      sb.append('[');
      final Class<?> componentType=prototype.getComponentType();
      if (componentType.getComponentType().isArray()) {
        for (int index=0; index < length; index++) {
          if (index > 0)           sb.append(',');
          decodeDisplayableMultiArray(quoted,sb,context,componentType);
        }
      }
 else {
        for (int index=0; index < length; index++) {
          if (index > 0)           sb.append(',');
          decodeDisplayable(quoted,sb,context);
        }
      }
      sb.append(']');
    }
  finally {
      _depth--;
    }
    closeVariableLengthItem();
  }
}
