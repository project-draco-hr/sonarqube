{
  final int saveDepth=_depth;
  final int saveLevel=_level;
  final int saveNext=_next;
  final int saveEnd=_end;
  try {
    final int classHandle=nextType();
    if (classHandle == CLASS_REREF) {
      final int base=_bytes[_next++] & 0xFF;
      final int handle=decodeVariableLengthInt(base);
      final Object object=getValueCache().get(handle);
      if (object == null) {
        throw new IllegalStateException("Reference to handle " + handle + " has no value");
      }
      return object.getClass();
    }
 else     if (classHandle > 0 && classHandle < CLASSES.length && CLASSES[classHandle] != null) {
      return CLASSES[classHandle];
    }
 else     if (classHandle == CLASS_ARRAY) {
      _depth++;
      final int componentClassHandle=nextType();
      return arrayClass(classForHandle(componentClassHandle),1);
    }
 else     if (classHandle == CLASS_MULTI_ARRAY) {
      _depth++;
      final int componentClassHandle=nextType();
      checkSize(1);
      final int dimensions=_bytes[_next++] & 0xFF;
      return arrayClass(classForHandle(componentClassHandle),dimensions);
    }
 else     return classForHandle(classHandle);
  }
  finally {
    _end=saveEnd;
    _next=saveNext;
    _level=saveLevel;
    _depth=saveDepth;
  }
}
