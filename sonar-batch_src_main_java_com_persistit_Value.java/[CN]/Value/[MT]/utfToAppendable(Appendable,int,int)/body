{
  final int counter=0;
  for (int i=offset; i < end; i++) {
    final int b=_bytes[i] & 0xFF;
    int b2;
    int b3;
switch (b >> 4) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
      Util.append(sb,(char)b);
    break;
case 12:
case 13:
  i++;
if (i >= _end) {
  throw new ConversionException();
}
b2=_bytes[i];
if ((b2 & 0xC0) != 0x80) {
throw new ConversionException();
}
Util.append(sb,(char)(((b & 0x1F) << 6) | (b2 & 0x3F)));
break;
case 14:
i+=2;
if (i >= _end) {
throw new ConversionException();
}
b2=_bytes[i - 1];
b3=_bytes[i];
if (((b2 & 0xC0) != 0x80) || ((b3 & 0xC0) != 0x80)) {
throw new ConversionException();
}
Util.append(sb,(char)(((b & 0x0F) << 12) | ((b2 & 0x3F) << 6) | ((b3 & 0x3F) << 0)));
break;
default :
throw new ConversionException();
}
}
return counter;
}
