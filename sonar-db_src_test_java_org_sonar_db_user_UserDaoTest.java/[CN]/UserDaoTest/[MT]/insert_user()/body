{
  Long date=DateUtils.parseDate("2014-06-20").getTime();
  UserDto userDto=new UserDto().setId(1L).setLogin("john").setName("John").setEmail("jo@hn.com").setScmAccounts(",jo.hn,john2,").setActive(true).setSalt("1234").setCryptedPassword("abcd").setExternalIdentity("johngithub").setExternalIdentityProvider("github").setLocal(true).setRememberToken("1234").setRememberTokenExpiresAt(new Date()).setCreatedAt(date).setUpdatedAt(date);
  underTest.insert(db.getSession(),userDto);
  db.getSession().commit();
  UserDto user=underTest.selectActiveUserByLogin("john");
  assertThat(user).isNotNull();
  assertThat(user.getId()).isNotNull();
  assertThat(user.getLogin()).isEqualTo("john");
  assertThat(user.getName()).isEqualTo("John");
  assertThat(user.getEmail()).isEqualTo("jo@hn.com");
  assertThat(user.isActive()).isTrue();
  assertThat(user.getScmAccounts()).isEqualTo(",jo.hn,john2,");
  assertThat(user.getSalt()).isEqualTo("1234");
  assertThat(user.getCryptedPassword()).isEqualTo("abcd");
  assertThat(user.getExternalIdentity()).isEqualTo("johngithub");
  assertThat(user.getExternalIdentityProvider()).isEqualTo("github");
  assertThat(user.isLocal()).isTrue();
  assertThat(user.getRememberToken()).isEqualTo("1234");
  assertThat(user.getRememberTokenExpiresAt()).isNotNull();
  assertThat(user.getCreatedAt()).isEqualTo(date);
  assertThat(user.getUpdatedAt()).isEqualTo(date);
}
