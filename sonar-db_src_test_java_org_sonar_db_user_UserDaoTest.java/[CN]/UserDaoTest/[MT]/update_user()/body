{
  UserDto existingUser=new UserDto().setLogin("john").setName("John").setEmail("jo@hn.com").setCreatedAt(1418215735482L).setUpdatedAt(1418215735482L).setActive(true).setLocal(true);
  db.getDbClient().userDao().insert(db.getSession(),existingUser);
  db.getSession().commit();
  UserDto userDto=new UserDto().setId(1L).setLogin("john").setName("John Doo").setEmail("jodoo@hn.com").setScmAccounts(",jo.hn,john2,johndoo,").setActive(false).setSalt("12345").setCryptedPassword("abcde").setExternalIdentity("johngithub").setExternalIdentityProvider("github").setLocal(false).setUpdatedAt(1500000000000L);
  underTest.update(db.getSession(),userDto);
  db.getSession().commit();
  UserDto user=underTest.selectUserById(db.getSession(),existingUser.getId());
  assertThat(user).isNotNull();
  assertThat(user.getId()).isEqualTo(existingUser.getId());
  assertThat(user.getLogin()).isEqualTo("john");
  assertThat(user.getName()).isEqualTo("John Doo");
  assertThat(user.getEmail()).isEqualTo("jodoo@hn.com");
  assertThat(user.isActive()).isFalse();
  assertThat(user.getScmAccounts()).isEqualTo(",jo.hn,john2,johndoo,");
  assertThat(user.getSalt()).isEqualTo("12345");
  assertThat(user.getCryptedPassword()).isEqualTo("abcde");
  assertThat(user.getExternalIdentity()).isEqualTo("johngithub");
  assertThat(user.getExternalIdentityProvider()).isEqualTo("github");
  assertThat(user.isLocal()).isFalse();
  assertThat(user.getCreatedAt()).isEqualTo(1418215735482L);
  assertThat(user.getUpdatedAt()).isEqualTo(1500000000000L);
}
