{
  return new AbstractCollection(){
    public Iterator iterator(){
      return new OrderedIterator(VALUE);
    }
    public boolean remove(    Object value){
      if (value == null) {
        for (Entry pos=sentinel.next; pos != sentinel; pos=pos.next) {
          if (pos.getValue() == null) {
            SequencedHashMap.this.removeImpl(pos.getKey());
            return true;
          }
        }
      }
 else {
        for (Entry pos=sentinel.next; pos != sentinel; pos=pos.next) {
          if (value.equals(pos.getValue())) {
            SequencedHashMap.this.removeImpl(pos.getKey());
            return true;
          }
        }
      }
      return false;
    }
    public void clear(){
      SequencedHashMap.this.clear();
    }
    public int size(){
      return SequencedHashMap.this.size();
    }
    public boolean isEmpty(){
      return SequencedHashMap.this.isEmpty();
    }
    public boolean contains(    Object o){
      return SequencedHashMap.this.containsValue(o);
    }
  }
;
}
