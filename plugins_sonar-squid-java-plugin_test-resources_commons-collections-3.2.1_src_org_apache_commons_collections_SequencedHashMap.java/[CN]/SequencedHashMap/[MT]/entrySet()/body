{
  return new AbstractSet(){
    private Entry findEntry(    Object o){
      if (o == null)       return null;
      if (!(o instanceof Map.Entry))       return null;
      Map.Entry e=(Map.Entry)o;
      Entry entry=(Entry)entries.get(e.getKey());
      if (entry != null && entry.equals(e))       return entry;
 else       return null;
    }
    public Iterator iterator(){
      return new OrderedIterator(ENTRY);
    }
    public boolean remove(    Object o){
      Entry e=findEntry(o);
      if (e == null)       return false;
      return SequencedHashMap.this.removeImpl(e.getKey()) != null;
    }
    public void clear(){
      SequencedHashMap.this.clear();
    }
    public int size(){
      return SequencedHashMap.this.size();
    }
    public boolean isEmpty(){
      return SequencedHashMap.this.isEmpty();
    }
    public boolean contains(    Object o){
      return findEntry(o) != null;
    }
  }
;
}
