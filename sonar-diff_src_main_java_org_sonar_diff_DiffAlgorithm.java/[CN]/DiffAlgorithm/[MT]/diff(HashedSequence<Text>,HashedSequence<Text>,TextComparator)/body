{
  HashedSequenceComparator<Text> comparator=new HashedSequenceComparator<Text>(cmp);
  Edit lastEdit=null;
  List<Edit> r=Lists.newArrayList();
  int m=s.length();
  int n=t.length();
  int q=0;
  while (q < n) {
    int l=0;
    int p=0;
    int pCur=0;
    while ((pCur + l < m) && (q + l < n)) {
      int lCur=0;
      while ((pCur + lCur < m) && (q + lCur < n) && (comparator.equals(s,pCur + lCur,t,q + lCur))) {
        lCur++;
      }
      if (lCur > l) {
        l=lCur;
        p=pCur;
      }
      pCur++;
    }
    if (l > 0) {
      Edit edit=new Edit(Edit.Type.MOVE,p,p + l - 1,q,q + l - 1);
      r.add(edit);
      lastEdit=edit;
      q+=l;
    }
 else {
      if (lastEdit == null || lastEdit.getType() != Edit.Type.INSERT) {
        Edit edit=new Edit(Edit.Type.INSERT,-1,-1,q,q);
        r.add(edit);
        lastEdit=edit;
      }
 else {
        lastEdit.endB++;
      }
      q++;
    }
  }
  return r;
}
