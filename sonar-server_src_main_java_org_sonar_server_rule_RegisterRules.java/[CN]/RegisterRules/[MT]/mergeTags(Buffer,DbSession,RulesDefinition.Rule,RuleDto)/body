{
  Set<String> existingSystemTags=Sets.newHashSet();
  Collection<RuleRuleTagDto> tagDtos=ImmutableList.copyOf(buffer.tagsForRuleId(dto.getId()));
  for (  RuleRuleTagDto tagDto : tagDtos) {
    String tag=tagDto.getTag();
    if (tagDto.getType() == RuleTagType.SYSTEM) {
      if (!ruleDef.tags().contains(tag)) {
        ruleDao.deleteTag(tagDto,sqlSession);
        buffer.remove(tagDto);
      }
 else {
        existingSystemTags.add(tagDto.getTag());
      }
    }
 else {
      if (ruleDef.tags().contains(tag)) {
        long tagId=getOrCreateReferenceTagId(buffer,tag,sqlSession);
        tagDto.setId(tagId);
        tagDto.setType(RuleTagType.SYSTEM);
        ruleDao.update(tagDto,sqlSession);
        existingSystemTags.add(tag);
      }
    }
  }
  for (  String tag : ruleDef.tags()) {
    if (!existingSystemTags.contains(tag)) {
      long tagId=getOrCreateReferenceTagId(buffer,tag,sqlSession);
      RuleRuleTagDto newTagDto=new RuleRuleTagDto().setRuleId(dto.getId()).setTagId(tagId).setTag(tag).setType(RuleTagType.SYSTEM);
      ruleDao.insert(newTagDto,sqlSession);
      buffer.add(newTagDto);
    }
  }
}
