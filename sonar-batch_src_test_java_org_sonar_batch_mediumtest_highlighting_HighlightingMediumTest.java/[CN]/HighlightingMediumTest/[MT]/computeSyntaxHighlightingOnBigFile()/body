{
  File baseDir=temp.newFolder();
  File srcDir=new File(baseDir,"src");
  srcDir.mkdir();
  int nbFiles=100;
  int ruleCount=100000;
  int nblines=1000;
  int linesize=ruleCount / nblines;
  for (int nb=1; nb <= nbFiles; nb++) {
    File xooFile=new File(srcDir,"sample" + nb + ".xoo");
    File xoohighlightingFile=new File(srcDir,"sample" + nb + ".xoo.highlighting");
    FileUtils.write(xooFile,StringUtils.repeat(StringUtils.repeat("a",linesize) + "\n",nblines));
    StringBuilder sb=new StringBuilder(16 * ruleCount);
    for (int i=0; i < ruleCount; i++) {
      sb.append(i).append(":").append(i + 1).append(":s\n");
    }
    FileUtils.write(xoohighlightingFile,sb.toString());
  }
  long start=System.currentTimeMillis();
  TaskResult result=tester.newTask().properties(ImmutableMap.<String,String>builder().put("sonar.projectBaseDir",baseDir.getAbsolutePath()).put("sonar.projectKey","com.foo.project").put("sonar.projectName","Foo Project").put("sonar.projectVersion","1.0-SNAPSHOT").put("sonar.projectDescription","Description of Foo Project").put("sonar.sources","src").build()).start();
  System.out.println("Duration: " + (System.currentTimeMillis() - start));
}
