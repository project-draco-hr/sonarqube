{
  DefaultIssue issue1=new DefaultIssue();
  issue1.setKey("uuid");
  issue1.setSeverity("MAJOR");
  issue1.setRuleKey(RuleKey.of("repo","rule"));
  DefaultIssue issue2=new DefaultIssue();
  issue2.setKey("uuid2");
  issue2.setSeverity("MAJOR");
  issue2.setRuleKey(RuleKey.of("repo","rule"));
  issue2.setLine(2);
  issue2.setMessage("msg");
  issue2.setEffortToFix(2d);
  issue2.setDebt(Duration.create(2));
  issue2.setResolution("FIXED");
  issue2.setStatus("RESOLVED");
  issue2.setChecksum("checksum");
  issue2.setReporter("reporter");
  issue2.setAssignee("assignee");
  issue2.setActionPlanKey("action");
  issue2.setAuthorLogin("author");
  issue2.setCurrentChange(new FieldDiffs().setUserLogin("foo"));
  issue2.setCreationDate(new Date());
  issue2.setUpdateDate(new Date());
  issue2.setCloseDate(new Date());
  issue2.setSelectedAt(1234L);
  when(issueCache.byComponent("foo:src/Foo.php")).thenReturn(Arrays.asList(issue1,issue2));
  File outputDir=temp.newFolder();
  BatchReportWriter writer=new BatchReportWriter(outputDir);
  underTest.publish(writer);
  BatchReportReader reader=new BatchReportReader(outputDir);
  assertThat(reader.readComponentIssues(1)).hasSize(0);
  assertThat(reader.readComponentIssues(2)).hasSize(2);
}
