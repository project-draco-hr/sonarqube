{
  Gson gson=new Gson();
  StringWriter output=new StringWriter();
  JsonWriter writer=null;
  try {
    writer=new JsonWriter(output);
    writer.beginArray();
    for (    Resource resource : resources) {
      List<Map<String,Object>> resourceViolations=Lists.newArrayList();
      for (      Violation violation : getViolations(resource)) {
        Map<String,Object> json=Maps.newLinkedHashMap();
        if (null != violation.getLineId()) {
          json.put("line",violation.getLineId());
        }
        json.put("message",violation.getMessage());
        json.put("severity",violation.getSeverity().name());
        json.put("rule_key",violation.getRule().getKey());
        json.put("rule_name",violation.getRule().getName());
        resourceViolations.add(json);
      }
      Map<String,Object> obj=ImmutableMap.of("resource",resource.getKey(),"violations",resourceViolations);
      gson.toJson(obj,Map.class,writer);
    }
    writer.endArray();
  }
 catch (  IOException e) {
    throw new SonarException("Unable to export results",e);
  }
 finally {
    Closeables.closeQuietly(writer);
  }
  return output.toString();
}
