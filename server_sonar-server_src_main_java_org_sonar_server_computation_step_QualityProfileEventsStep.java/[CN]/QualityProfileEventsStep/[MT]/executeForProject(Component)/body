{
  Optional<Measure> baseMeasure=measureRepository.getBaseMeasure(projectComponent,metricRepository.getByKey(CoreMetrics.QUALITY_PROFILES_KEY));
  if (!baseMeasure.isPresent()) {
    return;
  }
  Optional<Measure> rawMeasure=measureRepository.getRawMeasure(projectComponent,metricRepository.getByKey(CoreMetrics.QUALITY_PROFILES_KEY));
  if (!rawMeasure.isPresent()) {
    throw new IllegalStateException("Missing measure " + CoreMetrics.QUALITY_PROFILES + " for component "+ projectComponent.getRef());
  }
  Map<String,QualityProfile> rawProfiles=QPMeasureData.fromJson(rawMeasure.get().getStringValue()).getProfilesByKey();
  Map<String,QualityProfile> baseProfiles=parseJsonData(baseMeasure);
  detectNewOrUpdatedProfiles(projectComponent,baseProfiles,rawProfiles);
  detectNoMoreUsedProfiles(projectComponent,baseProfiles,rawProfiles);
}
