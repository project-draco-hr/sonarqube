{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(1,line_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getSourceBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(3,getScmRevisionBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(4,getScmAuthorBytes());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(5,scmDate_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(6,utLineHits_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(7,utConditions_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(8,utCoveredConditions_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(9,itLineHits_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(10,itConditions_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(11,itCoveredConditions_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(12,overallLineHits_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(13,overallConditions_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(14,overallCoveredConditions_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(15,getHighlightingBytes());
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(16,getSymbolsBytes());
  }
{
    int dataSize=0;
    for (int i=0; i < duplications_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(duplications_.get(i));
    }
    size+=dataSize;
    size+=2 * getDuplicationsList().size();
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
