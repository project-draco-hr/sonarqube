{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeInt32(1,line_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeBytes(2,getSourceBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeBytes(3,getScmRevisionBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeBytes(4,getScmAuthorBytes());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeInt64(5,scmDate_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeInt32(6,utLineHits_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeInt32(7,utConditions_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeInt32(8,utCoveredConditions_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeInt32(9,itLineHits_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeInt32(10,itConditions_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeInt32(11,itCoveredConditions_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeInt32(12,overallLineHits_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeInt32(13,overallConditions_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeInt32(14,overallCoveredConditions_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeBytes(15,getHighlightingBytes());
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeBytes(16,getSymbolsBytes());
  }
  if (getDuplicationList().size() > 0) {
    output.writeRawVarint32(138);
    output.writeRawVarint32(duplicationMemoizedSerializedSize);
  }
  for (int i=0; i < duplication_.size(); i++) {
    output.writeInt32NoTag(duplication_.get(i));
  }
  getUnknownFields().writeTo(output);
}
