{
  MockUserSession.set().setLogin("admin").addProjectPermissions(UserRole.ADMIN,project.key());
  UserDto user=new UserDto().setLogin("john").setName("John");
  db.userDao().insert(session,user);
  session.commit();
  assertThat(tester.get(RoleDao.class).selectUserPermissions(session,user.getLogin(),project.getId())).isEmpty();
  assertThat(index.getNullableByKey(project.uuid())).isNull();
  service.addPermission(params(user.getLogin(),null,project.key(),UserRole.USER));
  session.commit();
  assertThat(tester.get(RoleDao.class).selectUserPermissions(session,user.getLogin(),project.getId())).hasSize(1);
  IssueAuthorizationDoc issueAuthorizationDoc=index.getNullableByKey(project.uuid());
  assertThat(issueAuthorizationDoc).isNotNull();
  assertThat(issueAuthorizationDoc.project()).isEqualTo(project.uuid());
  assertThat(issueAuthorizationDoc.permission()).isEqualTo(UserRole.USER);
  assertThat(issueAuthorizationDoc.users()).containsExactly(user.getLogin());
  assertThat(issueAuthorizationDoc.groups()).isEmpty();
}
