{
  userSessionRule.login("admin").addProjectPermissions(UserRole.ADMIN,project.key());
  UserDto user=new UserDto().setLogin("user1").setName("User1");
  db.userDao().insert(session,user);
  session.commit();
  service.addPermission(params(user.getLogin(),null,project.key(),UserRole.USER));
  service.removePermission(params(user.getLogin(),null,project.key(),UserRole.USER));
  session.commit();
  assertThat(tester.get(RoleDao.class).selectUserPermissions(session,user.getLogin(),project.getId())).isEmpty();
  SearchResponse docs=getAllIndexDocs();
  assertThat(docs.getHits().getTotalHits()).isEqualTo(1L);
  SearchHit doc=docs.getHits().getAt(0);
  assertThat((Collection)doc.sourceAsMap().get(IssueIndexDefinition.FIELD_AUTHORIZATION_USERS)).hasSize(0);
  assertThat((Collection)doc.sourceAsMap().get(IssueIndexDefinition.FIELD_AUTHORIZATION_GROUPS)).hasSize(0);
}
