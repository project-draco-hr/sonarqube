{
  try {
    matcher.reset(this);
    if (matcher.lookingAt()) {
      if (afterMatcher != null) {
        afterMatcher.reset(this);
        afterMatcher.region(matcher.end(),length());
        if (!afterMatcher.lookingAt()) {
          return -1;
        }
      }
      previousCursor=getCursor().clone();
      for (int i=0; i < matcher.end(); i++) {
        appendable.append((char)pop());
      }
      return matcher.end();
    }
  }
 catch (  StackOverflowError e) {
    throw new ChannelException("Unable to apply regular expression '" + matcher.pattern().pattern() + "' at line "+ getCursor().getLine()+ " and column "+ getCursor().getColumn()+ ", because it led to a stack overflow error."+ " This error may be due to an inefficient use of alternations - see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5050507",e);
  }
catch (  IndexOutOfBoundsException e) {
    return -1;
  }
catch (  IOException e) {
    throw new ChannelException(e.getMessage(),e);
  }
  return -1;
}
