{
  BatchReport.Issue.Builder builder=BatchReport.Issue.newBuilder();
  builder.setUuid(issue.key());
  builder.setIsNew(issue.isNew());
  builder.setSeverity(Constants.Severity.valueOf(issue.severity()));
  builder.setRuleRepository(issue.ruleKey().repository());
  builder.setRuleKey(issue.ruleKey().rule());
  builder.setAttributes(KeyValueFormat.format(issue.attributes()));
  builder.addAllTags(issue.tags());
  builder.setMustSendNotification(issue.mustSendNotifications());
  builder.setIsChanged(issue.isChanged());
  Integer line=issue.line();
  if (line != null) {
    builder.setLine(line);
  }
  String message=issue.message();
  if (message != null) {
    builder.setMsg(message);
  }
  Double effortToFix=issue.effortToFix();
  if (effortToFix != null) {
    builder.setEffortToFix(effortToFix);
  }
  Long debtInMinutes=issue.debtInMinutes();
  if (debtInMinutes != null) {
    builder.setDebtInMinutes(debtInMinutes);
  }
  String resolution=issue.resolution();
  if (resolution != null) {
    builder.setResolution(resolution);
  }
  String status=issue.status();
  if (status != null) {
    builder.setStatus(status);
  }
  String checksum=issue.checksum();
  if (checksum != null) {
    builder.setChecksum(checksum);
  }
  builder.setManualSeverity(issue.manualSeverity());
  String reporter=issue.reporter();
  if (reporter != null) {
    builder.setReporter(reporter);
  }
  String assignee=issue.assignee();
  if (assignee != null) {
    builder.setAssignee(assignee);
  }
  String actionPlanKey=issue.actionPlanKey();
  if (actionPlanKey != null) {
    builder.setActionPlanKey(actionPlanKey);
  }
  String authorLogin=issue.authorLogin();
  if (authorLogin != null) {
    builder.setAuthorLogin(authorLogin);
  }
  String diff=diffsToString(issue.currentChange());
  if (diff != null) {
    builder.setDiffFields(diff);
  }
  Date creationDate=issue.creationDate();
  if (creationDate != null) {
    builder.setCreationDate(creationDate.getTime());
  }
  Long selectedAt=issue.selectedAt();
  if (selectedAt != null) {
    builder.setSelectedAt(selectedAt);
  }
  Date closeDate=issue.closeDate();
  if (closeDate != null) {
    builder.setCloseDate(closeDate.getTime());
  }
  Date updateDate=issue.updateDate();
  if (updateDate != null) {
    builder.setUpdateDate(updateDate.getTime());
  }
  return builder.build();
}
