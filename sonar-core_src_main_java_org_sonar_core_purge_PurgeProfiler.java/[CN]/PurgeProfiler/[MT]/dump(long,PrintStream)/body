{
  List<Entry<String,Long>> data=new ArrayList<Map.Entry<String,Long>>(durations.entrySet());
  Collections.sort(data,new Comparator<Entry<String,Long>>(){
    @Override public int compare(    Entry<String,Long> o1,    Entry<String,Long> o2){
      return o2.getValue().compareTo(o1.getValue());
    }
  }
);
  double percent=totalTime / 100.0;
  for (  Entry<String,Long> entry : truncateList(data)) {
    StringBuilder sb=new StringBuilder();
    sb.append("   o ").append(entry.getKey()).append(": ").append(TimeUtils.formatDuration(entry.getValue())).append(" (").append((int)(entry.getValue() / percent)).append("%)");
    stream.println(sb.toString());
  }
}
