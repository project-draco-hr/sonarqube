{
switch (action) {
case "open":
    open(param1);
  return this;
case "type":
type(param1,param2);
return this;
case "keyPressAndWait":
keyPressAndWait(param1,param2);
return this;
case "select":
select(param1,param2);
return this;
case "clickAndWait":
case "click":
click(param1);
return this;
case "check":
check(param1);
return this;
case "selectFrame":
selectFrame(param1);
return this;
case "assertElementPresent":
assertElementPresent(param1);
return this;
case "assertElementNotPresent":
assertElementNotPresent(param1);
return this;
case "storeText":
storeText(param1,param2);
return this;
case "storeEval":
storeEval(param1,param2);
return this;
case "store":
store(param1,param2);
return this;
case "assertText":
case "waitForText":
assertText(param1,param2);
return this;
case "assertNotText":
case "waitForNotText":
assertNotText(param1,param2);
return this;
case "assertTextPresent":
assertTextPresent(param1);
return this;
case "assertTextNotPresent":
assertTextNotPresent(param1);
return this;
case "assertLocation":
assertLocation(param1);
return this;
case "waitForElementPresent":
waitForElementPresent(param1,param2);
return this;
case "waitForElementNotPresent":
waitForElementNotPresent(param1,param2);
return this;
case "waitForVisible":
waitForVisible(param1);
return this;
case "assertValue":
case "waitForValue":
case "verifyValue":
assertInputValue(param1,param2);
return this;
case "assertConfirmation":
confirm(param1);
return this;
case "setTimeout":
case "pause":
return this;
}
throw new IllegalArgumentException("Unsupported action: " + action);
}
