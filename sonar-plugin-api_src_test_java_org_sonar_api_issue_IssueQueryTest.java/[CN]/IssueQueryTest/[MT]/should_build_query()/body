{
  IssueQuery query=IssueQuery.builder().issueKeys(newArrayList("ABCDE")).severities(newArrayList(Severity.BLOCKER)).statuses(newArrayList(Issue.STATUS_RESOLVED)).resolutions(newArrayList(Issue.RESOLUTION_FALSE_POSITIVE)).components(newArrayList("org/struts/Action.java")).componentRoots(newArrayList("org.struts:core")).rules(newArrayList(RuleKey.of("squid","AvoidCycle"))).actionPlans(newArrayList("AP1","AP2")).reporters(newArrayList("crunky")).assignees(newArrayList("gargantua")).assigned(true).createdAfter(new Date()).createdBefore(new Date()).planned(true).resolved(true).sort(IssueQuery.SORT_BY_ASSIGNEE).asc(true).pageSize(10).pageIndex(2).requiredRole(UserRole.USER).build();
  assertThat(query.issueKeys()).containsOnly("ABCDE");
  assertThat(query.severities()).containsOnly(Severity.BLOCKER);
  assertThat(query.statuses()).containsOnly(Issue.STATUS_RESOLVED);
  assertThat(query.resolutions()).containsOnly(Issue.RESOLUTION_FALSE_POSITIVE);
  assertThat(query.components()).containsOnly("org/struts/Action.java");
  assertThat(query.componentRoots()).containsOnly("org.struts:core");
  assertThat(query.reporters()).containsOnly("crunky");
  assertThat(query.assignees()).containsOnly("gargantua");
  assertThat(query.assigned()).isTrue();
  assertThat(query.rules()).containsOnly(RuleKey.of("squid","AvoidCycle"));
  assertThat(query.actionPlans()).containsOnly("AP1","AP2");
  assertThat(query.createdAfter()).isNotNull();
  assertThat(query.createdBefore()).isNotNull();
  assertThat(query.planned()).isTrue();
  assertThat(query.resolved()).isTrue();
  assertThat(query.sort()).isEqualTo(IssueQuery.SORT_BY_ASSIGNEE);
  assertThat(query.asc()).isTrue();
  assertThat(query.pageSize()).isEqualTo(10);
  assertThat(query.pageIndex()).isEqualTo(2);
  assertThat(query.requiredRole()).isEqualTo(UserRole.USER);
}
