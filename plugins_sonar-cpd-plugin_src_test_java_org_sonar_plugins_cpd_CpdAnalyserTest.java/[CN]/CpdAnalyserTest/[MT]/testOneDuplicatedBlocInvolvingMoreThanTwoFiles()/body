{
  ProjectFileSystem fileSystem=mock(ProjectFileSystem.class);
  when(fileSystem.getSourceDirs()).thenReturn(Collections.<File>emptyList());
  File file1=new File("target/tmp/file1.ext");
  File file2=new File("target/tmp/file2.ext");
  File file3=new File("target/tmp/file3.ext");
  File file4=new File("target/tmp/file4.ext");
  Project project=new Project("key").setFileSystem(fileSystem);
  SensorContext context=mock(SensorContext.class);
  CpdMapping cpdMapping=mock(CpdMapping.class);
  Resource resource1=new JavaFile("foo.Foo");
  Resource resource2=new JavaFile("foo.Bar");
  Resource resource3=new JavaFile("foo.Hotel");
  Resource resource4=new JavaFile("foo.Coffee");
  when(cpdMapping.createResource((File)anyObject(),anyList())).thenReturn(resource1).thenReturn(resource2).thenReturn(resource3).thenReturn(resource4).thenReturn(resource2).thenReturn(resource1).thenReturn(resource3).thenReturn(resource4).thenReturn(resource3).thenReturn(resource1).thenReturn(resource2).thenReturn(resource4).thenReturn(resource4).thenReturn(resource1).thenReturn(resource2).thenReturn(resource3);
  when(context.saveResource(resource1)).thenReturn("key1");
  when(context.saveResource(resource2)).thenReturn("key2");
  when(context.saveResource(resource3)).thenReturn("key3");
  when(context.saveResource(resource4)).thenReturn("key4");
  Match match=new Match(5,createTokenEntry(file1.getAbsolutePath(),5),createTokenEntry(file2.getAbsolutePath(),15));
  match.setLineCount(200);
  Set<TokenEntry> tokenEntries=new LinkedHashSet<TokenEntry>();
  tokenEntries.add(createTokenEntry(file1.getAbsolutePath(),5));
  tokenEntries.add(createTokenEntry(file2.getAbsolutePath(),15));
  tokenEntries.add(createTokenEntry(file3.getAbsolutePath(),7));
  tokenEntries.add(createTokenEntry(file4.getAbsolutePath(),10));
  match.setMarkSet(tokenEntries);
  CpdAnalyser cpdAnalyser=new CpdAnalyser(project,context,cpdMapping);
  cpdAnalyser.analyse(Arrays.asList(match).iterator());
  verify(context).saveMeasure(resource1,CoreMetrics.DUPLICATED_FILES,1d);
  verify(context).saveMeasure(resource1,CoreMetrics.DUPLICATED_BLOCKS,1d);
  verify(context).saveMeasure(resource1,CoreMetrics.DUPLICATED_LINES,200d);
  verify(context).saveMeasure(eq(resource1),argThat(new IsMeasure(CoreMetrics.DUPLICATIONS_DATA,"<duplications>" + "<duplication lines=\"200\" start=\"5\" target-start=\"15\" target-resource=\"key2\"/>" + "<duplication lines=\"200\" start=\"5\" target-start=\"7\" target-resource=\"key3\"/>"+ "<duplication lines=\"200\" start=\"5\" target-start=\"10\" target-resource=\"key4\"/>"+ "</duplications>")));
  verify(context).saveMeasure(resource3,CoreMetrics.DUPLICATED_FILES,1d);
  verify(context).saveMeasure(resource3,CoreMetrics.DUPLICATED_LINES,200d);
  verify(context).saveMeasure(resource3,CoreMetrics.DUPLICATED_BLOCKS,1d);
  verify(context).saveMeasure(eq(resource2),argThat(new IsMeasure(CoreMetrics.DUPLICATIONS_DATA,"<duplications>" + "<duplication lines=\"200\" start=\"15\" target-start=\"5\" target-resource=\"key1\"/>" + "<duplication lines=\"200\" start=\"15\" target-start=\"7\" target-resource=\"key3\"/>"+ "<duplication lines=\"200\" start=\"15\" target-start=\"10\" target-resource=\"key4\"/>"+ "</duplications>")));
  verify(context).saveMeasure(resource2,CoreMetrics.DUPLICATED_FILES,1d);
  verify(context).saveMeasure(resource2,CoreMetrics.DUPLICATED_LINES,200d);
  verify(context).saveMeasure(resource2,CoreMetrics.DUPLICATED_BLOCKS,1d);
  verify(context).saveMeasure(eq(resource3),argThat(new IsMeasure(CoreMetrics.DUPLICATIONS_DATA,"<duplications>" + "<duplication lines=\"200\" start=\"7\" target-start=\"5\" target-resource=\"key1\"/>" + "<duplication lines=\"200\" start=\"7\" target-start=\"15\" target-resource=\"key2\"/>"+ "<duplication lines=\"200\" start=\"7\" target-start=\"10\" target-resource=\"key4\"/>"+ "</duplications>")));
  verify(context).saveMeasure(resource4,CoreMetrics.DUPLICATED_LINES,200d);
  verify(context).saveMeasure(resource4,CoreMetrics.DUPLICATED_FILES,1d);
  verify(context).saveMeasure(resource4,CoreMetrics.DUPLICATED_BLOCKS,1d);
  verify(context).saveMeasure(eq(resource4),argThat(new IsMeasure(CoreMetrics.DUPLICATIONS_DATA,"<duplications>" + "<duplication lines=\"200\" start=\"10\" target-start=\"5\" target-resource=\"key1\"/>" + "<duplication lines=\"200\" start=\"10\" target-start=\"15\" target-resource=\"key2\"/>"+ "<duplication lines=\"200\" start=\"10\" target-start=\"7\" target-resource=\"key3\"/>"+ "</duplications>")));
  verify(context,atLeastOnce()).saveResource(resource1);
  verify(context,atLeastOnce()).saveResource(resource2);
  verify(context,atLeastOnce()).saveResource(resource3);
  verify(context,atLeastOnce()).saveResource(resource4);
}
