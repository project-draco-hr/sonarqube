{
  if (prototype == null) {
    return ConstantFactory.NULL_INSTANCE;
  }
  try {
    Method method=prototype.getClass().getMethod("clone",(Class[])null);
    return new PrototypeCloneFactory(prototype,method);
  }
 catch (  NoSuchMethodException ex) {
    try {
      prototype.getClass().getConstructor(new Class[]{prototype.getClass()});
      return new InstantiateFactory(prototype.getClass(),new Class[]{prototype.getClass()},new Object[]{prototype});
    }
 catch (    NoSuchMethodException ex2) {
      if (prototype instanceof Serializable) {
        return new PrototypeSerializationFactory((Serializable)prototype);
      }
    }
  }
  throw new IllegalArgumentException("The prototype must be cloneable via a public clone method");
}
