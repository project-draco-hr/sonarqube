{
  SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm");
  IssueQuery query=IssueQuery.create().issues("ABCDE","FGHIJ").assignees("arthur","perceval").assigned(true).planned(true).components("Action.java","Filter.java").componentRoots("struts").resolutions("FIXED","FALSE-POSITIVE").resolved(true).rules("squid:AvoidCycle").actionPlans("ABC").statuses("OPEN","CLOSED").severities("BLOCKER","INFO").reporters("login1","login2").createdBefore(df.parse("2015-12-13T05:59")).createdAfter(df.parse("2012-01-23T13:40")).sort("ASSIGNEE").asc(false).pageSize(5).pageIndex(4);
  assertThat(query.urlParams()).hasSize(19);
  assertThat(query.urlParams()).includes(entry("issues","ABCDE,FGHIJ"));
  assertThat(query.urlParams()).includes(entry("assignees","arthur,perceval"));
  assertThat(query.urlParams()).includes(entry("assigned",true));
  assertThat(query.urlParams()).includes(entry("planned",true));
  assertThat(query.urlParams()).includes(entry("components","Action.java,Filter.java"));
  assertThat(query.urlParams()).includes(entry("componentRoots","struts"));
  assertThat(query.urlParams()).includes(entry("rules","squid:AvoidCycle"));
  assertThat(query.urlParams()).includes(entry("actionPlans","ABC"));
  assertThat(query.urlParams()).includes(entry("resolutions","FIXED,FALSE-POSITIVE"));
  assertThat(query.urlParams()).includes(entry("resolved",true));
  assertThat(query.urlParams()).includes(entry("statuses","OPEN,CLOSED"));
  assertThat(query.urlParams()).includes(entry("severities","BLOCKER,INFO"));
  assertThat(query.urlParams()).includes(entry("reporters","login1,login2"));
  assertThat((String)query.urlParams().get("createdBefore")).startsWith("2015-12-13T05:59");
  assertThat((String)query.urlParams().get("createdAfter")).startsWith("2012-01-23T13:40:00");
  assertThat(query.urlParams()).includes(entry("sort","ASSIGNEE"));
  assertThat(query.urlParams()).includes(entry("asc",false));
  assertThat(query.urlParams()).includes(entry("pageSize",5));
  assertThat(query.urlParams()).includes(entry("pageIndex",4));
}
