{
  for (  RuleDto rule : rules) {
    RuleDebt ruleDebt=ruleDebt(rule.getRepositoryKey(),rule.getRuleKey(),ruleDebts);
    if (ruleDebt == null) {
      disabledOverriddenRuleDebt(rule);
    }
 else {
      CharacteristicDto subCharacteristicDto=characteristicByKey(ruleDebt.subCharacteristicKey(),allCharacteristicDtos,true);
      boolean isSameCharacteristicAsDefault=subCharacteristicDto.getId().equals(rule.getDefaultSubCharacteristicId());
      boolean isSameFunctionAsDefault=isSameRemediationFunction(ruleDebt,rule);
      if (!isSameCharacteristicAsDefault || !isSameFunctionAsDefault) {
        rule.setSubCharacteristicId(subCharacteristicDto.getId());
        rule.setRemediationFunction(ruleDebt.function().name());
        rule.setRemediationCoefficient(ruleDebt.coefficient());
        rule.setRemediationOffset(ruleDebt.offset());
      }
 else {
        rule.setSubCharacteristicId(null);
        rule.setRemediationFunction(null);
        rule.setRemediationCoefficient(null);
        rule.setRemediationOffset(null);
      }
    }
    rule.setUpdatedAt(updateDate);
    ruleDao.update(rule,session);
    ruleDebts.remove(ruleDebt);
  }
  ruleRegistry.reindex(rules,session);
  for (  RuleDebt ruleDebt : ruleDebts) {
    validationMessages.addWarningText(String.format("The rule '%s' does not exist.",ruleDebt.ruleKey()));
  }
}
