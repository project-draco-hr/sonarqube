{
  when(system2.now()).thenReturn(1418215735482L);
  createDefaultGroup();
  boolean result=userUpdater.create(NewUser.create().setLogin("user").setName("User").setEmail("user@mail.com").setPassword("password").setPasswordConfirmation("password").setScmAccounts(newArrayList("u1","u_1","User 1")));
  UserDto dto=userDao.selectByLogin(session,"user");
  assertThat(dto.getId()).isNotNull();
  assertThat(dto.getLogin()).isEqualTo("user");
  assertThat(dto.getName()).isEqualTo("User");
  assertThat(dto.getEmail()).isEqualTo("user@mail.com");
  assertThat(dto.getScmAccountsAsList()).containsOnly("u1","u_1","User 1");
  assertThat(dto.isActive()).isTrue();
  assertThat(dto.getSalt()).isNotNull();
  assertThat(dto.getCryptedPassword()).isNotNull();
  assertThat(dto.getCreatedAt()).isEqualTo(1418215735482L);
  assertThat(dto.getUpdatedAt()).isEqualTo(1418215735482L);
  assertThat(result).isFalse();
  List<SearchHit> indexUsers=es.getDocuments(UserIndexDefinition.INDEX,UserIndexDefinition.TYPE_USER);
  assertThat(indexUsers).hasSize(1);
  assertThat(indexUsers.get(0).getSource()).contains(entry("login","user"),entry("name","User"),entry("email","user@mail.com"));
}
