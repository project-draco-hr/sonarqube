{
  treeRootHolder.setRoot(VIEWS_TREE);
  measureRepository.addRawMeasure(PROJECT_VIEW_1_REF,metricKeys.getLines(),createMeasure(3000d,2000d)).addRawMeasure(PROJECT_VIEW_1_REF,metricKeys.getConditions(),createMeasure(300d,400d)).addRawMeasure(PROJECT_VIEW_1_REF,metricKeys.getUncoveredLines(),createMeasure(30d,200d)).addRawMeasure(PROJECT_VIEW_1_REF,metricKeys.getUncoveredConditions(),createMeasure(9d,16d)).addRawMeasure(PROJECT_VIEW_2_REF,metricKeys.getLines(),createMeasure(2000d,3000d)).addRawMeasure(PROJECT_VIEW_2_REF,metricKeys.getConditions(),createMeasure(400d,300d)).addRawMeasure(PROJECT_VIEW_2_REF,metricKeys.getUncoveredLines(),createMeasure(200d,30d)).addRawMeasure(PROJECT_VIEW_2_REF,metricKeys.getUncoveredConditions(),createMeasure(16d,9d)).addRawMeasure(PROJECT_VIEW_4_REF,metricKeys.getLines(),createMeasure(1000d,2000d)).addRawMeasure(PROJECT_VIEW_4_REF,metricKeys.getConditions(),createMeasure(300d,200d)).addRawMeasure(PROJECT_VIEW_4_REF,metricKeys.getUncoveredLines(),createMeasure(100d,20d)).addRawMeasure(PROJECT_VIEW_4_REF,metricKeys.getUncoveredConditions(),createMeasure(6d,9d));
  underTest.execute();
  assertNoAddedRawMeasureOnProjectViews();
  assertThat(toEntries(measureRepository.getAddedRawMeasures(SUB_SUBVIEW_1_REF))).contains(entryOf(codeCoverageKey,createMeasure(98.8d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(lineCoverageKey,createMeasure(99d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(branchCoverageKey,createMeasure(97d,NO_PERIOD_4_OR_5_IN_VIEWS)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(SUB_SUBVIEW_2_REF))).contains(entryOf(codeCoverageKey,createMeasure(91d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(lineCoverageKey,createMeasure(90d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(branchCoverageKey,createMeasure(96d,NO_PERIOD_4_OR_5_IN_VIEWS)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(SUBVIEW_REF))).contains(entryOf(codeCoverageKey,createMeasure(94.8d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(lineCoverageKey,createMeasure(94.5d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(branchCoverageKey,createMeasure(96.9d,NO_PERIOD_4_OR_5_IN_VIEWS)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).contains(entryOf(codeCoverageKey,createMeasure(94.8d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(lineCoverageKey,createMeasure(94.5d,NO_PERIOD_4_OR_5_IN_VIEWS)),entryOf(branchCoverageKey,createMeasure(96.9d,NO_PERIOD_4_OR_5_IN_VIEWS)));
}
