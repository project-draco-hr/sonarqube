{
  SMInputCursor c=cursor.childElementCursor();
  String key=null;
  int value=0;
  String textValue=null;
  while (c.getNext() != null) {
    String node=c.getLocalName();
    if (StringUtils.equals(node,PROPERTY_KEY)) {
      key=c.collectDescendantText().trim();
    }
 else     if (StringUtils.equals(node,PROPERTY_VALUE)) {
      String s=c.collectDescendantText().trim();
      try {
        Double valueDouble=NumberUtils.createDouble(s);
        value=valueDouble.intValue();
      }
 catch (      NumberFormatException ex) {
        validationMessages.addErrorText(String.format("Cannot import value '%s' for field %s - Expected a numeric value instead",s,key));
      }
    }
 else     if (StringUtils.equals(node,PROPERTY_TEXT_VALUE)) {
      textValue=c.collectDescendantText().trim();
      textValue="mn".equals(textValue) ? Duration.MINUTE : textValue;
    }
  }
  return new Property(key,value,textValue);
}
