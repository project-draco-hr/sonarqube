{
  when(dryRun.isEnabled()).thenReturn(true);
  when(server.getVersion()).thenReturn("3.4");
  when(violation.getResource()).thenReturn(resource);
  when(violation.getLineId()).thenReturn(null);
  when(violation.getMessage()).thenReturn("VIOLATION");
  when(violation.getRule()).thenReturn(Rule.create("pmd","RULE_KEY"));
  when(violation.getSeverity()).thenReturn(RulePriority.INFO);
  when(ruleI18nManager.getName("pmd","RULE_KEY",Locale.getDefault())).thenReturn("RULE_NAME");
  doReturn(Arrays.asList(violation)).when(dryRunExporter).getViolations(resource);
  StringWriter output=new StringWriter();
  dryRunExporter.writeJson(ImmutableSet.of(resource),output);
  String json=output.toString();
  assertThat(json).isEqualTo("{\"version\":\"3.4\",\"violations_per_resource\":{\"KEY\":[{\"message\":\"VIOLATION\",\"severity\":\"INFO\",\"rule_key\":\"RULE_KEY\",\"rule_repository\":\"pmd\",\"rule_name\":\"RULE_NAME\"}]}}");
}
