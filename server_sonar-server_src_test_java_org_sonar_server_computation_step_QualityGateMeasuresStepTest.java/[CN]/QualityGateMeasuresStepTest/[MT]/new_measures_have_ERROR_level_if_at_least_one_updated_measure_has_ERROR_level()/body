{
  int rawValue=1;
  Condition equals1ErrorCondition=createEqualsCondition(INT_METRIC_1,"1",null);
  Condition equals1WarningCondition=createEqualsCondition(INT_METRIC_2,null,"1");
  Measure rawMeasure=newMeasureBuilder().create(rawValue,null);
  qualityGateHolder.setQualityGate(new QualityGate(SOME_QG_ID,SOME_QG_NAME,of(equals1ErrorCondition,equals1WarningCondition)));
  measureRepository.addRawMeasure(PROJECT_REF,INT_METRIC_1_KEY,rawMeasure);
  measureRepository.addRawMeasure(PROJECT_REF,INT_METRIC_2_KEY,rawMeasure);
  underTest.execute();
  Optional<Measure> rawMeasure1=measureRepository.getAddedRawMeasure(PROJECT_REF,INT_METRIC_1_KEY);
  Optional<Measure> rawMeasure2=measureRepository.getAddedRawMeasure(PROJECT_REF,INT_METRIC_2_KEY);
  assertThat(rawMeasure1.get()).hasQualityGateLevel(ERROR).hasQualityGateText(dumbResultTextAnswer(equals1ErrorCondition,ERROR,rawValue));
  assertThat(rawMeasure2.get()).hasQualityGateLevel(WARN).hasQualityGateText(dumbResultTextAnswer(equals1WarningCondition,WARN,rawValue));
  assertThat(getAlertStatusMeasure()).hasQualityGateLevel(ERROR).hasQualityGateText(dumbResultTextAnswer(equals1ErrorCondition,ERROR,rawValue) + ", " + dumbResultTextAnswer(equals1WarningCondition,WARN,rawValue));
  assertThat(getQGDetailsMeasure()).hasValue(new QualityGateDetailsData(ERROR,of(new EvaluatedCondition(equals1ErrorCondition,ERROR,rawValue),new EvaluatedCondition(equals1WarningCondition,WARN,rawValue))).toJson());
  QualityGateStatusHolderAssertions.assertThat(qualityGateStatusHolder).hasStatus(QualityGateStatus.ERROR).hasConditionCount(2).hasCondition(equals1ErrorCondition,ConditionStatus.EvaluationStatus.ERROR,String.valueOf(rawValue)).hasCondition(equals1WarningCondition,ConditionStatus.EvaluationStatus.WARN,String.valueOf(rawValue));
}
