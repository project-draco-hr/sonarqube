{
  File jarFile=getJarFile(getOutputDirectory(),getFinalName(),getClassifier());
  MavenArchiver archiver=new MavenArchiver();
  archiver.setArchiver(jarArchiver);
  archiver.setOutputFile(jarFile);
  try {
    archiver.getArchiver().addDirectory(getClassesDirectory(),getIncludes(),getExcludes());
    archive.setAddMavenDescriptor(addMavenDescriptor);
    getLog().info("-------------------------------------------------------");
    getLog().info("Plugin definition in update center");
    addManifestProperty("Key",PluginManifest.KEY,getPluginKey());
    addManifestProperty("Name",PluginManifest.NAME,getPluginName());
    addManifestProperty("Description",PluginManifest.DESCRIPTION,getPluginDescription());
    addManifestProperty("Version",PluginManifest.VERSION,getProject().getVersion());
    addManifestProperty("Main class",PluginManifest.MAIN_CLASS,getPluginClass());
    addManifestProperty("Homepage",PluginManifest.HOMEPAGE,getPluginUrl());
    addManifestProperty("Sonar version",PluginManifest.SONAR_VERSION,getSonarPluginApiArtifact().getVersion());
    addManifestProperty("License",PluginManifest.LICENSE,getPluginLicense());
    addManifestProperty("Organization",PluginManifest.ORGANIZATION,getPluginOrganization());
    addManifestProperty("Organization URL",PluginManifest.ORGANIZATION_URL,getPluginOrganizationUrl());
    addManifestProperty("Terms & Conditions URL",PluginManifest.TERMS_CONDITIONS_URL,getPluginTermsConditionsUrl());
    addManifestProperty("Issue Tracker URL",PluginManifest.ISSUE_TRACKER_URL,getPluginIssueTrackerUrl());
    addManifestProperty("Build date",PluginManifest.BUILD_DATE,FormatUtils.toString(new Date(),true));
    getLog().info("-------------------------------------------------------");
    if (isUseChildFirstClassLoader()) {
      archive.addManifestEntry(PluginManifest.USE_CHILD_FIRST_CLASSLOADER,"true");
    }
    if (isSkipDependenciesPackaging()) {
      getLog().info("Skip packaging of dependencies");
    }
 else {
      List<String> libs=copyDependencies();
      if (!libs.isEmpty()) {
        archiver.getArchiver().addDirectory(getAppDirectory(),getIncludes(),getExcludes());
        archive.addManifestEntry(PluginManifest.DEPENDENCIES,StringUtils.join(libs," "));
      }
    }
    archiver.createArchive(getProject(),archive);
    return jarFile;
  }
 catch (  Exception e) {
    throw new MojoExecutionException("Error assembling Sonar-plugin: " + e.getMessage(),e);
  }
}
