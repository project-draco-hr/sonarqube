{
  Map<String,Object> result=db.selectFirst("SELECT u.email as \"email\",  u.scm_accounts as \"scmAccounts\"," + "u.external_identity as \"externalIdentity\", u.external_identity_provider as \"externalIdentityProvider\", " + "u.salt as \"salt\", u.crypted_password as \"cryptedPassword\", "+ "u.remember_token as \"rememberToken\", u.remember_token_expires_at as \"rememberTokenExpiresAt\", "+ "u.updated_at as \"updatedAt\" "+ "FROM users u WHERE u.id="+ userId);
  if (isDisable) {
    assertThat(result.get("email")).isNull();
    assertThat(result.get("scmAccounts")).isNull();
    assertThat(result.get("externalIdentity")).isNull();
    assertThat(result.get("externalIdentityProvider")).isNull();
    assertThat(result.get("salt")).isNull();
    assertThat(result.get("cryptedPassword")).isNull();
    assertThat(result.get("rememberToken")).isNull();
    assertThat(result.get("rememberTokenExpiresAt")).isNull();
    assertThat(result.get("updatedAt")).isEqualTo(expectedUpdatedAt);
  }
 else {
    assertThat(result.get("email")).isNotNull();
    assertThat(result.get("scmAccounts")).isNotNull();
    assertThat(result.get("externalIdentity")).isNotNull();
    assertThat(result.get("externalIdentityProvider")).isNotNull();
    assertThat(result.get("salt")).isNotNull();
    assertThat(result.get("cryptedPassword")).isNotNull();
    assertThat(result.get("rememberToken")).isNotNull();
    assertThat(result.get("rememberTokenExpiresAt")).isNotNull();
    assertThat(result.get("updatedAt")).isEqualTo(expectedUpdatedAt);
  }
}
