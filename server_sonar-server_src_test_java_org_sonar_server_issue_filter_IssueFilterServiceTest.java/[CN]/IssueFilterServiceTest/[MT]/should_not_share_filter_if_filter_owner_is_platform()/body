{
  when(authorizationDao.selectGlobalPermissions("john")).thenReturn(newArrayList(GlobalPermissions.DASHBOARD_SHARING));
  when(issueFilterDao.selectById(1L)).thenReturn(new IssueFilterDto().setId(1L).setName("My Filter").setShared(false));
  try {
    service.update(new IssueFilterDto().setId(1L).setName("My Filter").setShared(true),userSession);
    failBecauseExceptionWasNotThrown(ForbiddenException.class);
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(ForbiddenException.class).hasMessage("Only owner of a filter can change sharing");
  }
  verify(issueFilterDao,never()).update(any(IssueFilterDto.class));
}
