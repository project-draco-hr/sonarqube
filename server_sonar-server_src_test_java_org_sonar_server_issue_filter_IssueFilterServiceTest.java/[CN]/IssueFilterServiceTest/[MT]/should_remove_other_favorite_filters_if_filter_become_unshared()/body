{
  when(issueFilterDao.selectById(1L)).thenReturn(new IssueFilterDto().setId(1L).setName("My Old Filter").setUserLogin("john").setShared(true));
  IssueFilterFavouriteDto userFavouriteDto=new IssueFilterFavouriteDto().setId(10L).setUserLogin("john").setIssueFilterId(1L);
  IssueFilterFavouriteDto otherFavouriteDto=new IssueFilterFavouriteDto().setId(11L).setUserLogin("arthur").setIssueFilterId(1L);
  when(issueFilterFavouriteDao.selectByFilterId(1L)).thenReturn(newArrayList(userFavouriteDto,otherFavouriteDto));
  IssueFilterDto result=service.update(new IssueFilterDto().setId(1L).setName("My New Filter").setUserLogin("john").setShared(false),userSession);
  assertThat(result.getName()).isEqualTo("My New Filter");
  verify(issueFilterDao).update(any(IssueFilterDto.class));
  verify(issueFilterFavouriteDao).delete(11L);
  verify(issueFilterFavouriteDao,never()).delete(10L);
}
