{
  try {
    field.setAccessible(true);
    if (field.getType().equals(String.class)) {
      field.set(check,value);
    }
 else     if (field.getType().getSimpleName().equals("int")) {
      field.setInt(check,Integer.parseInt(value));
    }
 else     if (field.getType().getSimpleName().equals("short")) {
      field.setShort(check,Short.parseShort(value));
    }
 else     if (field.getType().getSimpleName().equals("long")) {
      field.setLong(check,Long.parseLong(value));
    }
 else     if (field.getType().getSimpleName().equals("double")) {
      field.setDouble(check,Double.parseDouble(value));
    }
 else     if (field.getType().getSimpleName().equals("boolean")) {
      field.setBoolean(check,Boolean.parseBoolean(value));
    }
 else     if (field.getType().getSimpleName().equals("byte")) {
      field.setByte(check,Byte.parseByte(value));
    }
 else     if (field.getType().equals(Integer.class)) {
      field.set(check,Integer.parseInt(value));
    }
 else     if (field.getType().equals(Long.class)) {
      field.set(check,Long.parseLong(value));
    }
 else     if (field.getType().equals(Double.class)) {
      field.set(check,Double.parseDouble(value));
    }
 else     if (field.getType().equals(Boolean.class)) {
      field.set(check,Boolean.parseBoolean(value));
    }
 else {
      throw new SonarException("The type of the field " + field + " is not supported: "+ field.getType());
    }
  }
 catch (  IllegalAccessException e) {
    throw new SonarException("Can not set the value of the field " + field + " in the class: "+ check.getClass().getName(),e);
  }
}
