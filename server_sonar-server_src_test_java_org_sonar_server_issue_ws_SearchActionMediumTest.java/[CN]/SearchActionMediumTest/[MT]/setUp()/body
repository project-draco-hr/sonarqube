{
  tester.clearDbAndIndexes();
  db=tester.get(DbClient.class);
  ws=tester.get(IssuesWs.class);
  wsTester=tester.get(WsTester.class);
  session=db.openSession(false);
  rule=RuleTesting.newXooX1().setName("Rule name").setDescription("Rule desc").setStatus(RuleStatus.READY);
  tester.get(RuleDao.class).insert(session,rule);
  project=new ComponentDto().setKey("MyProject");
  db.componentDao().insert(session,project);
  db.snapshotDao().insert(session,SnapshotTesting.createForComponent(project));
  tester.get(PermissionFacade.class).insertGroupPermission(project.getId(),DefaultGroups.ANYONE,UserRole.USER,session);
  db.issueAuthorizationDao().synchronizeAfter(session,new Date(0));
  file=new ComponentDto().setKey("MyComponent").setSubProjectId(project.getId());
  db.componentDao().insert(session,file);
  db.snapshotDao().insert(session,SnapshotTesting.createForComponent(file));
  UserDto john=new UserDto().setLogin("john").setName("John").setEmail("john@email.com");
  db.userDao().insert(session,john);
  session.commit();
  MockUserSession.set().setLogin("john");
}
