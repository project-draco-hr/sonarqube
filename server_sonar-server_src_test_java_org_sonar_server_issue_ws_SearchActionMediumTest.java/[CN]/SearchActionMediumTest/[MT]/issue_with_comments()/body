{
  db.userDao().insert(session,new UserDto().setLogin("john").setName("John"));
  db.userDao().insert(session,new UserDto().setLogin("fabrice").setName("Fabrice").setEmail("fabrice@email.com"));
  ComponentDto project=insertComponent(ComponentTesting.newProjectDto("PROJECT_ID").setKey("PROJECT_KEY"));
  setDefaultProjectPermission(project);
  ComponentDto file=insertComponent(ComponentTesting.newFileDto(project,null,"FILE_ID").setKey("FILE_KEY"));
  IssueDto issue=IssueTesting.newDto(newRule(),file,project).setKee("82fd47d4-b650-4037-80bc-7b112bd4eac2");
  db.issueDao().insert(session,issue);
  tester.get(IssueChangeDao.class).insert(session,new IssueChangeDto().setIssueKey(issue.getKey()).setKey("COMMENT-ABCD").setChangeData("*My comment*").setChangeType(IssueChangeDto.TYPE_COMMENT).setUserLogin("john").setCreatedAt(DateUtils.parseDateTime("2014-09-09T12:00:00+0000").getTime()));
  tester.get(IssueChangeDao.class).insert(session,new IssueChangeDto().setIssueKey(issue.getKey()).setKey("COMMENT-ABCE").setChangeData("Another comment").setChangeType(IssueChangeDto.TYPE_COMMENT).setUserLogin("fabrice").setCreatedAt(DateUtils.parseDateTime("2014-09-10T12:00:00+0000").getTime()));
  session.commit();
  tester.get(IssueIndexer.class).indexAll();
  userSessionRule.login("john");
  WsTester.Result result=wsTester.newGetRequest(API_ENDPOINT,SEARCH_ACTION).setParam("additionalFields","comments,users").execute();
  result.assertJson(this.getClass(),"issue_with_comments.json");
}
