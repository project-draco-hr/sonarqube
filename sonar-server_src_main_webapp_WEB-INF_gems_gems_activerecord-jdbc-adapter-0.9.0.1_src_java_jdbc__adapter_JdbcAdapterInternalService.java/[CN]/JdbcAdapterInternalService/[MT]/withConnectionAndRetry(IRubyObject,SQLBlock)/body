{
  int tries=1;
  int i=0;
  Throwable toWrap=null;
  boolean autoCommit=false;
  while (i < tries) {
    Connection c=getConnection(recv,true);
    try {
      autoCommit=c.getAutoCommit();
      return block.call(c);
    }
 catch (    Exception e) {
      toWrap=e;
      while (toWrap.getCause() != null && toWrap.getCause() != toWrap) {
        toWrap=toWrap.getCause();
      }
      i++;
      if (autoCommit) {
        if (i == 1) {
          tries=(int)rubyApi.convertToRubyInteger(config_value(recv,"retry_count")).getLongValue();
          if (tries <= 0) {
            tries=1;
          }
        }
        if (isConnectionBroken(recv,c)) {
          reconnect(recv);
        }
 else {
          throw wrap(recv,toWrap);
        }
      }
    }
  }
  throw wrap(recv,toWrap);
}
