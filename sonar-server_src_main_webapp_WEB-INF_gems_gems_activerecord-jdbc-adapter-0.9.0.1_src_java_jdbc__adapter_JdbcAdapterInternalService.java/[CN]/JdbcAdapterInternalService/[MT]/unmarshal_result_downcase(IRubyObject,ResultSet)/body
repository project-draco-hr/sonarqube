{
  List results=new ArrayList();
  Ruby runtime=recv.getRuntime();
  try {
    ResultSetMetaData metadata=rs.getMetaData();
    int col_count=metadata.getColumnCount();
    IRubyObject[] col_names=new IRubyObject[col_count];
    int[] col_types=new int[col_count];
    int[] col_scale=new int[col_count];
    for (int i=0; i < col_count; i++) {
      col_names[i]=RubyString.newUnicodeString(runtime,metadata.getColumnLabel(i + 1).toLowerCase());
      col_types[i]=metadata.getColumnType(i + 1);
      col_scale[i]=metadata.getScale(i + 1);
    }
    while (rs.next()) {
      RubyHash row=RubyHash.newHash(runtime);
      for (int i=0; i < col_count; i++) {
        rubyApi.callMethod(row,"[]=",new IRubyObject[]{col_names[i],jdbc_to_ruby(runtime,i + 1,col_types[i],col_scale[i],rs)});
      }
      results.add(row);
    }
  }
  finally {
    try {
      rs.close();
    }
 catch (    Exception e) {
    }
  }
  return runtime.newArray(results);
}
