{
  SearchOptions options=new SearchOptions().setLimit(SearchOptions.MAX_LIMIT);
  List<IssueDoc> authorizedIssues=issueIndex.search(IssueQuery.builder(userSession).issueKeys(issueKeys).build(),options).getDocs();
  Collection<String> authorizedKeys=Collections2.transform(authorizedIssues,new Function<IssueDoc,String>(){
    @Override public String apply(    IssueDoc input){
      return input.key();
    }
  }
);
  if (!authorizedKeys.isEmpty()) {
    DbSession session=dbClient.openSession(false);
    try {
      List<IssueDto> dtos=dbClient.issueDao().selectByKeys(session,Lists.newArrayList(authorizedKeys));
      return Collections2.transform(dtos,new Function<IssueDto,Issue>(){
        @Override public Issue apply(        @Nullable IssueDto input){
          return input != null ? input.toDefaultIssue() : null;
        }
      }
);
    }
  finally {
      MyBatis.closeQuietly(session);
    }
  }
  return Collections.emptyList();
}
