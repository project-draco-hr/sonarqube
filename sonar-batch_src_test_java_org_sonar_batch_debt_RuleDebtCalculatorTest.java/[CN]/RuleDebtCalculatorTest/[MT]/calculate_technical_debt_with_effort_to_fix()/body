{
  RuleKey ruleKey=RuleKey.of("squid","AvoidCycle");
  DefaultIssue issue=new DefaultIssue().setKey("ABCDE").setRuleKey(ruleKey).setEffortToFix(2d);
  DefaultRequirement requirement=mock(DefaultRequirement.class);
  Mockito.when(requirement.function()).thenReturn("linear_offset");
  Mockito.when(requirement.factor()).thenReturn(tenMinutes);
  Mockito.when(requirement.offset()).thenReturn(fiveMinutes);
  when(model.requirementsByRule(ruleKey)).thenReturn(requirement);
  assertThat(calculator.calculateTechnicalDebt(issue.ruleKey(),issue.effortToFix())).isEqualTo(WorkDuration.createFromValueAndUnit((10 * 2) + 5,WorkDuration.UNIT.MINUTES,HOURS_IN_DAY));
}
