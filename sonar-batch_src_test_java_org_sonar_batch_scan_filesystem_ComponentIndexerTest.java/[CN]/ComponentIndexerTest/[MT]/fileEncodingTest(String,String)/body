{
  fs.setEncoding(Charset.forName(encoding));
  File javaFile1=new File(baseDir,"src/main/java/foo/bar/Foo.java");
  FileUtils.copyFile(getFile(testFile),javaFile1);
  fs.add(new DeprecatedDefaultInputFile("foo","src/main/java/foo/bar/Foo.java").setPathRelativeToSourceDir("foo/bar/Foo.java").setFile(javaFile1).setLanguage("java"));
  Languages languages=new Languages(Java.INSTANCE);
  ComponentIndexer indexer=createIndexer(languages);
  indexer.execute(fs);
  Resource sonarFile=org.sonar.api.resources.File.create("/src/main/java/foo/bar/Foo.java","foo/bar/Foo.java",Java.INSTANCE,false);
  verify(sourcePersister).saveSource(eq(sonarFile),argThat(new ArgumentMatcher<String>(){
    @Override public boolean matches(    Object arg0){
      String source=(String)arg0;
      return source.contains(aClaess) && source.contains(explicacao);
    }
  }
),(Date)eq(null));
}
