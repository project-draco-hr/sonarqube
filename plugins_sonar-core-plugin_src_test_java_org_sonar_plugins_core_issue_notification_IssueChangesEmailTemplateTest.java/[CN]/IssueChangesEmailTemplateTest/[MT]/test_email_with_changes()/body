{
  Notification notification=new Notification("issue-changes").setFieldValue("projectName","Struts").setFieldValue("projectKey","org.apache:struts").setFieldValue("componentName","org.apache.struts.Action").setFieldValue("key","ABCDE").setFieldValue("ruleName","Avoid Cycles").setFieldValue("message","Has 3 cycles").setFieldValue("comment","How to fix it?").setFieldValue("old.assignee","simon").setFieldValue("new.assignee","louis").setFieldValue("new.resolution","FALSE-POSITIVE").setFieldValue("new.status","RESOLVED");
  EmailMessage email=template.format(notification);
  assertThat(email.getMessageId()).isEqualTo("issue-changes/ABCDE");
  assertThat(email.getSubject()).isEqualTo("Struts, change on issue #ABCDE");
  String message=email.getMessage();
  String expectedMessage=TestUtils.getResourceContent("/org/sonar/plugins/core/issue/notification/IssueChangesEmailTemplateTest/email_with_changes.txt");
  expectedMessage=StringUtils.remove(expectedMessage,'\r');
  assertThat(message).isEqualTo(expectedMessage);
  assertThat(email.getFrom()).isNull();
}
