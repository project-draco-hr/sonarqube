{
  File baseDir=temp.getRoot();
  File srcDir=new File(baseDir,"src");
  srcDir.mkdir();
  File xooFile=new File(srcDir,"sample.xoo");
  FileUtils.write(xooFile,"foo\nbar");
  TaskResult result=tester.newTask().properties(ImmutableMap.<String,String>builder().put("sonar.task","scan").put("sonar.projectBaseDir",baseDir.getAbsolutePath()).put("sonar.projectKey","com.foo.project").put("sonar.projectName","Foo Project").put("sonar.projectVersion","1.0-SNAPSHOT").put("sonar.projectDescription","Description of Foo Project").put("sonar.sources","src").build()).start();
  List<Issue> issues=result.issuesFor(result.inputFile("src/sample.xoo"));
  assertThat(issues).extracting("msg","textRange.startLine").containsOnly(tuple("A template rule",1),tuple("Another template rule",2));
}
