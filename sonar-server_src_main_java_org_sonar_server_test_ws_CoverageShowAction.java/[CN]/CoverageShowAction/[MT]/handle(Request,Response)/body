{
  String fileKey=request.mandatoryParam("key");
  coverageService.checkPermission(fileKey);
  int from=Math.max(request.mandatoryParamAsInt("from"),1);
  int to=(Integer)ObjectUtils.defaultIfNull(request.paramAsInt("to"),Integer.MAX_VALUE);
  JsonWriter json=response.newJsonWriter().beginObject();
  String hits=coverageService.getHitsData(fileKey);
  Map<Integer,Integer> testCases=coverageService.getTestCasesByLines(fileKey);
  String conditions=coverageService.getConditionsData(fileKey);
  String coveredConditions=coverageService.getCoveredConditionsData(fileKey);
  if (hits != null) {
    Map<Integer,Integer> hitsByLine=KeyValueFormat.parseIntInt(hits);
    Map<Integer,Integer> testCasesByLine=testCases != null ? testCases : Maps.<Integer,Integer>newHashMap();
    Map<Integer,Integer> conditionsByLine=conditions != null ? KeyValueFormat.parseIntInt(conditions) : Maps.<Integer,Integer>newHashMap();
    Map<Integer,Integer> coveredConditionsByLine=coveredConditions != null ? KeyValueFormat.parseIntInt(coveredConditions) : Maps.<Integer,Integer>newHashMap();
    writeCoverage(fileKey,hitsByLine,testCasesByLine,conditionsByLine,coveredConditionsByLine,from,to,json);
  }
  json.endObject().close();
}
