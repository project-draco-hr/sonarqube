{
  DbSession dbSession=dbClient.openSession(false);
  try {
    ComponentDto component=componentFinder.getByUuidOrKey(dbSession,request.getComponentId(),request.getComponentKey(),COMPONENT_ID_AND_KEY);
    Long developerId=searchDeveloperId(dbSession,request);
    Optional<ComponentDto> refComponent=getReferenceComponent(dbSession,component);
    checkPermissions(component);
    SnapshotDto lastSnapshot=dbClient.snapshotDao().selectLastSnapshotByComponentUuid(dbSession,component.uuid());
    List<MetricDto> metrics=searchMetrics(dbSession,request);
    List<WsMeasures.Period> periods=snapshotToWsPeriods(lastSnapshot);
    List<MeasureDto> measures=searchMeasures(dbSession,component,lastSnapshot,metrics,periods,developerId);
    return buildResponse(request,component,refComponent,measures,metrics,periods);
  }
  finally {
    dbClient.closeSession(dbSession);
  }
}
