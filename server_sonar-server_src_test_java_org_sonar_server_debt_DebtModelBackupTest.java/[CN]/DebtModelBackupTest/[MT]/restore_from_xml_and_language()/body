{
  when(characteristicsXMLImporter.importXML(anyString())).thenReturn(new DebtModel().addRootCharacteristic(new DefaultDebtCharacteristic().setKey("PORTABILITY").setName("Portability").setOrder(1)).addSubCharacteristic(new DefaultDebtCharacteristic().setKey("COMPILER").setName("Compiler"),"PORTABILITY"));
  CharacteristicDto compiler=new CharacteristicDto().setId(2).setKey("COMPILER").setName("Compiler").setParentId(1).setCreatedAt(oldDate);
  when(dao.selectEnabledCharacteristics(session)).thenReturn(newArrayList(new CharacteristicDto().setId(1).setKey("PORTABILITY").setName("Portability").setOrder(1).setCreatedAt(oldDate),compiler));
  when(rulesXMLImporter.importXML(anyString(),any(ValidationMessages.class))).thenReturn(newArrayList(new RuleDebt().setRuleKey(RuleKey.of("squid","UselessImportCheck")).setSubCharacteristicKey("COMPILER").setFunction(DebtRemediationFunction.Type.LINEAR.name()).setCoefficient("2h")));
  when(ruleDao.selectEnabledAndNonManual(session)).thenReturn(newArrayList(new RuleDto().setId(1).setRepositoryKey("squid").setRuleKey("UselessImportCheck").setLanguage("java").setDefaultSubCharacteristicId(10).setDefaultRemediationFunction(DebtRemediationFunction.Type.LINEAR.toString()).setDefaultRemediationCoefficient("2h"),new RuleDto().setId(2).setRepositoryKey("checkstyle").setLanguage("java2").setSubCharacteristicId(3).setRemediationFunction(DebtRemediationFunction.Type.LINEAR.toString()).setRemediationCoefficient("2h")));
  debtModelBackup.restoreFromXml("<xml/>","java");
  verify(ruleOperations).updateRule(ruleCaptor.capture(),eq(compiler),eq("LINEAR"),eq("2h"),isNull(String.class),eq(session));
  verify(ruleDao).selectEnabledAndNonManual(session);
  verify(session).commit();
}
