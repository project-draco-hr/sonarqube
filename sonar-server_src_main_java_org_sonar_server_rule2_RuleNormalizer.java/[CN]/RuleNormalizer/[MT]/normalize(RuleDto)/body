{
  XContentBuilder document=jsonBuilder().startObject();
  indexField(RuleField.KEY.key(),rule.getRuleKey(),document);
  indexField(RuleField.REPOSITORY.key(),rule.getRepositoryKey(),document);
  indexField(RuleField.NAME.key(),rule.getName(),document);
  indexField(RuleField.CREATED_AT.key(),rule.getCreatedAt(),document);
  indexField(RuleField.UPDATED_AT.key(),rule.getUpdatedAt(),document);
  indexField(RuleField.DESCRIPTION.key(),rule.getDescription(),document);
  indexField(RuleField.SEVERITY.key(),rule.getSeverityString(),document);
  indexField(RuleField.STATUS.key(),rule.getStatus(),document);
  indexField(RuleField.LANGUAGE.key(),rule.getLanguage(),document);
  indexField(RuleField.INTERNAL_KEY.key(),rule.getConfigKey(),document);
  indexField(RuleField.TEMPLATE.key(),rule.getCardinality() == Cardinality.MULTIPLE,document);
  List<RuleRuleTagDto> tags=ruleDao.selectTagsByRuleId(rule.getId());
  ArrayList<String> sys=new ArrayList<String>();
  ArrayList<String> admin=new ArrayList<String>();
  if (tags != null && !tags.isEmpty()) {
    for (    RuleRuleTagDto tag : tags) {
      if (tag.getType().equals(RuleTagType.SYSTEM)) {
        sys.add(tag.getTag());
      }
 else {
        admin.add(tag.getTag());
      }
    }
  }
  document.array(RuleField.TAGS.key(),admin.toArray(new String[admin.size()]));
  document.array(RuleField.SYSTEM_TAGS.key(),sys.toArray(new String[sys.size()]));
  List<RuleParamDto> params=ruleDao.selectParametersByRuleId(rule.getId());
  Map<Integer,String> paramIdNameLookup=new HashMap<Integer,String>();
  document.startArray(RuleField.PARAMS.key());
  if (!params.isEmpty()) {
    for (    RuleParamDto param : params) {
      paramIdNameLookup.put(param.getId(),param.getName());
      document.startObject();
      indexField(RuleParamField.NAME.key(),param.getName(),document);
      indexField(RuleParamField.TYPE.key(),param.getType(),document);
      indexField(RuleParamField.DESCRIPTION.key(),param.getDescription(),document);
      indexField(RuleParamField.VALUE.key(),param.getDefaultValue(),document);
      document.endObject();
    }
  }
  document.endArray();
  List<ActiveRuleDto> activeRules=activeRuleDao.selectByRuleId(rule.getId());
  document.startArray(RuleField.ACTIVE.key());
  if (!activeRules.isEmpty()) {
    for (    ActiveRuleDto activeRule : activeRules) {
      document.startObject();
      indexField(ActiveRuleField.OVERRIDE.key(),activeRule.doesOverride(),document);
      indexField(ActiveRuleField.INHERITANCE.key(),activeRule.getInheritance(),document);
      indexField(ActiveRuleField.NOTE_CREATED.key(),activeRule.getNoteCreatedAt(),document);
      indexField(ActiveRuleField.NOTE_UPDATED.key(),activeRule.getNoteUpdatedAt(),document);
      indexField(ActiveRuleField.NOTE_DATA.key(),activeRule.getNoteData(),document);
      indexField(ActiveRuleField.NOTE_USER.key(),activeRule.getNoteUserLogin(),document);
      indexField(ActiveRuleField.PROFILE_ID.key(),activeRule.getProfileId(),document);
      indexField(ActiveRuleField.SEVERITY.key(),activeRule.getSeverityString(),document);
      indexField(ActiveRuleField.PARENT_ID.key(),activeRule.getParentId(),document);
      List<ActiveRuleParamDto> activeRuleParams=activeRuleDao.selectParamsByActiveRuleId(activeRule.getId());
      if (!activeRuleParams.isEmpty()) {
        document.startArray(ActiveRuleField.PARAMS.key());
        for (        ActiveRuleParamDto param : activeRuleParams) {
          document.startObject();
          indexField(RuleParamField.NAME.key(),param.getKey(),document);
          indexField(RuleParamField.VALUE.key(),param.getValue(),document);
          document.endObject();
        }
        document.endArray();
      }
      document.endObject();
    }
  }
  document.endArray();
  return document.endObject();
}
