{
  XContentBuilder document=jsonBuilder().startObject();
  indexField(RuleField.KEY.key(),rule.getRuleKey(),document);
  indexField(RuleField.REPOSITORY.key(),rule.getRepositoryKey(),document);
  indexField(RuleField.NAME.key(),rule.getName(),document);
  indexField(RuleField.CREATED_AT.key(),rule.getCreatedAt(),document);
  indexField(RuleField.UPDATED_AT.key(),rule.getUpdatedAt(),document);
  indexField(RuleField.DESCRIPTION.key(),rule.getDescription(),document);
  indexField(RuleField.SEVERITY.key(),rule.getSeverityString(),document);
  indexField(RuleField.STATUS.key(),rule.getStatus(),document);
  indexField(RuleField.LANGUAGE.key(),rule.getLanguage(),document);
  indexField(RuleField.INTERNAL_KEY.key(),rule.getConfigKey(),document);
  indexField(RuleField.TEMPLATE.key(),rule.getCardinality() == Cardinality.MULTIPLE,document);
  document.startArray(RuleField.TAGS.key()).endArray();
  document.startArray(RuleField.SYSTEM_TAGS.key()).endArray();
  document.startObject(RuleField.PARAMS.key()).endObject();
  List<ActiveRuleDto> activeRules=activeRuleDao.selectByRuleId(rule.getId());
  document.startObject(RuleField.ACTIVE.key());
  if (!activeRules.isEmpty()) {
    for (    ActiveRuleDto activeRule : activeRules) {
      document.startObject(activeRule.getProfileId().toString());
      indexField(ActiveRuleField.OVERRIDE.key(),activeRule.doesOverride(),document);
      indexField(ActiveRuleField.INHERITANCE.key(),activeRule.getInheritance(),document);
      indexField(ActiveRuleField.NOTE_CREATED.key(),activeRule.getNoteCreatedAt(),document);
      indexField(ActiveRuleField.NOTE_UPDATED.key(),activeRule.getNoteUpdatedAt(),document);
      indexField(ActiveRuleField.NOTE_DATA.key(),activeRule.getNoteData(),document);
      indexField(ActiveRuleField.NOTE_USER.key(),activeRule.getNoteUserLogin(),document);
      indexField(ActiveRuleField.PROFILE_ID.key(),activeRule.getProfileId(),document);
      indexField(ActiveRuleField.SEVERITY.key(),activeRule.getSeverityString(),document);
      indexField(ActiveRuleField.PARENT_ID.key(),activeRule.getParentId(),document);
      List<ActiveRuleParamDto> activeRuleParams=activeRuleDao.selectParamsByActiveRuleId(activeRule.getId());
      if (!activeRuleParams.isEmpty()) {
        document.startObject(ActiveRuleField.PARAMS.key());
        for (        ActiveRuleParamDto param : activeRuleParams) {
          document.startObject(param.getKey());
          indexField(RuleParamField.VALUE.key(),param.getValue(),document);
          document.endObject();
        }
        document.endObject();
      }
      document.endObject();
    }
  }
  document.endObject();
  document.endObject();
  UpdateRequest request=new UpdateRequest().doc(document);
  request.docAsUpsert(true);
  return request;
}
