{
  super(name,port);
  ESLoggerFactory.setDefaultFactory(new Slf4jESLoggerFactory());
  ImmutableSettings.Builder esSettings=ImmutableSettings.settingsBuilder().put("index.merge.policy.max_merge_at_once","200").put("index.merge.policy.segments_per_tier","200").put("index.number_of_shards","1").put("index.number_of_replicas","0").put("index.store.type","mmapfs").put("indices.store.throttle.type","merge").put("indices.store.throttle.max_bytes_per_sec","200mb").put("script.default_lang","native").put("script.native." + ListUpdate.NAME + ".type",ListUpdate.UpdateListScriptFactory.class.getName()).put("cluster.name","sonarqube").put("node.name","sonarqube-" + System.currentTimeMillis()).put("node.data",true).put("node.local",false).put("transport.tcp.port",9300).put("http.port",9200);
  File esDir=FileUtils.getTempDirectory();
  try {
    FileUtils.forceMkdir(esDir);
    esSettings.put("path.home",esDir.getAbsolutePath());
  }
 catch (  Exception e) {
    throw new IllegalStateException("Fail to create directory " + esDir.getAbsolutePath(),e);
  }
  node=NodeBuilder.nodeBuilder().settings(esSettings).build().start();
}
