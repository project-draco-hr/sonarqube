{
  String patternConf=StringUtils.defaultIfBlank(settings.getString(IgnoreIssuesConfiguration.PATTERNS_MULTICRITERIA_KEY),"");
  for (  String id : StringUtils.split(patternConf,',')) {
    String propPrefix=IgnoreIssuesConfiguration.PATTERNS_MULTICRITERIA_KEY + "." + id+ ".";
    String resourceKeyPattern=settings.getString(propPrefix + IgnoreIssuesConfiguration.RESOURCE_KEY);
    String ruleKeyPattern=settings.getString(propPrefix + IgnoreIssuesConfiguration.RULE_KEY);
    String lineRange=settings.getString(propPrefix + IgnoreIssuesConfiguration.LINE_RANGE_KEY);
    String[] fields=new String[]{resourceKeyPattern,ruleKeyPattern,lineRange};
    PatternDecoder.checkRegularLineConstraints(StringUtils.join(fields,","),fields);
    Pattern pattern=new Pattern(firstNonNull(resourceKeyPattern,"*"),firstNonNull(ruleKeyPattern,"*"));
    PatternDecoder.decodeRangeOfLines(pattern,firstNonNull(lineRange,"*"));
    multicriteriaPatterns.add(pattern);
  }
  patternConf=StringUtils.defaultIfBlank(settings.getString(IgnoreIssuesConfiguration.PATTERNS_BLOCK_KEY),"");
  for (  String id : StringUtils.split(patternConf,',')) {
    String propPrefix=IgnoreIssuesConfiguration.PATTERNS_BLOCK_KEY + "." + id+ ".";
    String beginBlockRegexp=settings.getString(propPrefix + IgnoreIssuesConfiguration.BEGIN_BLOCK_REGEXP);
    String endBlockRegexp=settings.getString(propPrefix + IgnoreIssuesConfiguration.END_BLOCK_REGEXP);
    String[] fields=new String[]{beginBlockRegexp,endBlockRegexp};
    PatternDecoder.checkDoubleRegexpLineConstraints(StringUtils.join(fields,","),fields);
    Pattern pattern=new Pattern().setBeginBlockRegexp(nullToEmpty(beginBlockRegexp)).setEndBlockRegexp(nullToEmpty(endBlockRegexp));
    blockPatterns.add(pattern);
  }
  patternConf=StringUtils.defaultIfBlank(settings.getString(IgnoreIssuesConfiguration.PATTERNS_ALLFILE_KEY),"");
  for (  String id : StringUtils.split(patternConf,',')) {
    String propPrefix=IgnoreIssuesConfiguration.PATTERNS_ALLFILE_KEY + "." + id+ ".";
    String allFileRegexp=settings.getString(propPrefix + IgnoreIssuesConfiguration.FILE_REGEXP);
    PatternDecoder.checkWholeFileRegexp(allFileRegexp);
    Pattern pattern=new Pattern().setAllFileRegexp(nullToEmpty(allFileRegexp));
    allFilePatterns.add(pattern);
  }
}
