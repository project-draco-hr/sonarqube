{
  checkBranchFormat(newComponent.qualifier(),newComponent.branch());
  String keyWithBranch=ComponentKeys.createKey(newComponent.key(),newComponent.branch());
  ComponentDto existingComponent=getNullableByKey(keyWithBranch);
  if (existingComponent != null) {
    throw new BadRequestException(formatMessage("Could not create %s, key already exists: %s",newComponent.qualifier(),keyWithBranch));
  }
  String uuid=Uuids.create();
  ComponentDto component=new ComponentDto().setUuid(uuid).setRootUuid(uuid).setModuleUuid(null).setModuleUuidPath(ComponentDto.MODULE_UUID_PATH_SEP + uuid + ComponentDto.MODULE_UUID_PATH_SEP).setProjectUuid(uuid).setKey(keyWithBranch).setDeprecatedKey(keyWithBranch).setName(newComponent.name()).setLongName(newComponent.name()).setScope(Scopes.PROJECT).setQualifier(newComponent.qualifier()).setCreatedAt(new Date(system2.now()));
  dbClient.componentDao().insert(session,component);
  dbClient.componentIndexDao().indexResource(session,component.uuid());
  session.commit();
  return component;
}
