{
  org.sonar.api.rules.Rule apiRule=new org.sonar.api.rules.Rule();
  apiRule.setName(rule.name()).setLanguage(rule.language()).setKey(rule.key().rule()).setConfigKey(rule.internalKey()).setIsTemplate(rule.isTemplate()).setCreatedAt(rule.createdAt()).setUpdatedAt(rule.updatedAt()).setDescription(rule.htmlDescription()).setRepositoryKey(rule.key().repository()).setSeverity(rule.severity() != null ? RulePriority.valueOf(rule.severity()) : null).setStatus(rule.status().name()).setDefaultCharacteristicKey(rule.defaultDebtCharacteristicKey()).setDefaultSubCharacteristicKey(rule.defaultDebtSubCharacteristicKey()).setCharacteristicKey(rule.debtCharacteristicKey()).setSubCharacteristicKey(rule.debtSubCharacteristicKey()).setTags(rule.tags().toArray(new String[rule.tags().size()])).setId(((RuleDoc)rule).id());
  List<org.sonar.api.rules.RuleParam> apiParams=newArrayList();
  for (  RuleParam param : rule.params()) {
    apiParams.add(new org.sonar.api.rules.RuleParam(apiRule,param.key(),param.description(),param.type().type()).setDefaultValue(param.defaultValue()));
  }
  apiRule.setParams(apiParams);
  return apiRule;
}
