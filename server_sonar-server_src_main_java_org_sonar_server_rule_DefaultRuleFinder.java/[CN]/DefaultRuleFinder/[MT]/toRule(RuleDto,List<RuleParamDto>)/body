{
  String severity=rule.getSeverityString();
  String description=rule.getDescription();
  RuleDto.Format descriptionFormat=rule.getDescriptionFormat();
  org.sonar.api.rules.Rule apiRule=new org.sonar.api.rules.Rule();
  apiRule.setName(rule.getName()).setLanguage(rule.getLanguage()).setKey(rule.getRuleKey()).setConfigKey(rule.getConfigKey()).setIsTemplate(rule.isTemplate()).setCreatedAt(new Date(rule.getCreatedAtInMs())).setUpdatedAt(new Date(rule.getUpdatedAtInMs())).setRepositoryKey(rule.getRepositoryKey()).setSeverity(severity != null ? RulePriority.valueOf(severity) : null).setStatus(rule.getStatus().name()).setTags(rule.getTags().toArray(new String[rule.getTags().size()])).setId((rule.getId()));
  if (description != null && descriptionFormat != null) {
    if (RuleDto.Format.HTML.equals(descriptionFormat)) {
      apiRule.setDescription(description);
    }
 else {
      apiRule.setDescription(Markdown.convertToHtml(description));
    }
  }
  List<org.sonar.api.rules.RuleParam> apiParams=newArrayList();
  for (  RuleParamDto param : params) {
    apiParams.add(new org.sonar.api.rules.RuleParam(apiRule,param.getName(),param.getDescription(),param.getType()).setDefaultValue(param.getDefaultValue()));
  }
  apiRule.setParams(apiParams);
  return apiRule;
}
