{
  final List<Long> ids=new ArrayList<Long>();
  new MassUpdater(db,50).execute(new MassUpdater.InputLoader<Row>(){
    @Override public String selectSql(){
      return "SELECT md.measure_id FROM measure_data md";
    }
    @Override public Row load(    ResultSet rs) throws SQLException {
      Row row=new Row();
      row.measure_id=SqlUtil.getLong(rs,1);
      return row;
    }
  }
,new MassUpdater.InputConverter<Row>(){
    @Override public String updateSql(){
      return "UPDATE project_measures m SET m.measure_data = (SELECT md.data FROM measure_data md WHERE md.measure_id = ?) WHERE m.id=?";
    }
    @Override public boolean convert(    Row row,    PreparedStatement updateStatement) throws SQLException {
      ids.add(row.measure_id);
      updateStatement.setLong(1,row.measure_id);
      updateStatement.setLong(2,row.measure_id);
      return true;
    }
  }
,new MassUpdater.PeriodicUpdater(){
    @Override public boolean update(    Connection connection) throws SQLException {
      if (ids.size() > 0) {
        String deleteSql=new StringBuilder().append("DELETE measure_data where measure_id in (").append(StringUtils.repeat("?",",",ids.size())).append(")").toString();
        PreparedStatement s=connection.prepareStatement(deleteSql);
        int i=1;
        for (        Long id : ids) {
          s.setLong(i++,id);
        }
        s.executeUpdate();
        s.close();
        ids.clear();
        return true;
      }
      return false;
    }
  }
);
}
