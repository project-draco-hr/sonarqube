{
  ruleDao.insert(session,newRuleDto(RuleKey.of("java","S002")).setName("Dodgy - Consider returning a zero length array rather than null "));
  ruleDao.insert(session,newRuleDto(RuleKey.of("java","S001")).setName("Bad practice - Creates an empty zip file entry"));
  ruleDao.insert(session,newRuleDto(RuleKey.of("java","S003")).setName("XPath rule"));
  session.commit();
  MockUserSession.set();
  WsTester.TestRequest request=wsTester.newGetRequest(API_ENDPOINT,API_SEARCH_METHOD);
  request.setParam(SearchOptions.PARAM_FIELDS,"");
  request.setParam(SearchOptions.PARAM_SORT,RuleNormalizer.RuleField.NAME.key());
  request.setParam(SearchOptions.PARAM_ASCENDING,Boolean.TRUE.toString());
  WsTester.Result result=request.execute();
  result.assertJson("{\"total\":3,\"p\":1,\"ps\":10,\"rules\":[{\"key\":\"java:S001\"},{\"key\":\"java:S002\"},{\"key\":\"java:S003\"}]}");
  request=wsTester.newGetRequest(API_ENDPOINT,API_SEARCH_METHOD);
  request.setParam(SearchOptions.PARAM_FIELDS,"");
  request.setParam(SearchOptions.PARAM_SORT,RuleNormalizer.RuleField.NAME.key());
  request.setParam(SearchOptions.PARAM_ASCENDING,Boolean.FALSE.toString());
  result=request.execute();
  result.assertJson("{\"total\":3,\"p\":1,\"ps\":10,\"rules\":[{\"key\":\"java:S003\"},{\"key\":\"java:S002\"},{\"key\":\"java:S001\"}]}");
}
