{
  ruleDao.insert(session,RuleTesting.newXooX1());
  ruleDao.insert(session,RuleTesting.newXooX2());
  session.commit();
  session.clearCache();
  Date since=new Date();
  MockUserSession.set();
  WsTester.TestRequest request=tester.wsTester().newGetRequest(API_ENDPOINT,API_SEARCH_METHOD);
  request.setParam(SearchOptions.PARAM_FIELDS,"");
  request.setParam(SearchAction.PARAM_AVAILABLE_SINCE,DateUtils.formatDate(since));
  request.setParam(SearchOptions.PARAM_SORT,RuleNormalizer.RuleField.KEY.field());
  WsTester.Result result=request.execute();
  result.assertJson("{\"total\":2,\"p\":1,\"ps\":10,\"rules\":[{\"key\":\"xoo:x1\"},{\"key\":\"xoo:x2\"}]}");
  Calendar c=Calendar.getInstance();
  c.setTime(since);
  c.add(Calendar.DATE,1);
  MockUserSession.set();
  request=tester.wsTester().newGetRequest(API_ENDPOINT,API_SEARCH_METHOD);
  request.setParam(SearchOptions.PARAM_FIELDS,"");
  request.setParam(SearchAction.PARAM_AVAILABLE_SINCE,DateUtils.formatDate(c.getTime()));
  result=request.execute();
  result.assertJson("{\"total\":0,\"p\":1,\"ps\":10,\"rules\":[]}");
}
