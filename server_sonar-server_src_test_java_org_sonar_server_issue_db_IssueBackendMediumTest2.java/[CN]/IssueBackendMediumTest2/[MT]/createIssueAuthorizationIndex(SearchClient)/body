{
  BaseIndex baseIndex=new BaseIndex(IndexDefinition.createFor(IndexDefinition.ISSUES_PROJECT.getIndexName(),IndexDefinition.ISSUES_PROJECT.getIndexType()),null,searchClient){
    @Override protected String getKeyValue(    Serializable key){
      return null;
    }
    @Override protected org.elasticsearch.common.settings.Settings getIndexSettings() throws IOException {
      return ImmutableSettings.builder().build();
    }
    @Override protected Map mapProperties(){
      Map<String,Object> mapping=new HashMap<String,Object>();
      mapping.put("project",mapStringField());
      mapping.put("permission",mapStringField());
      mapping.put("groups",mapStringField());
      mapping.put("users",mapStringField());
      return mapping;
    }
    protected Map mapStringField(){
      Map<String,Object> mapping=new HashMap<String,Object>();
      mapping.put("type","string");
      mapping.put("index","analyzed");
      mapping.put("index_analyzer","keyword");
      mapping.put("search_analyzer","whitespace");
      return mapping;
    }
    @Override protected Map mapKey(){
      return Collections.emptyMap();
    }
    @Override public Object toDoc(    Map fields){
      return null;
    }
  }
;
  baseIndex.start();
  return baseIndex;
}
