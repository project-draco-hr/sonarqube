{
  String pluginKey=getPluginKey(request);
  String resource=getResourcePath(request);
  InputStream in=null;
  OutputStream out=null;
  try {
    PluginRepository pluginRepository=Platform.getInstance().getContainer().getComponentByType(PluginRepository.class);
    if (!pluginRepository.hasPlugin(pluginKey)) {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
      return;
    }
    in=pluginRepository.getPluginInstance(pluginKey).getClass().getClassLoader().getResourceAsStream(resource);
    if (in != null) {
      completeContentType(response,resource);
      out=response.getOutputStream();
      IOUtils.copy(in,out);
    }
 else {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
    }
  }
 catch (  Exception e) {
    LOG.error(String.format("Unable to load resource [%s] from plugin [%s]",resource,pluginKey),e);
    response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
  }
 finally {
    IOUtils.closeQuietly(in);
    IOUtils.closeQuietly(out);
  }
}
