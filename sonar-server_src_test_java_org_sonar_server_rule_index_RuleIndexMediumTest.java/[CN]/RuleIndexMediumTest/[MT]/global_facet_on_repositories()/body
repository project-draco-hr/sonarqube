{
  dao.insert(dbSession,newRuleDto(RuleKey.of("javascript","S001")).setRuleKey("X001"));
  dao.insert(dbSession,newRuleDto(RuleKey.of("php","S001")).setSystemTags(ImmutableSet.of("sysTag")));
  dao.insert(dbSession,newRuleDto(RuleKey.of("javascript","S002")).setRuleKey("X002").setTags(ImmutableSet.of("tag1")));
  dbSession.commit();
  index.refresh();
  RuleQuery query=new RuleQuery();
  Result result=index.search(query,new QueryOptions().setFacet(false));
  assertThat(result.getFacets()).isEmpty();
  result=index.search(query,new QueryOptions().setFacet(true));
  assertThat(result.getFacets()).isNotNull();
  assertThat(result.getFacets()).hasSize(3);
  Collection<FacetValue> repoFacets=result.getFacetValues("repositories");
  assertThat(repoFacets).hasSize(2);
  assertThat(Iterables.get(repoFacets,0).getKey()).isEqualTo("javascript");
  assertThat(Iterables.get(repoFacets,0).getValue()).isEqualTo(2);
  assertThat(Iterables.get(repoFacets,1).getKey()).isEqualTo("php");
  assertThat(Iterables.get(repoFacets,1).getValue()).isEqualTo(1);
  Collection<FacetValue> tagFacet=result.getFacetValues("tags");
  assertThat(tagFacet).hasSize(2);
}
