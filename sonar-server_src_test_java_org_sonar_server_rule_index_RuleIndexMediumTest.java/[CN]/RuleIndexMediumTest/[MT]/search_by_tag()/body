{
  dao.insert(dbSession,newRuleDto(RuleKey.of("java","S001")).setTags(ImmutableSet.of("tag1")));
  dao.insert(dbSession,newRuleDto(RuleKey.of("java","S002")).setTags(ImmutableSet.of("tag2")));
  dbSession.commit();
  RuleQuery query=new RuleQuery();
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(2);
  query=new RuleQuery().setQueryText("tag1");
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(1);
  assertThat(Iterables.getFirst(index.search(query,new QueryOptions()).getHits(),null).tags()).containsExactly("tag1");
  query=new RuleQuery().setQueryText("tag1 tag2");
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(2);
  query=new RuleQuery().setTags(ImmutableSet.of("tag2"));
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(1);
  assertThat(Iterables.getFirst(index.search(query,new QueryOptions()).getHits(),null).tags()).containsExactly("tag2");
  query=new RuleQuery().setTags(ImmutableSet.of("tag2")).setQueryText("tag1");
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(0);
  query=new RuleQuery().setTags(ImmutableSet.of("tag2")).setQueryText("tag1 tag2");
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(1);
  assertThat(Iterables.getFirst(index.search(query,new QueryOptions()).getHits(),null).tags()).containsExactly("tag2");
  query=new RuleQuery().setTags(Collections.<String>emptySet());
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(2);
  query=new RuleQuery().setTags(null);
  assertThat(index.search(query,new QueryOptions()).getHits()).hasSize(2);
}
