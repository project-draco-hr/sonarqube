{
  String value="//expression[primary/qualifiedIdentifier[count(IDENTIFIER) = 2]/IDENTIFIER[2]/@tokenValue = 'firstOf' and primary/identifierSuffix/arguments/expression[not(primary) or primary[not(qualifiedIdentifier) or identifierSuffix]]]";
  QualityProfileDto profile=QualityProfileDto.createFor("name","Language");
  dbClient.qualityProfileDao().insert(dbSession,profile);
  RuleDto rule=newRuleDto(RuleKey.of("java","S001"));
  dao.insert(dbSession,rule);
  RuleParamDto param=RuleParamDto.createFor(rule).setName("testing").setType("STRING").setDefaultValue(value);
  dao.addRuleParam(rule,param,dbSession);
  ActiveRuleDto activeRule=ActiveRuleDto.createFor(profile,rule).setSeverity("BLOCKER");
  ActiveRuleParamDto activeRuleParam=ActiveRuleParamDto.createFor(param);
  dbClient.activeRuleDao().insert(dbSession,activeRule);
  dbClient.activeRuleDao().addParam(activeRule,activeRuleParam,dbSession);
  dbSession.commit();
  assertThat(index.getByKey(rule.getKey()).params().get(0).defaultValue()).isEqualTo(value);
}
