{
  CharacteristicDto rootCharacteristicDto=new CharacteristicDto().setId(1).setKey("MEMORY_EFFICIENCY").setName("Memory use");
  CharacteristicDto characteristicDto=new CharacteristicDto().setId(2).setKey("EFFICIENCY").setName("Efficiency").setParentId(1);
  when(dao.selectEnabledCharacteristics()).thenReturn(newArrayList(rootCharacteristicDto,characteristicDto));
  DefaultTechnicalDebtModel result=(DefaultTechnicalDebtModel)provider.provide(dao);
  assertThat(result.rootCharacteristics()).hasSize(1);
  DefaultCharacteristic rootCharacteristic=result.characteristicByKey("MEMORY_EFFICIENCY");
  assertThat(rootCharacteristic.key()).isEqualTo("MEMORY_EFFICIENCY");
  assertThat(rootCharacteristic.name()).isEqualTo("Memory use");
  assertThat(rootCharacteristic.parent()).isNull();
  assertThat(rootCharacteristic.children()).hasSize(1);
  assertThat(rootCharacteristic.children().get(0).key()).isEqualTo("EFFICIENCY");
  DefaultCharacteristic characteristic=result.characteristicByKey("EFFICIENCY");
  assertThat(characteristic.key()).isEqualTo("EFFICIENCY");
  assertThat(characteristic.name()).isEqualTo("Efficiency");
  assertThat(characteristic.parent().key()).isEqualTo("MEMORY_EFFICIENCY");
  assertThat(characteristic.children()).isEmpty();
}
