{
  if (base == null) {
    return null;
  }
  if (priorVariables == null) {
    priorVariables=new ArrayList();
    priorVariables.add(base);
  }
  int begin=-1;
  int end=-1;
  int prec=0 - END_TOKEN.length();
  String variable=null;
  StringBuffer result=new StringBuffer();
  while (((begin=base.indexOf(START_TOKEN,prec + END_TOKEN.length())) > -1) && ((end=base.indexOf(END_TOKEN,begin)) > -1)) {
    result.append(base.substring(prec + END_TOKEN.length(),begin));
    variable=base.substring(begin + START_TOKEN.length(),end);
    if (priorVariables.contains(variable)) {
      String initialBase=priorVariables.remove(0).toString();
      priorVariables.add(variable);
      StringBuffer priorVariableSb=new StringBuffer();
      for (Iterator it=priorVariables.iterator(); it.hasNext(); ) {
        priorVariableSb.append(it.next());
        if (it.hasNext()) {
          priorVariableSb.append("->");
        }
      }
      throw new IllegalStateException("infinite loop in property interpolation of " + initialBase + ": "+ priorVariableSb.toString());
    }
 else {
      priorVariables.add(variable);
    }
    Object value=getProperty(variable);
    if (value != null) {
      result.append(interpolateHelper(value.toString(),priorVariables));
      priorVariables.remove(priorVariables.size() - 1);
    }
 else     if (defaults != null && defaults.getString(variable,null) != null) {
      result.append(defaults.getString(variable));
    }
 else {
      result.append(START_TOKEN).append(variable).append(END_TOKEN);
    }
    prec=end;
  }
  result.append(base.substring(prec + END_TOKEN.length(),base.length()));
  return result.toString();
}
