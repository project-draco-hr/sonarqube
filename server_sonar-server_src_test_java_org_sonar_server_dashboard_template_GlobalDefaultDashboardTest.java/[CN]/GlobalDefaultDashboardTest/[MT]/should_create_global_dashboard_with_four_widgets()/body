{
  when(dao.findSystemFilterByName(MyFavouritesFilter.NAME)).thenReturn(new MeasureFilterDto().setId(100L));
  when(dao.findSystemFilterByName(ProjectFilter.NAME)).thenReturn(new MeasureFilterDto().setId(101L));
  Dashboard dashboard=template.createDashboard();
  List<Widget> firstColumn=dashboard.getWidgetsOfColumn(1);
  assertThat(firstColumn).hasSize(2);
  assertThat(firstColumn.get(0).getId()).isEqualTo(WelcomeWidget.ID);
  assertThat(firstColumn.get(1).getId()).isEqualTo(MeasureFilterListWidget.ID);
  assertThat(firstColumn.get(1).getProperty("filter")).isEqualTo("100");
  List<Widget> secondColumn=dashboard.getWidgetsOfColumn(2);
  assertThat(secondColumn).hasSize(2);
  assertThat(secondColumn.get(0).getId()).isEqualTo(MeasureFilterListWidget.ID);
  assertThat(secondColumn.get(0).getProperty("filter")).isEqualTo("101");
  assertThat(secondColumn.get(1).getId()).isEqualTo(MeasureFilterAsTreemapWidget.ID);
  assertThat(secondColumn.get(1).getProperty("filter")).isEqualTo("101");
}
