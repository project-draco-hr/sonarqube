{
  loadWeights(context);
  double debt=0.0;
  Multiset<RulePriority> violationsByPriority=TreeMultiset.create();
  Map<Integer,Double> categoryDebt=new HashMap<Integer,Double>();
  for (  RuleMeasure violations : context.getMeasures(MeasuresFilters.rules(CoreMetrics.VIOLATIONS))) {
    if (MeasureUtils.hasValue(violations)) {
      violationsByPriority.add(violations.getRulePriority(),violations.getValue().intValue());
      double add=(int)weights.get(violations.getRulePriority()) * violations.getValue();
      debt+=add;
      Double categoryVal=(Double)ObjectUtils.defaultIfNull(categoryDebt.get(violations.getRuleCategory()),0.0);
      categoryDebt.put(violations.getRuleCategory(),categoryVal + add);
    }
  }
  Measure debtMeasure=new Measure(CoreMetrics.WEIGHTED_VIOLATIONS,debt,KeyValueFormat.format(violationsByPriority));
  saveMeasure(context,debtMeasure);
  for (  Map.Entry<Integer,Double> entry : categoryDebt.entrySet()) {
    RuleMeasure categDebt=RuleMeasure.createForCategory(CoreMetrics.WEIGHTED_VIOLATIONS,entry.getKey(),entry.getValue());
    categDebt.setPersistenceMode(PersistenceMode.MEMORY);
    saveMeasure(context,categDebt);
  }
}
