{
  super(CrawlerDepthLimit.LEAVES,POST_ORDER,new SimpleStackElementFactory<DevelopmentCost>(){
    @Override public DevelopmentCost createForAny(    Component component){
      return new DevelopmentCost();
    }
    /** 
 * Counter is not used at ProjectView level, saves on instantiating useless objects 
 */
    @Override public DevelopmentCost createForProjectView(    Component projectView){
      return null;
    }
  }
);
  this.metricRepository=metricRepository;
  this.measureRepository=measureRepository;
  this.sqaleRatingSettings=sqaleRatingSettings;
  this.developmentCostMetric=this.metricRepository.getByKey(CoreMetrics.DEVELOPMENT_COST_KEY);
  this.technicalDebtMetric=this.metricRepository.getByKey(CoreMetrics.TECHNICAL_DEBT_KEY);
  this.debtRatioMetric=this.metricRepository.getByKey(CoreMetrics.SQALE_DEBT_RATIO_KEY);
  this.sqaleRatingMetric=this.metricRepository.getByKey(CoreMetrics.SQALE_RATING_KEY);
}
