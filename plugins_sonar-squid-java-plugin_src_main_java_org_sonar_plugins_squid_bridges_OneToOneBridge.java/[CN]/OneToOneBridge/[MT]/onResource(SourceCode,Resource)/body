{
  context.saveMeasure(sonarResource,CoreMetrics.NCLOC,squidResource.getDouble(Metric.LINES_OF_CODE));
  context.saveMeasure(sonarResource,CoreMetrics.LINES,squidResource.getDouble(Metric.LINES));
  context.saveMeasure(sonarResource,CoreMetrics.COMMENT_LINES,squidResource.getDouble(Metric.COMMENT_LINES_WITHOUT_HEADER));
  context.saveMeasure(sonarResource,CoreMetrics.FUNCTIONS,squidResource.getDouble(Metric.METHODS));
  context.saveMeasure(sonarResource,CoreMetrics.ACCESSORS,squidResource.getDouble(Metric.ACCESSORS));
  context.saveMeasure(sonarResource,CoreMetrics.PUBLIC_API,squidResource.getDouble(Metric.PUBLIC_API));
  context.saveMeasure(sonarResource,CoreMetrics.CLASSES,squidResource.getDouble(Metric.CLASSES));
  context.saveMeasure(sonarResource,CoreMetrics.COMPLEXITY,squidResource.getDouble(Metric.COMPLEXITY));
  context.saveMeasure(sonarResource,CoreMetrics.STATEMENTS,squidResource.getDouble(Metric.STATEMENTS));
  context.saveMeasure(sonarResource,CoreMetrics.FILES,squidResource.getDouble(Metric.FILES));
  context.saveMeasure(sonarResource,CoreMetrics.COMMENTED_OUT_CODE_LINES,squidResource.getDouble(Metric.COMMENTED_OUT_CODE_LINES));
  context.saveMeasure(sonarResource,CoreMetrics.PUBLIC_DOCUMENTED_API_DENSITY,ParsingUtils.scaleValue(squidResource.getDouble(Metric.PUBLIC_DOCUMENTED_API_DENSITY) * 100,2));
}
