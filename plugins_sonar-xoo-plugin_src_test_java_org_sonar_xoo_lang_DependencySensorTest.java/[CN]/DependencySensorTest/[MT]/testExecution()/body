{
  File deps=new File(baseDir,"src/foo.xoo.deps");
  FileUtils.write(deps,"src/foo2.xoo:2\nsrc2/foo3.xoo:6\n\n#comment");
  DefaultInputFile inputFile1=new DefaultInputFile("foo","src/foo.xoo").setAbsolutePath(new File(baseDir,"src/foo.xoo").getAbsolutePath()).setLanguage("xoo");
  DefaultInputFile inputFile2=new DefaultInputFile("foo","src/foo2.xoo").setAbsolutePath(new File(baseDir,"src/foo2.xoo").getAbsolutePath()).setLanguage("xoo");
  DefaultInputFile inputFile3=new DefaultInputFile("foo","src2/foo3.xoo").setAbsolutePath(new File(baseDir,"src2/foo3.xoo").getAbsolutePath()).setLanguage("xoo");
  fileSystem.add(inputFile1);
  fileSystem.add(inputFile2);
  fileSystem.add(inputFile3);
  final SensorStorage sensorStorage=mock(SensorStorage.class);
  when(context.newDependency()).thenAnswer(new Answer<Dependency>(){
    @Override public Dependency answer(    InvocationOnMock invocation) throws Throwable {
      return new DefaultDependency(sensorStorage);
    }
  }
);
  sensor.execute(context);
  verify(sensorStorage).store(new DefaultDependency().from(inputFile1).to(inputFile2).weight(2));
  verify(sensorStorage).store(new DefaultDependency().from(inputFile1).to(inputFile3).weight(6));
}
