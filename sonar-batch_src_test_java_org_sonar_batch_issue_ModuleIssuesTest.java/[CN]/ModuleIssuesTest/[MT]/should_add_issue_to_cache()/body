{
  Rule rule=Rule.create("repoKey","ruleKey");
  ActiveRule activeRule=mock(ActiveRule.class);
  when(activeRule.getRule()).thenReturn(rule);
  when(activeRule.getSeverity()).thenReturn(RulePriority.INFO);
  when(qProfile.getActiveRule(anyString(),anyString())).thenReturn(activeRule);
  Date analysisDate=new Date();
  when(project.getAnalysisDate()).thenReturn(analysisDate);
  DefaultIssue issue=new DefaultIssue().setRuleRepositoryKey("repoKey").setRuleKey("ruleKey").setSeverity(Issue.SEVERITY_CRITICAL);
  moduleIssues.onIssueCreation(issue);
  ArgumentCaptor<Issue> argument=ArgumentCaptor.forClass(Issue.class);
  verify(cache).add(argument.capture());
  assertThat(argument.getValue().key()).isNotNull();
  assertThat(argument.getValue().status()).isEqualTo(Issue.STATUS_OPEN);
  assertThat(argument.getValue().severity()).isEqualTo(Issue.SEVERITY_CRITICAL);
  assertThat(argument.getValue().createdAt()).isEqualTo(analysisDate);
}
