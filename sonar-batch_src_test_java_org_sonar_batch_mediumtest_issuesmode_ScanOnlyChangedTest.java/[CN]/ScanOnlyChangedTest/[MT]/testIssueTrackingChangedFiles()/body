{
  File projectDir=copyProject("/mediumtest/xoo/sample");
  TaskResult result=tester.newScanTask(new File(projectDir,"sonar-project.properties")).property("sonar.scanChangedFilesOnly","true").start();
  int newIssues=0;
  int openIssues=0;
  int resolvedIssue=0;
  for (  Issue issue : result.trackedIssues()) {
    System.out.println(issue.message() + " " + issue.key()+ " "+ issue.ruleKey()+ " "+ issue.isNew()+ " "+ issue.resolution()+ " "+ issue.componentKey()+ " "+ issue.line());
    if (issue.isNew()) {
      newIssues++;
    }
 else     if (issue.resolution() != null) {
      resolvedIssue++;
    }
 else {
      openIssues++;
    }
  }
  System.out.println("new: " + newIssues + " open: "+ openIssues+ " resolved "+ resolvedIssue);
  assertThat(newIssues).isEqualTo(8);
  assertThat(openIssues).isEqualTo(3);
  assertThat(resolvedIssue).isEqualTo(0);
  assertThat(result.trackedIssues()).haveExactly(2,new Condition<Issue>(){
    @Override public boolean matches(    Issue value){
      return value.componentKey().endsWith("HelloJava.xoo");
    }
  }
);
}
