{
  DuplicationCache cache=new DuplicationCache(caches);
  DefaultDuplication group1=new DefaultDuplication().setOriginBlock(new Duplication.Block("foo",1,2));
  group1.duplicates().add(new Duplication.Block("foo",1,2));
  group1.duplicates().add(new Duplication.Block("foo2",12,22));
  group1.duplicates().add(new Duplication.Block("foo3",13,23));
  DefaultDuplication group2=new DefaultDuplication().setOriginBlock(new Duplication.Block("2foo",1,2));
  group2.duplicates().add(new Duplication.Block("2foo",1,2));
  group2.duplicates().add(new Duplication.Block("2foo2",12,22));
  group2.duplicates().add(new Duplication.Block("2foo3",13,23));
  assertThat(cache.componentKeys()).hasSize(0);
  cache.put("foo",group1);
  cache.put("foo",group2);
  assertThat(cache.componentKeys()).hasSize(1);
  assertThat(cache.byComponent("foo")).hasSize(2);
  Iterable<DefaultDuplication> entry=cache.byComponent("foo");
  assertThat(entry.iterator().next().originBlock().resourceKey()).isEqualTo("foo");
}
