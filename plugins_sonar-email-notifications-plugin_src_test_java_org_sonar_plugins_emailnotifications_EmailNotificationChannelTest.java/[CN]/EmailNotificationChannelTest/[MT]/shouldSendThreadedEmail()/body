{
  configure();
  EmailMessage emailMessage=new EmailMessage().setMessageId("reviews/view/1").setFrom("Full Username").setTo("user@nowhere").setSubject("Review #3").setMessage("I'll take care of this violation.");
  channel.deliver(emailMessage);
  assertThat(server.getReceivedEmailSize(),is(1));
  SmtpMessage email=(SmtpMessage)server.getReceivedEmail().next();
  assertThat(email.getHeaderValue("Content-Type"),is("text/plain; charset=UTF-8"));
  assertThat(email.getHeaderValue("In-Reply-To"),is("<reviews/view/1@nemo.sonarsource.org>"));
  assertThat(email.getHeaderValue("References"),is("<reviews/view/1@nemo.sonarsource.org>"));
  assertThat(email.getHeaderValue("List-ID"),is("Sonar <sonar.nemo.sonarsource.org>"));
  assertThat(email.getHeaderValue("List-Archive"),is("http://nemo.sonarsource.org"));
  assertThat(email.getHeaderValue("From"),is("Full Username <server@nowhere>"));
  assertThat(email.getHeaderValue("To"),is("<user@nowhere>"));
  assertThat(email.getHeaderValue("Subject"),is("[SONAR] Review #3"));
  assertThat(email.getBody(),is("I'll take care of this violation."));
}
