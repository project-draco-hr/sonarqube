{
  Map<String,String> params=Maps.newHashMap();
  params.put(BaseChartWeb.CHART_PARAM_TYPE,request.getParameter(BaseChartWeb.CHART_PARAM_TYPE));
  params.put(BaseChartWeb.CHART_PARAM_VALUES,request.getParameter(BaseChartWeb.CHART_PARAM_VALUES));
  params.put(BaseChartWeb.CHART_PARAM_COLORS,request.getParameter(BaseChartWeb.CHART_PARAM_COLORS));
  params.put(BaseChartWeb.CHART_PARAM_RANGEMAX,request.getParameter(BaseChartWeb.CHART_PARAM_RANGEMAX));
  params.put(BaseChartWeb.CHART_PARAM_TITLE,request.getParameter(BaseChartWeb.CHART_PARAM_TITLE));
  params.put(BaseChartWeb.CHART_PARAM_DIMENSIONS,request.getParameter(BaseChartWeb.CHART_PARAM_DIMENSIONS));
  params.put(BaseChartWeb.CHART_PARAM_CATEGORIES_AXISMARGIN_VISIBLE,request.getParameter(BaseChartWeb.CHART_PARAM_CATEGORIES_AXISMARGIN_VISIBLE));
  params.put(BaseChartWeb.CHART_PARAM_RANGEAXIS_VISIBLE,request.getParameter(BaseChartWeb.CHART_PARAM_RANGEAXIS_VISIBLE));
  params.put(BaseChartWeb.CHART_PARAM_SERIES,request.getParameter(BaseChartWeb.CHART_PARAM_SERIES));
  params.put(BaseChartWeb.CHART_PARAM_CATEGORIES,request.getParameter(BaseChartWeb.CHART_PARAM_CATEGORIES));
  params.put(BaseChartWeb.CHART_PARAM_CATEGORIES_AXISMARGIN_LOWER,request.getParameter(BaseChartWeb.CHART_PARAM_CATEGORIES_AXISMARGIN_LOWER));
  params.put(BaseChartWeb.CHART_PARAM_CATEGORIES_AXISMARGIN_UPPER,request.getParameter(BaseChartWeb.CHART_PARAM_CATEGORIES_AXISMARGIN_UPPER));
  params.put(BaseChartWeb.CHART_PARAM_SERIES_AXISMARGIN_LOWER,request.getParameter(BaseChartWeb.CHART_PARAM_SERIES_AXISMARGIN_LOWER));
  params.put(BaseChartWeb.CHART_PARAM_SERIES_AXISMARGIN_UPPER,request.getParameter(BaseChartWeb.CHART_PARAM_SERIES_AXISMARGIN_UPPER));
  params.put(BaseChartWeb.CHART_PARAM_SERIES_AXISMARGIN_TICKUNIT,request.getParameter(BaseChartWeb.CHART_PARAM_SERIES_AXISMARGIN_TICKUNIT));
  params.put(BaseChartWeb.CHART_PARAM_INSETS,request.getParameter(BaseChartWeb.CHART_PARAM_INSETS));
  params.put(BaseChartWeb.CHART_PARAM_OUTLINE_RANGEGRIDLINES_VISIBLE,request.getParameter(BaseChartWeb.CHART_PARAM_OUTLINE_RANGEGRIDLINES_VISIBLE));
  params.put(BaseChartWeb.CHART_PARAM_OUTLINE_VISIBLE,request.getParameter(BaseChartWeb.CHART_PARAM_OUTLINE_VISIBLE));
  String chartType=params.get(BaseChartWeb.CHART_PARAM_TYPE);
  DeprecatedChart chart=null;
  if (BaseChartWeb.BAR_CHART_HORIZONTAL.equals(chartType) || BaseChartWeb.BAR_CHART_VERTICAL.equals(chartType) || BaseChartWeb.STACKED_BAR_CHART.equals(chartType)) {
    chart=new BarChart(params);
  }
 else   if (BaseChartWeb.BAR_CHART_VERTICAL_CUSTOM.equals(chartType)) {
    chart=new CustomBarChart(params);
  }
 else   if (BaseChartWeb.PIE_CHART.equals(chartType)) {
    chart=new PieChart(params);
  }
 else   if (BaseChartWeb.SPARKLINES_CHART.equals(chartType)) {
    chart=new SparkLinesChart(params);
  }
  OutputStream out=null;
  try {
    if (chart != null) {
      out=response.getOutputStream();
      response.setContentType("image/png");
      chart.exportChartAsPNG(out);
    }
  }
 catch (  Exception e) {
    LOG.error("Generating chart " + chart.getClass().getName(),e);
  }
 finally {
    IOUtils.closeQuietly(out);
  }
}
