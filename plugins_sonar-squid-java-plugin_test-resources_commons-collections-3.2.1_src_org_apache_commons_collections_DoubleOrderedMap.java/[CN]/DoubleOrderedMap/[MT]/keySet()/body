{
  if (setOfKeys[KEY] == null) {
    setOfKeys[KEY]=new AbstractSet(){
      public Iterator iterator(){
        return new DoubleOrderedMapIterator(KEY){
          protected Object doGetNext(){
            return lastReturnedNode.getData(KEY);
          }
        }
;
      }
      public int size(){
        return DoubleOrderedMap.this.size();
      }
      public boolean contains(      Object o){
        return containsKey(o);
      }
      public boolean remove(      Object o){
        int oldNodeCount=nodeCount;
        DoubleOrderedMap.this.remove(o);
        return nodeCount != oldNodeCount;
      }
      public void clear(){
        DoubleOrderedMap.this.clear();
      }
    }
;
  }
  return setOfKeys[KEY];
}
