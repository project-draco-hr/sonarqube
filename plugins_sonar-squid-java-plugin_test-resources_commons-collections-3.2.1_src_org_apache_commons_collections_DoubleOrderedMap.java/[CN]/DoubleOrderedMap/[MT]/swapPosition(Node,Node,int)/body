{
  Node xFormerParent=x.getParent(index);
  Node xFormerLeftChild=x.getLeft(index);
  Node xFormerRightChild=x.getRight(index);
  Node yFormerParent=y.getParent(index);
  Node yFormerLeftChild=y.getLeft(index);
  Node yFormerRightChild=y.getRight(index);
  boolean xWasLeftChild=(x.getParent(index) != null) && (x == x.getParent(index).getLeft(index));
  boolean yWasLeftChild=(y.getParent(index) != null) && (y == y.getParent(index).getLeft(index));
  if (x == yFormerParent) {
    x.setParent(y,index);
    if (yWasLeftChild) {
      y.setLeft(x,index);
      y.setRight(xFormerRightChild,index);
    }
 else {
      y.setRight(x,index);
      y.setLeft(xFormerLeftChild,index);
    }
  }
 else {
    x.setParent(yFormerParent,index);
    if (yFormerParent != null) {
      if (yWasLeftChild) {
        yFormerParent.setLeft(x,index);
      }
 else {
        yFormerParent.setRight(x,index);
      }
    }
    y.setLeft(xFormerLeftChild,index);
    y.setRight(xFormerRightChild,index);
  }
  if (y == xFormerParent) {
    y.setParent(x,index);
    if (xWasLeftChild) {
      x.setLeft(y,index);
      x.setRight(yFormerRightChild,index);
    }
 else {
      x.setRight(y,index);
      x.setLeft(yFormerLeftChild,index);
    }
  }
 else {
    y.setParent(xFormerParent,index);
    if (xFormerParent != null) {
      if (xWasLeftChild) {
        xFormerParent.setLeft(y,index);
      }
 else {
        xFormerParent.setRight(y,index);
      }
    }
    x.setLeft(yFormerLeftChild,index);
    x.setRight(yFormerRightChild,index);
  }
  if (x.getLeft(index) != null) {
    x.getLeft(index).setParent(x,index);
  }
  if (x.getRight(index) != null) {
    x.getRight(index).setParent(x,index);
  }
  if (y.getLeft(index) != null) {
    y.getLeft(index).setParent(y,index);
  }
  if (y.getRight(index) != null) {
    y.getRight(index).setParent(y,index);
  }
  x.swapColors(y,index);
  if (rootNode[index] == x) {
    rootNode[index]=y;
  }
 else   if (rootNode[index] == y) {
    rootNode[index]=x;
  }
}
