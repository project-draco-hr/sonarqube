{
  Cache<String> cache=caches.createCache("capitals");
  assertThat(cache.get("europe","france")).isNull();
  cache.put("europe","france","paris");
  cache.put("europe","italy","rome");
  assertThat(cache.get("europe")).isNull();
  assertThat(cache.get("europe","france")).isEqualTo("paris");
  assertThat(cache.get("europe","italy")).isEqualTo("rome");
  assertThat(cache.get("europe")).isNull();
  assertThat(cache.keySet("europe")).containsOnly("france","italy");
  assertThat(cache.keySet()).containsOnly("europe");
  assertThat(cache.containsKey("europe")).isFalse();
  assertThat(cache.containsKey("europe","france")).isTrue();
  assertThat(cache.containsKey("europe","spain")).isFalse();
  assertThat(cache.values()).containsOnly("paris","rome");
  assertThat(cache.values("america")).isEmpty();
  assertThat(cache.values("europe")).containsOnly("paris","rome");
  assertThat(cache.values("oceania")).isEmpty();
  Cache.Entry[] allEntries=Iterables.toArray(cache.<String>entries(),Cache.Entry.class);
  assertThat(allEntries).hasSize(2);
  assertThat(allEntries[0].key()).isEqualTo(new String[]{"europe","france"});
  assertThat(allEntries[0].value()).isEqualTo("paris");
  assertThat(allEntries[1].key()).isEqualTo(new String[]{"europe","italy"});
  assertThat(allEntries[1].value()).isEqualTo("rome");
  Cache.SubEntry[] subEntries=Iterables.toArray(cache.<String>subEntries("europe"),Cache.SubEntry.class);
  assertThat(subEntries).hasSize(2);
  assertThat(subEntries[0].keyAsString()).isEqualTo("france");
  assertThat(subEntries[0].value()).isEqualTo("paris");
  assertThat(subEntries[1].keyAsString()).isEqualTo("italy");
  assertThat(subEntries[1].value()).isEqualTo("rome");
  cache.remove("europe","france");
  assertThat(cache.values()).containsOnly("rome");
  assertThat(cache.get("europe","france")).isNull();
  assertThat(cache.get("europe","italy")).isEqualTo("rome");
  assertThat(cache.containsKey("europe","france")).isFalse();
  assertThat(cache.keySet("europe")).containsOnly("italy");
  cache.clear("america");
  assertThat(cache.keySet()).containsOnly("europe");
  cache.clear("europe");
  assertThat(cache.keySet()).isEmpty();
}
