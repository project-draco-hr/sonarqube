{
  Cache<String> cache=caches.createCache("places");
  assertThat(cache.get("europe","france","paris")).isNull();
  cache.put("europe","france","paris","eiffel tower");
  cache.put("europe","france","annecy","lake");
  cache.put("europe","italy","rome","colosseum");
  assertThat(cache.get("europe")).isNull();
  assertThat(cache.get("europe","france")).isNull();
  assertThat(cache.get("europe","france","paris")).isEqualTo("eiffel tower");
  assertThat(cache.get("europe","france","annecy")).isEqualTo("lake");
  assertThat(cache.get("europe","italy","rome")).isEqualTo("colosseum");
  assertThat(cache.keySet()).containsOnly("europe");
  assertThat(cache.keySet("europe")).containsOnly("france","italy");
  assertThat(cache.keySet("europe","france")).containsOnly("annecy","paris");
  assertThat(cache.containsKey("europe")).isFalse();
  assertThat(cache.containsKey("europe","france")).isFalse();
  assertThat(cache.containsKey("europe","france","annecy")).isTrue();
  assertThat(cache.containsKey("europe","france","biarritz")).isFalse();
  assertThat(cache.values()).containsOnly("eiffel tower","lake","colosseum");
  Cache.Entry[] allEntries=Iterables.toArray(cache.entries(),Cache.Entry.class);
  assertThat(allEntries).hasSize(3);
  assertThat(allEntries[0].key()).isEqualTo(new String[]{"europe","france","annecy"});
  assertThat(allEntries[0].value()).isEqualTo("lake");
  assertThat(allEntries[1].key()).isEqualTo(new String[]{"europe","france","paris"});
  assertThat(allEntries[1].value()).isEqualTo("eiffel tower");
  assertThat(allEntries[2].key()).isEqualTo(new String[]{"europe","italy","rome"});
  assertThat(allEntries[2].value()).isEqualTo("colosseum");
  Cache.SubEntry[] subEntries=Iterables.toArray(cache.subEntries("europe"),Cache.SubEntry.class);
  assertThat(subEntries).hasSize(2);
  assertThat(subEntries[0].keyAsString()).isEqualTo("france");
  assertThat(subEntries[0].value()).isNull();
  assertThat(subEntries[1].keyAsString()).isEqualTo("italy");
  assertThat(subEntries[1].value()).isNull();
  cache.remove("europe","france","annecy");
  assertThat(cache.values()).containsOnly("eiffel tower","colosseum");
  assertThat(cache.get("europe","france","annecy")).isNull();
  assertThat(cache.get("europe","italy","rome")).isEqualTo("colosseum");
  assertThat(cache.containsKey("europe","france")).isFalse();
  cache.clear("europe","italy");
  assertThat(cache.values()).containsOnly("eiffel tower");
  cache.clear("europe");
  assertThat(cache.values()).isEmpty();
}
