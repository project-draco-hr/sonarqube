{
  QualityProfileDto parent=new QualityProfileDto().setId(2).setName("Old Parent").setLanguage("java");
  when(qualityProfileDao.selectById(1,session)).thenReturn(new QualityProfileDto().setId(1).setName("Child").setLanguage("java").setParent("Old Parent"));
  when(qualityProfileDao.selectParent(2,session)).thenReturn(parent);
  when(profilesManager.profileParentChanged(anyInt(),anyString(),anyString())).thenReturn(new ProfilesManager.RuleInheritanceActions());
  operations.updateParentProfile(1,null,authorizedUserSession);
  ArgumentCaptor<QualityProfileDto> profileArgument=ArgumentCaptor.forClass(QualityProfileDto.class);
  verify(qualityProfileDao).update(profileArgument.capture(),eq(session));
  assertThat(profileArgument.getValue().getParent()).isNull();
  assertThat(profileArgument.getValue().getLanguage()).isEqualTo("java");
  verify(session).commit();
  verify(profilesManager).profileParentChanged(1,null,"Nicolas");
  verify(ruleRegistry).deleteActiveRules(anyListOf(Integer.class));
  verify(ruleRegistry).bulkIndexActiveRuleIds(anyListOf(Integer.class),eq(session));
}
