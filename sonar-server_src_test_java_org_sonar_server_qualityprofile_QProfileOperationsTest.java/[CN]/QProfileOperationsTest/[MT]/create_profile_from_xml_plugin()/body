{
  RulesProfile profile=RulesProfile.create("Default","java");
  Rule rule=Rule.create("pmd","rule1");
  rule.createParameter("max");
  rule.setId(10);
  ActiveRule activeRule=profile.activateRule(rule,RulePriority.BLOCKER);
  activeRule.setParameter("max","10");
  Map<String,String> xmlProfilesByPlugin=newHashMap();
  xmlProfilesByPlugin.put("pmd","<xml/>");
  ProfileImporter importer=mock(ProfileImporter.class);
  when(importer.getKey()).thenReturn("pmd");
  when(importer.importProfile(any(Reader.class),any(ValidationMessages.class))).thenReturn(profile);
  importers.add(importer);
  operations.newProfile("Default","java",xmlProfilesByPlugin,authorizedUserSession);
  verify(session).commit();
  ArgumentCaptor<QualityProfileDto> profileArgument=ArgumentCaptor.forClass(QualityProfileDto.class);
  verify(qualityProfileDao).insert(profileArgument.capture(),eq(session));
  assertThat(profileArgument.getValue().getName()).isEqualTo("Default");
  assertThat(profileArgument.getValue().getLanguage()).isEqualTo("java");
  ArgumentCaptor<ActiveRuleDto> activeRuleArgument=ArgumentCaptor.forClass(ActiveRuleDto.class);
  verify(activeRuleDao).insert(activeRuleArgument.capture(),eq(session));
  assertThat(activeRuleArgument.getValue().getRulId()).isEqualTo(10);
  assertThat(activeRuleArgument.getValue().getSeverity()).isEqualTo(4);
  ArgumentCaptor<ActiveRuleParamDto> activeRuleParamArgument=ArgumentCaptor.forClass(ActiveRuleParamDto.class);
  verify(activeRuleDao).insert(activeRuleParamArgument.capture(),eq(session));
  assertThat(activeRuleParamArgument.getValue().getKey()).isEqualTo("max");
  assertThat(activeRuleParamArgument.getValue().getValue()).isEqualTo("10");
  verify(ruleRegistry).bulkIndexActiveRules(anyListOf(ActiveRuleDto.class),any(Multimap.class));
}
