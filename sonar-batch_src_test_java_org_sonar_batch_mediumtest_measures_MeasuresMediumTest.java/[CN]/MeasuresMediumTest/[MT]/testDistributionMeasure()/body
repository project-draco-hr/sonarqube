{
  File baseDir=temp.newFolder();
  File srcDir=new File(baseDir,"src");
  srcDir.mkdir();
  File xooFile=new File(srcDir,"sample.xoo");
  File xooMeasureFile=new File(srcDir,"sample.xoo.measures");
  File xooScmFile=new File(srcDir,"sample.xoo.scm");
  FileUtils.write(xooFile,"Sample xoo\ncontent");
  FileUtils.write(xooMeasureFile,"lines:5");
  FileUtils.write(xooScmFile,"1,julien,2013-01-04\n" + "1,julien,2013-01-04\n" + "2,julien,2013-02-03\n"+ "2,julien,2013-02-03\n"+ "3,simon,2013-03-04\n");
  TaskResult result=tester.newTask().properties(ImmutableMap.<String,String>builder().put("sonar.task","scan").put("sonar.projectBaseDir",baseDir.getAbsolutePath()).put("sonar.projectKey","com.foo.project").put("sonar.projectName","Foo Project").put("sonar.projectVersion","1.0-SNAPSHOT").put("sonar.projectDescription","Description of Foo Project").put("sonar.sources","src").build()).start();
  assertThat(result.measures()).hasSize(4);
  assertThat(result.measures()).contains(new DefaultMeasureBuilder<Integer>().forMetric(CoreMetrics.LINES).onFile(new DefaultInputFile("com.foo.project","src/sample.xoo")).withValue(5).build());
  assertThat(result.measures()).contains(new DefaultMeasureBuilder<String>().forMetric(CoreMetrics.SCM_AUTHORS_BY_LINE).onFile(new DefaultInputFile("com.foo.project","src/sample.xoo")).withValue("1=julien;2=julien;3=julien;4=julien;5=simon").build());
}
