{
  logTester.setLevel(LoggerLevel.TRACE);
  Connection connection=mock(Connection.class);
  when(originDataSource.getConnection()).thenReturn(connection);
  String sqlWithParams="select from dual";
  PreparedStatement preparedStatement=mock(PreparedStatement.class);
  when(connection.prepareStatement(sqlWithParams)).thenReturn(preparedStatement);
  when(preparedStatement.execute()).thenReturn(true);
  ProfiledDataSource ds=new ProfiledDataSource(originDataSource,ProfiledConnectionInterceptor.INSTANCE);
  assertThat(ds.getUrl()).isNull();
  assertThat(ds.getConnection().getClientInfo()).isNull();
  PreparedStatement preparedStatementProxy=ds.getConnection().prepareStatement(sqlWithParams);
  assertThat(preparedStatementProxy.getConnection()).isNull();
  assertThat(preparedStatementProxy.execute()).isTrue();
  assertThat(logTester.logs(LoggerLevel.TRACE)).hasSize(1);
  assertThat(logTester.logs(LoggerLevel.TRACE).get(0)).contains("sql=select from dual").doesNotContain("params=");
}
