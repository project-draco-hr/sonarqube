{
  logTester.setLevel(LoggerLevel.TRACE);
  Connection connection=mock(Connection.class);
  when(originDataSource.getConnection()).thenReturn(connection);
  String sqlWithParams="insert into polop (col1, col2, col3, col4) values (?, ?, ?, ?, ?)";
  int param1=42;
  String param2="plouf";
  Date param3=new Date(System.currentTimeMillis());
  Timestamp param4=new Timestamp(System.currentTimeMillis());
  byte[] param5="blob".getBytes("UTF-8");
  PreparedStatement preparedStatement=mock(PreparedStatement.class);
  when(connection.prepareStatement(sqlWithParams)).thenReturn(preparedStatement);
  when(preparedStatement.execute()).thenReturn(true);
  ProfiledDataSource ds=new ProfiledDataSource(originDataSource,ProfiledConnectionInterceptor.INSTANCE);
  assertThat(ds.getUrl()).isNull();
  assertThat(ds.getConnection().getClientInfo()).isNull();
  PreparedStatement preparedStatementProxy=ds.getConnection().prepareStatement(sqlWithParams);
  preparedStatementProxy.setInt(1,param1);
  preparedStatementProxy.setString(2,param2);
  preparedStatementProxy.setDate(3,param3);
  preparedStatementProxy.setTimestamp(4,param4);
  preparedStatementProxy.setBlob(5,new ByteArrayInputStream(param5));
  assertThat(preparedStatementProxy.getConnection()).isNull();
  assertThat(preparedStatementProxy.execute()).isTrue();
  assertThat(logTester.logs(LoggerLevel.TRACE)).hasSize(1);
  assertThat(logTester.logs(LoggerLevel.TRACE).get(0)).contains("sql=insert into polop (col1, col2, col3, col4) values (?, ?, ?, ?, ?)").contains("params=42, plouf");
}
