{
  createChildProfiles();
  RuleActivation activation=new RuleActivation(XOO_X1).setSeverity(INFO).setParameter("max","7");
  activate(activation,XOO_P1_KEY);
  activation=new RuleActivation(XOO_X2).setSeverity(INFO);
  activate(activation,XOO_P1_KEY);
  RuleQuery query=new RuleQuery().setActivation(true).setQProfileKey(XOO_P1_KEY);
  BulkChangeResult result=ruleActivator.bulkActivate(query,XOO_P1_KEY,"BLOCKER");
  assertThat(result.countSucceeded()).isEqualTo(2);
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P1_KEY,XOO_X1),BLOCKER,null,ImmutableMap.of("max","7"));
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P1_KEY,XOO_X2),BLOCKER,null,Collections.<String,String>emptyMap());
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P2_KEY,XOO_X1),BLOCKER,INHERITED,ImmutableMap.of("max","7"));
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P2_KEY,XOO_X2),BLOCKER,INHERITED,Collections.<String,String>emptyMap());
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P3_KEY,XOO_X1),BLOCKER,INHERITED,ImmutableMap.of("max","7"));
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P3_KEY,XOO_X2),BLOCKER,INHERITED,Collections.<String,String>emptyMap());
}
