{
  RuleActivation activation=new RuleActivation(XOO_X1).setSeverity("MAJOR");
  activate(activation,XOO_P1_KEY);
  activation=new RuleActivation(XOO_X2).setSeverity("MAJOR");
  activate(activation,XOO_P1_KEY);
  db.qualityProfileDao().insert(dbSession,QProfileTesting.newXooP2());
  RuleDto rule=db.ruleDao().selectOrFailByKey(dbSession,XOO_X1);
  rule.setStatus(RuleStatus.REMOVED);
  db.ruleDao().update(dbSession,rule);
  dbSession.commit();
  dbSession.clearCache();
  ruleActivator.setParent(dbSession,XOO_P2_KEY,XOO_P1_KEY);
  dbSession.clearCache();
  assertThat(db.qualityProfileDao().selectByKey(dbSession,XOO_P2_KEY).getParentKee()).isEqualTo(XOO_P1_KEY);
  assertThat(countActiveRules(XOO_P2_KEY)).isEqualTo(1);
  verifyHasActiveRuleInDbAndIndex(ActiveRuleKey.of(XOO_P2_KEY,XOO_X2),MAJOR,INHERITED,Collections.emptyMap());
}
