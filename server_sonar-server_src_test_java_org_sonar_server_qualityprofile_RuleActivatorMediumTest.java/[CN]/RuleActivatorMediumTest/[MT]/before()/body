{
  tester.clearDbAndIndexes();
  db=tester.get(DbClient.class);
  dbSession=db.openSession(false);
  ruleActivator=tester.get(RuleActivator.class);
  index=tester.get(ActiveRuleIndex.class);
  RuleDto javaRule=RuleTesting.newDto(RuleKey.of("squid","j1")).setSeverity("MAJOR").setLanguage("java");
  RuleDto xooRule1=RuleTesting.newXooX1().setSeverity("MINOR");
  RuleDto xooRule2=RuleTesting.newXooX2().setSeverity("INFO");
  RuleDto xooTemplateRule1=RuleTesting.newTemplateRule(TEMPLATE_RULE_KEY).setSeverity("MINOR").setLanguage("xoo");
  RuleDto manualRule=RuleTesting.newDto(MANUAL_RULE_KEY);
  db.deprecatedRuleDao().insert(dbSession,javaRule,xooRule1,xooRule2,xooTemplateRule1,manualRule);
  db.deprecatedRuleDao().insertRuleParam(dbSession,xooRule1,RuleParamDto.createFor(xooRule1).setName("max").setDefaultValue("10").setType(RuleParamType.INTEGER.type()));
  db.deprecatedRuleDao().insertRuleParam(dbSession,xooRule1,RuleParamDto.createFor(xooRule1).setName("min").setType(RuleParamType.INTEGER.type()));
  db.deprecatedRuleDao().insertRuleParam(dbSession,xooTemplateRule1,RuleParamDto.createFor(xooTemplateRule1).setName("format").setType(RuleParamType.STRING.type()));
  RuleDto xooCustomRule1=RuleTesting.newCustomRule(xooTemplateRule1).setRuleKey(CUSTOM_RULE_KEY.rule()).setSeverity("MINOR").setLanguage("xoo");
  db.deprecatedRuleDao().insert(dbSession,xooCustomRule1);
  db.deprecatedRuleDao().insertRuleParam(dbSession,xooCustomRule1,RuleParamDto.createFor(xooTemplateRule1).setName("format").setDefaultValue("txt").setType(RuleParamType.STRING.type()));
  profileDto=QProfileTesting.newXooP1();
  db.qualityProfileDao().insert(dbSession,profileDto);
  dbSession.commit();
  dbSession.clearCache();
}
