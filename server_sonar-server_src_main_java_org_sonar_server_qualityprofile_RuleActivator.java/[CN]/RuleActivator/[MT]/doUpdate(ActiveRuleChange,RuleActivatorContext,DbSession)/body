{
  ActiveRuleDao dao=db.activeRuleDao();
  ActiveRuleDto activeRule=context.activeRule();
  if (activeRule != null) {
    String severity=change.getSeverity();
    if (severity != null) {
      activeRule.setSeverity(severity);
    }
    ActiveRule.Inheritance inheritance=change.getInheritance();
    if (inheritance != null) {
      activeRule.setInheritance(inheritance.name());
    }
    activeRule.setUpdatedAtInMs(system2.now());
    dao.update(dbSession,activeRule);
    for (    Map.Entry<String,String> param : change.getParameters().entrySet()) {
      ActiveRuleParamDto activeRuleParamDto=context.activeRuleParamsAsMap().get(param.getKey());
      if (activeRuleParamDto == null) {
        if (param.getValue() != null) {
          activeRuleParamDto=ActiveRuleParamDto.createFor(context.ruleParamsByKeys().get(param.getKey()));
          activeRuleParamDto.setValue(param.getValue());
          dao.insertParam(dbSession,activeRule,activeRuleParamDto);
        }
      }
 else {
        if (param.getValue() != null) {
          activeRuleParamDto.setValue(param.getValue());
          dao.updateParam(dbSession,activeRule,activeRuleParamDto);
        }
 else {
          dao.deleteParam(dbSession,activeRule,activeRuleParamDto);
        }
      }
    }
  }
  return activeRule;
}
