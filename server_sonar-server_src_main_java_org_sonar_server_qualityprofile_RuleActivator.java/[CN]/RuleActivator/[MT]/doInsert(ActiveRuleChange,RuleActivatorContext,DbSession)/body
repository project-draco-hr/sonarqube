{
  ActiveRuleDto activeRule;
  ActiveRuleDao dao=db.activeRuleDao();
  activeRule=ActiveRuleDto.createFor(context.profile(),context.rule());
  String severity=change.getSeverity();
  if (severity != null) {
    activeRule.setSeverity(severity);
  }
  ActiveRule.Inheritance inheritance=change.getInheritance();
  if (inheritance != null) {
    activeRule.setInheritance(inheritance.name());
  }
  activeRule.setUpdatedAtInMs(system2.now());
  activeRule.setCreatedAtInMs(system2.now());
  dao.insert(dbSession,activeRule);
  for (  Map.Entry<String,String> param : change.getParameters().entrySet()) {
    if (param.getValue() != null) {
      ActiveRuleParamDto paramDto=ActiveRuleParamDto.createFor(context.ruleParamsByKeys().get(param.getKey()));
      paramDto.setValue(param.getValue());
      dao.insertParam(dbSession,activeRule,paramDto);
    }
  }
  return activeRule;
}
