{
  BatchReportReader reader=new BatchReportReader(reportPublisher.getReportDir());
  List<Symbols.Symbol> symbols=new ArrayList<Symbols.Symbol>(reader.readComponentSymbols(resourceCache.get(inputFile).batchId()));
  if (symbols.isEmpty()) {
    return;
  }
  StringBuilder[] refsPerLine=new StringBuilder[inputFile.lines()];
  int symbolId=1;
  Collections.sort(symbols,new Comparator<Symbols.Symbol>(){
    @Override public int compare(    Symbols.Symbol o1,    Symbols.Symbol o2){
      if (o1.getDeclaration().getStartLine() == o2.getDeclaration().getStartLine()) {
        return Integer.compare(o1.getDeclaration().getStartOffset(),o2.getDeclaration().getStartOffset());
      }
 else {
        return Integer.compare(o1.getDeclaration().getStartLine(),o2.getDeclaration().getStartLine());
      }
    }
  }
);
  for (  Symbols.Symbol symbol : symbols) {
    addSymbol(symbolId,symbol.getDeclaration(),inputFile.originalLineOffsets(),refsPerLine);
    for (    Range reference : symbol.getReferenceList()) {
      addSymbol(symbolId,reference,inputFile.originalLineOffsets(),refsPerLine);
    }
    symbolId++;
  }
  for (int i=0; i < refsPerLine.length; i++) {
    StringBuilder sb=refsPerLine[i];
    if (sb != null) {
      to.getLinesBuilder(i).setSymbols(sb.toString());
    }
  }
}
