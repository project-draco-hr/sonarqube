{
  BatchReportReader reader=new BatchReportReader(reportPublisher.getReportDir());
  File highlightingFile=reader.readComponentSyntaxHighlighting(resourceCache.get(inputFile).batchId());
  if (highlightingFile == null) {
    return;
  }
  StringBuilder[] highlightingPerLine=new StringBuilder[inputFile.lines()];
  RuleItemWriter ruleItemWriter=new RuleItemWriter();
  int currentLineIdx=1;
  InputStream inputStream=null;
  try {
    inputStream=FileUtils.openInputStream(highlightingFile);
    BatchReport.SyntaxHighlighting rule=BatchReport.SyntaxHighlighting.PARSER.parseDelimitedFrom(inputStream);
    while (rule != null) {
      while (currentLineIdx < inputFile.lines() && rule.getRange().getStartLine() > currentLineIdx) {
        currentLineIdx++;
      }
      writeDataPerLine(inputFile.originalLineOffsets(),rule,rule.getRange(),highlightingPerLine,ruleItemWriter);
      rule=BatchReport.SyntaxHighlighting.PARSER.parseDelimitedFrom(inputStream);
    }
  }
 catch (  Exception e) {
    throw new IllegalStateException("Can't read syntax highlighting for " + inputFile.absolutePath(),e);
  }
 finally {
    IOUtils.closeQuietly(inputStream);
  }
  for (int i=0; i < highlightingPerLine.length; i++) {
    StringBuilder sb=highlightingPerLine[i];
    if (sb != null) {
      to.getLinesBuilder(i).setHighlighting(sb.toString());
    }
  }
}
