{
  IssueQuery.Sort sort=query.sort();
  if (sort != null) {
    IssueProcessor issueProcessor;
switch (sort) {
case ASSIGNEE:
      issueProcessor=new AssigneeSortIssueProcessor();
    break;
case SEVERITY:
  issueProcessor=new SeveritySortIssueProcessor();
break;
case STATUS:
issueProcessor=new StatusSortIssueProcessor();
break;
case CREATION_DATE:
issueProcessor=new CreationDateSortIssueProcessor();
break;
case UPDATE_DATE:
issueProcessor=new UpdateDateSortIssueProcessor();
break;
case CLOSE_DATE:
issueProcessor=new CloseDateSortIssueProcessor();
break;
default :
throw new IllegalArgumentException("Cannot sort issues on field : " + sort.name());
}
return issueProcessor.sort(issues,query.asc());
}
return issues;
}
