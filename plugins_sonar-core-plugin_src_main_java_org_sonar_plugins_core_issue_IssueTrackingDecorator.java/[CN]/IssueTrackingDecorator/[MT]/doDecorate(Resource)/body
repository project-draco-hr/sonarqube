{
  Collection<DefaultIssue> issues=Lists.newArrayList();
  for (  Issue issue : issueCache.byComponent(resource.getEffectiveKey())) {
    issueCache.remove(issue);
    issues.add((DefaultIssue)issue);
  }
  Collection<IssueDto> dbOpenIssues=initialOpenIssues.selectAndRemove(resource.getId());
  IssueTrackingResult trackingResult=tracking.track(resource,dbOpenIssues,issues);
  addUnmatched(trackingResult.unmatched(),issues);
  mergeMatched(trackingResult);
  if (ResourceUtils.isProject(resource)) {
    addDead(issues);
  }
  for (  DefaultIssue issue : issues) {
    workflow.doAutomaticTransition(issue,changeContext);
    handlers.execute(issue,changeContext);
    issueCache.put(issue);
  }
}
