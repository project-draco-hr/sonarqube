{
  for (  DefaultIssue issue : result.matched()) {
    IssueDto ref=result.matching(issue);
    issue.setKey(ref.getKee());
    issue.setCreationDate(ref.getIssueCreationDate());
    issue.setUpdateDate(ref.getIssueUpdateDate());
    issue.setCloseDate(ref.getIssueCloseDate());
    issue.setNew(false);
    issue.setEndOfLife(false);
    issue.setOnDisabledRule(false);
    issue.setSelectedAt(ref.getSelectedAt());
    issue.setActionPlanKey(ref.getActionPlanKey());
    issue.setResolution(ref.getResolution());
    issue.setStatus(ref.getStatus());
    issue.setAssignee(ref.getAssignee());
    issue.setAuthorLogin(ref.getAuthorLogin());
    issue.setTags(ref.getTags());
    if (ref.getIssueAttributes() != null) {
      issue.setAttributes(KeyValueFormat.parse(ref.getIssueAttributes()));
    }
    Collection<IssueChangeDto> issueChangeDtos=initialOpenIssues.selectChangelog(issue.key());
    for (    IssueChangeDto issueChangeDto : issueChangeDtos) {
      issue.addChange(issueChangeDto.toFieldDiffs());
    }
    if (ref.isManualSeverity()) {
      issue.setManualSeverity(true);
      issue.setSeverity(ref.getSeverity());
    }
 else {
      updater.setPastSeverity(issue,ref.getSeverity(),changeContext);
    }
    updater.setPastLine(issue,ref.getLine());
    updater.setPastMessage(issue,ref.getMessage(),changeContext);
    updater.setPastEffortToFix(issue,ref.getEffortToFix(),changeContext);
    Long debtInMinutes=ref.getDebt();
    Duration previousTechnicalDebt=debtInMinutes != null ? Duration.create(debtInMinutes) : null;
    updater.setPastTechnicalDebt(issue,previousTechnicalDebt,changeContext);
    updater.setPastProject(issue,ref.getProjectKey(),changeContext);
  }
}
