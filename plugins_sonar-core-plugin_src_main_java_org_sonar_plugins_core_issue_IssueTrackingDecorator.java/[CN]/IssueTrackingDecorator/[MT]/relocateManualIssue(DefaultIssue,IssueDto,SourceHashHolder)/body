{
  Logger logger=LoggerFactory.getLogger(IssueTrackingDecorator.class);
  logger.debug("Trying to relocate manual issue {}",oldIssue.getKee());
  Collection<Integer> newLinesWithSameHash=sourceHashHolder.getNewLinesMatching(oldIssue.getLine());
  logger.debug("Found the following lines with same hash: {}",newLinesWithSameHash);
  if (newLinesWithSameHash.size() == 0) {
    if (oldIssue.getLine() > sourceHashHolder.getHashedSource().length()) {
      logger.debug("Old issue line {} is out of new source, closing and removing line number",oldIssue.getLine());
      newIssue.setLine(null);
      updater.setStatus(newIssue,Issue.STATUS_CLOSED,changeContext);
      updater.setResolution(newIssue,Issue.RESOLUTION_REMOVED,changeContext);
      updater.setPastLine(newIssue,oldIssue.getLine());
      updater.setPastMessage(newIssue,oldIssue.getMessage(),changeContext);
      updater.setPastEffortToFix(newIssue,oldIssue.getEffortToFix(),changeContext);
    }
  }
 else   if (newLinesWithSameHash.size() == 1) {
    Integer newLine=newLinesWithSameHash.iterator().next();
    logger.debug("Relocating issue to line {}",newLine);
    newIssue.setLine(newLine);
    updater.setPastLine(newIssue,oldIssue.getLine());
    updater.setPastMessage(newIssue,oldIssue.getMessage(),changeContext);
    updater.setPastEffortToFix(newIssue,oldIssue.getEffortToFix(),changeContext);
  }
}
