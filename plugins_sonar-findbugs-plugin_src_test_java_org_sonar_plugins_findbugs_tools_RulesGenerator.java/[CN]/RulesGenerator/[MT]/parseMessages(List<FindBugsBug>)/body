{
  URL messages=new URL("http://findbugs.googlecode.com/svn/branches/" + FOR_VERSION + "/findbugs/etc/messages.xml");
  InputStream in=messages.openStream();
  final List<Rule> rules=new ArrayList<Rule>();
  StaxParser p=new StaxParser(new StaxParser.XmlStreamHandler(){
    public void stream(    SMHierarchicCursor rootCursor) throws XMLStreamException {
      rootCursor.advance();
      Map<String,String> bugCategoriesDecr=new HashMap<String,String>();
      SMInputCursor childrens=rootCursor.childElementCursor();
      while (childrens.getNext() != null) {
        if (childrens.asEvent().isEndElement())         continue;
        if (childrens.getLocalName().equals("BugCategory")) {
          String bugCateg=childrens.getAttrValue("category");
          bugCategoriesDecr.put(bugCateg,childrens.childElementCursor("Description").advance().collectDescendantText());
        }
 else         if (childrens.getLocalName().equals("BugPattern")) {
          String bugType=childrens.getAttrValue("type");
          FindBugsBug bug=getFindBugsBugByType(bugType,bugs);
          if (bug == null)           continue;
          rules.add(getRuleForBug(bugType,bug,bugCategoriesDecr,childrens));
        }
      }
    }
  }
);
  p.parse(in);
  in.close();
  StandardRulesXmlParser parser=new StandardRulesXmlParser();
  return parser.toXml(rules);
}
