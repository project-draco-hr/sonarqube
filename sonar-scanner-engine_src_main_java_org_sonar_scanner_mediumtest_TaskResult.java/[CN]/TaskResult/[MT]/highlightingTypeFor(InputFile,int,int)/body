{
  int ref=reportComponents.get(((DefaultInputFile)file).key()).getRef();
  if (!reader.hasSyntaxHighlighting(ref)) {
    return Collections.emptyList();
  }
  TextPointer pointer=file.newPointer(line,lineOffset);
  List<TypeOfText> result=new ArrayList<>();
  try (CloseableIterator<ScannerReport.SyntaxHighlightingRule> it=reader.readComponentSyntaxHighlighting(ref)){
    while (it.hasNext()) {
      ScannerReport.SyntaxHighlightingRule rule=it.next();
      TextRange ruleRange=toRange(file,rule.getRange());
      if (ruleRange.start().compareTo(pointer) <= 0 && ruleRange.end().compareTo(pointer) > 0) {
        result.add(ScannerReportUtils.toBatchType(rule.getType()));
      }
    }
  }
 catch (  Exception e) {
    throw new IllegalStateException("Can't read syntax highlighting for " + file.absolutePath(),e);
  }
  return result;
}
