{
  Rule rule=new Rule.Builder().setId(1).setKey("AvoidCycle").setRepositoryKey("squid").setName("Avoid Cycle").setDescription("Avoid cycle between packages").setLanguage("java").setSeverity(Severity.BLOCKER).setStatus("BETA").setCardinality(Cardinality.SINGLE.name()).setTemplateId(2).setRuleNote(new RuleNote("Some note","john",new Date(),new Date())).setAdminTags(newArrayList("AdminTag")).setSystemTags(newArrayList("SysTag")).setParams(newArrayList(new RuleParam("key","desc","default",RuleParamType.STRING))).setCreatedAt(new Date()).setUpdatedAt(new Date()).build();
  assertThat(rule.id()).isEqualTo(1);
  assertThat(rule.ruleKey()).isEqualTo(RuleKey.of("squid","AvoidCycle"));
  assertThat(rule.name()).isEqualTo("Avoid Cycle");
  assertThat(rule.description()).isEqualTo("Avoid cycle between packages");
  assertThat(rule.language()).isEqualTo("java");
  assertThat(rule.severity()).isEqualTo("BLOCKER");
  assertThat(rule.status()).isEqualTo("BETA");
  assertThat(rule.cardinality()).isEqualTo("SINGLE");
  assertThat(rule.templateId()).isEqualTo(2);
  assertThat(rule.ruleNote()).isNotNull();
  assertThat(rule.adminTags()).hasSize(1);
  assertThat(rule.systemTags()).hasSize(1);
  assertThat(rule.params()).hasSize(1);
  assertThat(rule.createdAt()).isNotNull();
  assertThat(rule.updatedAt()).isNotNull();
}
