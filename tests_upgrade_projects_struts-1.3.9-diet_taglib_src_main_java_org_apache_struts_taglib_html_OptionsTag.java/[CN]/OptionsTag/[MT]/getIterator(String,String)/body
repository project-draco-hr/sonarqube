{
  String beanName=name;
  if (beanName == null) {
    beanName=Constants.BEAN_KEY;
  }
  Object bean=TagUtils.getInstance().lookup(pageContext,beanName,null);
  if (bean == null) {
    throw new JspException(messages.getMessage("getter.bean",beanName));
  }
  Object collection=bean;
  if (property != null) {
    try {
      collection=PropertyUtils.getProperty(bean,property);
      if (collection == null) {
        throw new JspException(messages.getMessage("getter.property",property));
      }
    }
 catch (    IllegalAccessException e) {
      throw new JspException(messages.getMessage("getter.access",property,name));
    }
catch (    InvocationTargetException e) {
      Throwable t=e.getTargetException();
      throw new JspException(messages.getMessage("getter.result",property,t.toString()));
    }
catch (    NoSuchMethodException e) {
      throw new JspException(messages.getMessage("getter.method",property,name));
    }
  }
  if (collection.getClass().isArray()) {
    collection=Arrays.asList((Object[])collection);
  }
  if (collection instanceof Collection) {
    return (((Collection)collection).iterator());
  }
 else   if (collection instanceof Iterator) {
    return ((Iterator)collection);
  }
 else   if (collection instanceof Map) {
    return (((Map)collection).entrySet().iterator());
  }
 else   if (collection instanceof Enumeration) {
    return new IteratorAdapter((Enumeration)collection);
  }
 else {
    throw new JspException(messages.getMessage("optionsTag.iterator",collection.toString()));
  }
}
