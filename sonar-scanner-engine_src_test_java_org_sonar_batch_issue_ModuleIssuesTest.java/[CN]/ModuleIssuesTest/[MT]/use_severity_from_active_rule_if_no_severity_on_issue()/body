{
  ruleBuilder.add(SQUID_RULE_KEY).setName(SQUID_RULE_NAME);
  activeRulesBuilder.create(SQUID_RULE_KEY).setSeverity(Severity.INFO).activate();
  initModuleIssues();
  DefaultIssue issue=new DefaultIssue().at(new DefaultIssueLocation().on(file).at(file.selectLine(3)).message("Foo")).forRule(SQUID_RULE_KEY);
  when(filters.accept(anyString(),any(ScannerReport.Issue.class))).thenReturn(true);
  moduleIssues.initAndAddIssue(issue);
  ArgumentCaptor<ScannerReport.Issue> argument=ArgumentCaptor.forClass(ScannerReport.Issue.class);
  verify(reportPublisher.getWriter()).appendComponentIssue(eq(1),argument.capture());
  assertThat(argument.getValue().getSeverity()).isEqualTo(org.sonar.scanner.protocol.Constants.Severity.INFO);
}
