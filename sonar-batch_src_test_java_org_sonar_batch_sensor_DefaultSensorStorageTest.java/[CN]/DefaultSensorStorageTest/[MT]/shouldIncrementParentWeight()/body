{
  Resource src1=Directory.create("src1").setEffectiveKey("foo:src1");
  Resource src2=Directory.create("src2").setEffectiveKey("foo:src2");
  Resource foo=File.create("src1/Foo.java").setEffectiveKey("foo:src1/Foo.java");
  Resource bar=File.create("src2/Bar.java").setEffectiveKey("foo:src2/Bar.java");
  resourceCache.add(src1,null);
  resourceCache.add(src2,null);
  resourceCache.add(foo,src1);
  resourceCache.add(bar,src2);
  Dependency parentDep=new Dependency(src1,src2).setWeight(4);
  when(sonarIndex.getEdge(src1,src2)).thenReturn(parentDep);
  sensorStorage.store(new DefaultDependency().from(new DefaultInputFile("foo","src1/Foo.java").setType(Type.MAIN)).to(new DefaultInputFile("foo","src2/Bar.java").setType(Type.MAIN)).weight(3));
  ArgumentCaptor<Dependency> argumentCaptor=ArgumentCaptor.forClass(Dependency.class);
  verify(sonarIndex).addDependency(argumentCaptor.capture());
  assertThat(parentDep.getWeight()).isEqualTo(5);
  Dependency value=argumentCaptor.getValue();
  assertThat(value.getFrom()).isEqualTo(foo);
  assertThat(value.getTo()).isEqualTo(bar);
  assertThat(value.getWeight()).isEqualTo(3);
  assertThat(value.getUsage()).isEqualTo("USES");
}
