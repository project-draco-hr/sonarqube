{
  Resource foo=File.create("src1/Foo.java").setEffectiveKey("foo:src1/Foo.java");
  Resource bar=File.create("src2/Bar.java").setEffectiveKey("foo:src2/Bar.java");
  resourceCache.add(foo,null);
  resourceCache.add(bar,null);
  sensorStorage.store(new DefaultDependency().from(new DefaultInputFile("foo","src1/Foo.java").setType(Type.MAIN)).to(new DefaultInputFile("foo","src2/Bar.java").setType(Type.MAIN)).weight(3));
  ArgumentCaptor<Dependency> argumentCaptor=ArgumentCaptor.forClass(Dependency.class);
  verify(sonarIndex,times(2)).addDependency(argumentCaptor.capture());
  assertThat(argumentCaptor.getAllValues()).hasSize(2);
  Dependency value1=argumentCaptor.getAllValues().get(0);
  assertThat(value1.getFrom()).isEqualTo(Directory.create("src1"));
  assertThat(value1.getTo()).isEqualTo(Directory.create("src2"));
  assertThat(value1.getWeight()).isEqualTo(1);
  assertThat(value1.getUsage()).isEqualTo("USES");
  Dependency value2=argumentCaptor.getAllValues().get(1);
  assertThat(value2.getFrom()).isEqualTo(foo);
  assertThat(value2.getTo()).isEqualTo(bar);
  assertThat(value2.getWeight()).isEqualTo(3);
  assertThat(value2.getUsage()).isEqualTo("USES");
}
