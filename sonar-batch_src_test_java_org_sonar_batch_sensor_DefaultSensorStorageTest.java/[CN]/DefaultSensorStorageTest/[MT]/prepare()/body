{
  activeRules=new ActiveRulesBuilder().build();
  fs=new DefaultFileSystem(temp.newFolder().toPath());
  MetricFinder metricFinder=mock(MetricFinder.class);
  when(metricFinder.findByKey(CoreMetrics.NCLOC_KEY)).thenReturn(CoreMetrics.NCLOC);
  when(metricFinder.findByKey(CoreMetrics.FUNCTION_COMPLEXITY_DISTRIBUTION_KEY)).thenReturn(CoreMetrics.FUNCTION_COMPLEXITY_DISTRIBUTION);
  settings=new Settings();
  moduleIssues=mock(ModuleIssues.class);
  project=new Project("myProject");
  sonarIndex=mock(DefaultIndex.class);
  CoverageExclusions coverageExclusions=mock(CoverageExclusions.class);
  when(coverageExclusions.accept(any(Resource.class),any(Measure.class))).thenReturn(true);
  resourceCache=new BatchComponentCache();
  sensorStorage=new DefaultSensorStorage(metricFinder,project,moduleIssues,settings,fs,activeRules,mock(DuplicationCache.class),sonarIndex,coverageExclusions,resourceCache,mock(ReportPublisher.class));
}
