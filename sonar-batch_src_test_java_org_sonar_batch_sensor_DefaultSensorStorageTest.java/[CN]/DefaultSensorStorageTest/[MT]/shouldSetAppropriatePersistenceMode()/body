{
  InputFile file=new DefaultInputFile("foo","src/Foo.php");
  ArgumentCaptor<org.sonar.api.measures.Measure> argumentCaptor=ArgumentCaptor.forClass(org.sonar.api.measures.Measure.class);
  Resource sonarFile=File.create("src/Foo.php").setEffectiveKey("foo:src/Foo.php");
  resourceCache.add(sonarFile,null).setInputPath(file);
  when(sonarIndex.addMeasure(eq(sonarFile),argumentCaptor.capture())).thenReturn(null);
  sensorStorage.store(new DefaultMeasure().onFile(file).forMetric(CoreMetrics.FUNCTION_COMPLEXITY_DISTRIBUTION).withValue("foo"));
  org.sonar.api.measures.Measure m=argumentCaptor.getValue();
  assertThat(m.getData()).isEqualTo("foo");
  assertThat(m.getMetric()).isEqualTo(CoreMetrics.FUNCTION_COMPLEXITY_DISTRIBUTION);
  assertThat(m.getPersistenceMode()).isEqualTo(PersistenceMode.MEMORY);
}
