{
  LOGGER.info("Register profile " + name);
  QualityProfileDto profileDto=dbClient.qualityProfileDao().selectByNameAndLanguage(name.getName(),name.getLanguage(),session);
  if (profileDto != null) {
    List<ActiveRuleChange> deleteChanges=profileFactory.delete(session,profileDto.getKey(),true);
    session.commit();
    activeRuleIndexer.index(deleteChanges);
  }
  profileFactory.create(session,name);
  List<ActiveRuleChange> changes=new ArrayList<>();
  for (  RulesProfile profile : profiles) {
    for (    org.sonar.api.rules.ActiveRule activeRule : profile.getActiveRules()) {
      RuleKey ruleKey=RuleKey.of(activeRule.getRepositoryKey(),activeRule.getRuleKey());
      RuleActivation activation=new RuleActivation(ruleKey);
      activation.setSeverity(activeRule.getSeverity() != null ? activeRule.getSeverity().name() : null);
      for (      ActiveRuleParam param : activeRule.getActiveRuleParams()) {
        activation.setParameter(param.getKey(),param.getValue());
      }
      changes.addAll(ruleActivator.activate(session,activation,name));
    }
  }
  LoadedTemplateDto template=new LoadedTemplateDto(templateKey(name),LoadedTemplateDto.QUALITY_PROFILE_TYPE);
  dbClient.loadedTemplateDao().insert(template,session);
  session.commit();
  activeRuleIndexer.index(changes);
}
