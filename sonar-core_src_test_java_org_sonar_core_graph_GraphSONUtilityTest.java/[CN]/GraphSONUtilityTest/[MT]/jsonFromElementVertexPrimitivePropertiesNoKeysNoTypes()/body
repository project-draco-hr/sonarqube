{
  Vertex v=this.graph.addVertex(1);
  v.setProperty("keyString","string");
  v.setProperty("keyLong",1L);
  v.setProperty("keyInt",2);
  v.setProperty("keyFloat",3.3f);
  v.setProperty("keyExponentialDouble",1312928167.626012);
  v.setProperty("keyDouble",4.4);
  v.setProperty("keyBoolean",true);
  JSONObject json=GraphSONUtility.jsonFromElement(v,null,GraphSONMode.NORMAL);
  assertThat(json).isNotNull();
  assertThat(json.containsKey(GraphSONTokens._ID)).isTrue();
  assertThat(json.get(GraphSONTokens._ID)).isEqualTo("1");
  assertThat(json.containsKey("keyString")).isTrue();
  assertThat(json.get("keyString")).isEqualTo("string");
  assertThat(json.containsKey("keyLong")).isTrue();
  assertThat(json.get("keyLong")).isEqualTo(1L);
  assertThat(json.containsKey("keyInt")).isTrue();
  assertThat(json.get("keyInt")).isEqualTo(2);
  assertThat(json.containsKey("keyFloat")).isTrue();
  assertThat(json.get("keyFloat")).isEqualTo(3.3f);
  assertThat(json.containsKey("keyExponentialDouble")).isTrue();
  assertThat(json.get("keyExponentialDouble")).isEqualTo(1312928167.626012);
  assertThat(json.containsKey("keyDouble")).isTrue();
  assertThat(json.get("keyDouble")).isEqualTo(4.4);
  assertThat(json.containsKey("keyBoolean")).isTrue();
  assertThat(json.get("keyBoolean")).isEqualTo(true);
}
