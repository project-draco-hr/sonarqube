{
  action.createParam(Param.TEXT_QUERY).setDescription("UTF-8 search query").setExampleValue("xpath");
  action.createParam(PARAM_KEY).setDescription("Key of rule to search for").setExampleValue("squid:S001");
  action.createParam(PARAM_REPOSITORIES).setDescription("Comma-separated list of repositories").setExampleValue("checkstyle,findbugs");
  action.createParam(PARAM_SEVERITIES).setDescription("Comma-separated list of default severities. Not the same than severity of rules in Quality profiles.").setPossibleValues(Severity.ALL).setExampleValue("CRITICAL,BLOCKER");
  action.createParam(PARAM_LANGUAGES).setDescription("Comma-separated list of languages").setExampleValue("java,js");
  action.createParam(PARAM_STATUSES).setDescription("Comma-separated list of status codes").setPossibleValues(RuleStatus.values()).setExampleValue(RuleStatus.READY);
  action.createParam(PARAM_AVAILABLE_SINCE).setDescription("Filters rules added since date. Format is yyyy-MM-dd").setExampleValue("2014-06-22");
  action.createParam(PARAM_TAGS).setDescription("Comma-separated list of tags. Returned rules match any of the tags (OR operator)").setExampleValue("security,java8");
  action.createParam(PARAM_TYPES).setSince("5.5").setDescription("Comma-separated list of types. Returned rules match any of the tags (OR operator)").setPossibleValues(RuleType.values()).setExampleValue(RuleType.BUG);
  action.createParam(PARAM_ACTIVATION).setDescription("Filter rules that are activated or deactivated on the selected Quality profile. Ignored if " + "the parameter '" + PARAM_QPROFILE + "' is not set.").setBooleanPossibleValues();
  action.createParam(PARAM_QPROFILE).setDescription("Key of Quality profile to filter on. Used only if the parameter '" + PARAM_ACTIVATION + "' is set.").setExampleValue("sonar-way-cs-12345");
  action.createParam(PARAM_INHERITANCE).setDescription("Comma-separated list of values of inheritance for a rule within a quality profile. Used only if the parameter '" + PARAM_ACTIVATION + "' is set.").setPossibleValues(ActiveRule.Inheritance.NONE.name(),ActiveRule.Inheritance.INHERITED.name(),ActiveRule.Inheritance.OVERRIDES.name()).setExampleValue(ActiveRule.Inheritance.INHERITED.name() + "," + ActiveRule.Inheritance.OVERRIDES.name());
  action.createParam(PARAM_ACTIVE_SEVERITIES).setDescription("Comma-separated list of activation severities, i.e the severity of rules in Quality profiles.").setPossibleValues(Severity.ALL).setExampleValue("CRITICAL,BLOCKER");
  action.createParam(PARAM_IS_TEMPLATE).setDescription("Filter template rules").setBooleanPossibleValues();
  action.createParam(PARAM_TEMPLATE_KEY).setDescription("Key of the template rule to filter on. Used to search for the custom rules based on this template.").setExampleValue("java:S001");
  action.createParam(Param.SORT).setDescription("Sort field").setPossibleValues(RuleIndexDefinition.SORT_FIELDS).setExampleValue(RuleIndexDefinition.SORT_FIELDS.iterator().next());
  action.createParam(Param.ASCENDING).setDescription("Ascending sort").setBooleanPossibleValues().setDefaultValue(true);
}
