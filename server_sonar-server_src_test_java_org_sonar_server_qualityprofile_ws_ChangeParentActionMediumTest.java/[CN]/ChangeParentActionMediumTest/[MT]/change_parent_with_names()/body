{
  QualityProfileDto parent1=createProfile("xoo","Parent 1");
  QualityProfileDto parent2=createProfile("xoo","Parent 2");
  QualityProfileDto child=createProfile("xoo","Child");
  RuleDto rule1=createRule("xoo","rule1");
  RuleDto rule2=createRule("xoo","rule2");
  createActiveRule(rule1,parent1);
  createActiveRule(rule2,parent2);
  session.commit();
  assertThat(db.activeRuleDao().selectByProfileKey(session,child.getKey())).isEmpty();
  wsTester.newPostRequest(QProfilesWs.API_ENDPOINT,"change_parent").setParam(QProfileIdentificationParamUtils.PARAM_LANGUAGE,"xoo").setParam(QProfileIdentificationParamUtils.PARAM_PROFILE_NAME,child.getName()).setParam("parentName",parent1.getName()).execute();
  session.clearCache();
  List<ActiveRuleDto> activeRules1=db.activeRuleDao().selectByProfileKey(session,child.getKey());
  assertThat(activeRules1).hasSize(1);
  assertThat(activeRules1.get(0).getKey().ruleKey().rule()).isEqualTo("rule1");
  wsTester.newPostRequest(QProfilesWs.API_ENDPOINT,"change_parent").setParam(QProfileIdentificationParamUtils.PARAM_LANGUAGE,"xoo").setParam(QProfileIdentificationParamUtils.PARAM_PROFILE_NAME,child.getName()).setParam("parentName",parent2.getName()).execute();
  session.clearCache();
  List<ActiveRuleDto> activeRules2=db.activeRuleDao().selectByProfileKey(session,child.getKey());
  assertThat(activeRules2).hasSize(1);
  assertThat(activeRules2.get(0).getKey().ruleKey().rule()).isEqualTo("rule2");
  wsTester.newPostRequest(QProfilesWs.API_ENDPOINT,"change_parent").setParam(QProfileIdentificationParamUtils.PARAM_LANGUAGE,"xoo").setParam(QProfileIdentificationParamUtils.PARAM_PROFILE_NAME,child.getName()).setParam("parentName","").execute();
  session.clearCache();
  List<ActiveRuleDto> activeRules=db.activeRuleDao().selectByProfileKey(session,child.getKey());
  assertThat(activeRules).isEmpty();
}
