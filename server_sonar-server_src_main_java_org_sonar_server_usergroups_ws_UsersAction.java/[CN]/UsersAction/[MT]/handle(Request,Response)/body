{
  userSession.checkLoggedIn().checkGlobalPermission(GlobalPermissions.SYSTEM_ADMIN);
  Long groupId=request.mandatoryParamAsLong(PARAM_ID);
  int pageSize=request.mandatoryParamAsInt(Param.PAGE_SIZE);
  int page=request.mandatoryParamAsInt(Param.PAGE);
  String queryString=request.param(Param.TEXT_QUERY);
  String selected=request.mandatoryParam(Param.SELECTED);
  UserMembershipQuery query=UserMembershipQuery.builder().groupId(groupId).memberSearch(queryString).membership(getMembership(selected)).pageIndex(page).pageSize(pageSize).build();
  DbSession dbSession=dbClient.openSession(false);
  try {
    dbClient.groupDao().selectById(dbSession,groupId);
    int total=dbClient.groupMembershipDao().countMembers(dbSession,query);
    Paging paging=Paging.create(pageSize,page,total);
    List<UserMembershipDto> users=dbClient.groupMembershipDao().selectMembers(dbSession,query,paging.offset(),paging.pageSize());
    JsonWriter json=response.newJsonWriter().beginObject();
    writeMembers(json,users);
    writePaging(json,paging);
    json.endObject().close();
  }
  finally {
    MyBatis.closeQuietly(dbSession);
  }
}
