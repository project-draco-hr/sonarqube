{
  Rule rule1=new Rule("squid:S1194","squid","S1194","\"java.lang.Error\" should not be extended");
  Rule rule2=new Rule("squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck","squid","ObjectFinalizeOverridenCallsSuperFinalizeCheck","super.finalize() should be called at the end of Object.finalize() implementations");
  RulesSearchResult rulesSearch=new RulesSearchResult();
  rulesSearch.setRules(Arrays.asList(rule1,rule2));
  String json=rulesSearch.toJson();
  RulesSearchResult empty=new RulesSearchResult();
  empty.setRules(new LinkedList<Rule>());
  String emptyJson=empty.toJson();
  WSLoader wsLoader=mock(WSLoader.class);
  when(wsLoader.loadString(contains("p=1"))).thenReturn(json);
  when(wsLoader.loadString(contains("p=2"))).thenReturn(emptyJson);
  RulesLoader loader=new DefaultRulesLoader(wsLoader);
  RulesSearchResult rules=loader.load();
  assertThat(rules.toJson()).isEqualTo(json);
}
