{
  ComponentDataCache componentDataCache=mock(ComponentDataCache.class);
  SymbolTableBuilder symbolTableBuilder=new DefaultSymbolTableBuilder("foo",componentDataCache);
  Symbol firstSymbol=symbolTableBuilder.newSymbol(10,20);
  symbolTableBuilder.newReference(firstSymbol,32);
  Symbol secondSymbol=symbolTableBuilder.newSymbol(84,92);
  symbolTableBuilder.newReference(secondSymbol,124);
  Symbol thirdSymbol=symbolTableBuilder.newSymbol(55,62);
  symbolTableBuilder.newReference(thirdSymbol,70);
  symbolTableBuilder.done();
  ArgumentCaptor<SymbolData> argCaptor=ArgumentCaptor.forClass(SymbolData.class);
  verify(componentDataCache).setData(eq("foo"),eq(SnapshotDataTypes.SYMBOL_HIGHLIGHTING),argCaptor.capture());
  SortedSetMultimap<Symbol,Integer> referencesBySymbol=argCaptor.getValue().referencesBySymbol();
  assertThat(new ArrayList<Symbol>(referencesBySymbol.keySet())).containsExactly(firstSymbol,thirdSymbol,secondSymbol);
  assertThat(new ArrayList<Integer>(referencesBySymbol.get(firstSymbol))).containsExactly(10,32);
  assertThat(new ArrayList<Integer>(referencesBySymbol.get(secondSymbol))).containsExactly(84,124);
  assertThat(new ArrayList<Integer>(referencesBySymbol.get(thirdSymbol))).containsExactly(55,70);
  assertThat(argCaptor.getValue().writeString()).isEqualTo("10,20,10,32;55,62,55,70;84,92,84,124;");
}
