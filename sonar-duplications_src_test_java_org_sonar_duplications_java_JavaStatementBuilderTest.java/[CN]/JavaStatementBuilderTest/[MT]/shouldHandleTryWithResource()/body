{
  List<Statement> statements;
  statements=chunk("try (FileInputStream in = new FileInputStream()) {}");
  assertThat(statements.size()).isEqualTo(2);
  assertThat(statements.get(0).getValue()).isEqualTo("try(FileInputStreamin=newFileInputStream())");
  assertThat(statements.get(1).getValue()).isEqualTo("{}");
  statements=chunk("try (FileInputStream in = new FileInputStream(); FileOutputStream out = new FileOutputStream()) {}");
  assertThat(statements.size()).isEqualTo(2);
  assertThat(statements.get(0).getValue()).isEqualTo("try(FileInputStreamin=newFileInputStream();FileOutputStreamout=newFileOutputStream())");
  assertThat(statements.get(1).getValue()).isEqualTo("{}");
  statements=chunk("try (FileInputStream in = new FileInputStream(); FileOutputStream out = new FileOutputStream();) {}");
  assertThat(statements.size()).isEqualTo(2);
  assertThat(statements.get(0).getValue()).isEqualTo("try(FileInputStreamin=newFileInputStream();FileOutputStreamout=newFileOutputStream();)");
  assertThat(statements.get(1).getValue()).isEqualTo("{}");
  statements=chunk("try (FileInputStream in = new FileInputStream()) { something(); }");
  assertThat(statements.size()).isEqualTo(2);
  assertThat(statements.get(0).getValue()).isEqualTo("try(FileInputStreamin=newFileInputStream())");
  assertThat(statements.get(1).getValue()).isEqualTo("something()");
}
