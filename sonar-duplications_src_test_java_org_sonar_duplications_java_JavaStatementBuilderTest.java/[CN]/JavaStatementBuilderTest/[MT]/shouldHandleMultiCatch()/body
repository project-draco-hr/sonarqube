{
  List<Statement> statements;
  statements=chunk("try { } catch (Exception1 | Exception2 e) { }");
  assertThat(statements.size(),is(4));
  assertThat(statements.get(0).getValue(),is("try"));
  assertThat(statements.get(1).getValue(),is("{}"));
  assertThat(statements.get(2).getValue(),is("catch(Exception1|Exception2e)"));
  assertThat(statements.get(3).getValue(),is("{}"));
  statements=chunk("try { something(); } catch (Exception1 | Exception2 e) { }");
  assertThat(statements.size(),is(4));
  assertThat(statements.get(0).getValue(),is("try"));
  assertThat(statements.get(1).getValue(),is("something()"));
  assertThat(statements.get(2).getValue(),is("catch(Exception1|Exception2e)"));
  assertThat(statements.get(3).getValue(),is("{}"));
  statements=chunk("try { something(); } catch (Exception1 | Exception2 e) { onException(); }");
  assertThat(statements.size(),is(4));
  assertThat(statements.get(0).getValue(),is("try"));
  assertThat(statements.get(1).getValue(),is("something()"));
  assertThat(statements.get(2).getValue(),is("catch(Exception1|Exception2e)"));
  assertThat(statements.get(3).getValue(),is("onException()"));
}
