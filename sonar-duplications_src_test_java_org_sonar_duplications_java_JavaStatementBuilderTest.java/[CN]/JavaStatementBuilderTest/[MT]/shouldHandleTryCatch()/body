{
  List<Statement> statements;
  statements=chunk("try { } catch (Exception e) { }");
  assertThat(statements.size()).isEqualTo(4);
  assertThat(statements.get(0).getValue()).isEqualTo("try");
  assertThat(statements.get(1).getValue()).isEqualTo("{}");
  assertThat(statements.get(2).getValue()).isEqualTo("catch(Exceptione)");
  assertThat(statements.get(3).getValue()).isEqualTo("{}");
  statements=chunk("try { something(); } catch (Exception e) { }");
  assertThat(statements.size()).isEqualTo(4);
  assertThat(statements.get(0).getValue()).isEqualTo("try");
  assertThat(statements.get(1).getValue()).isEqualTo("something()");
  assertThat(statements.get(2).getValue()).isEqualTo("catch(Exceptione)");
  assertThat(statements.get(3).getValue()).isEqualTo("{}");
  statements=chunk("try { something(); } catch (Exception e) { onException(); }");
  assertThat(statements.size()).isEqualTo(4);
  assertThat(statements.get(0).getValue()).isEqualTo("try");
  assertThat(statements.get(1).getValue()).isEqualTo("something()");
  assertThat(statements.get(2).getValue()).isEqualTo("catch(Exceptione)");
  assertThat(statements.get(3).getValue()).isEqualTo("onException()");
  statements=chunk("try { something(); } catch (Exception1 e) { onException1(); } catch (Exception2 e) { onException2(); }");
  assertThat(statements.size()).isEqualTo(6);
  assertThat(statements.get(0).getValue()).isEqualTo("try");
  assertThat(statements.get(1).getValue()).isEqualTo("something()");
  assertThat(statements.get(2).getValue()).isEqualTo("catch(Exception1e)");
  assertThat(statements.get(3).getValue()).isEqualTo("onException1()");
  assertThat(statements.get(4).getValue()).isEqualTo("catch(Exception2e)");
  assertThat(statements.get(5).getValue()).isEqualTo("onException2()");
}
