{
  this.ceTask=requireNonNull(ceTask,CE_TASK_CAN_NOT_BE_NULL);
  this.project=requireNonNull(project,PROJECT_CAN_NOT_BE_NULL);
  this.date=requireNonNull(date,DATE_CAN_NOT_BE_NULL);
  this.underTest.finished(new PostProjectAnalysisTask.ProjectAnalysis(){
    @Override public ScannerContext getScannerContext(){
      return scannerContext;
    }
    @Override public CeTask getCeTask(){
      return ceTask;
    }
    @Override public Project getProject(){
      return project;
    }
    @Override public QualityGate getQualityGate(){
      return qualityGate;
    }
    @Override public Date getDate(){
      return date;
    }
    @Override public Optional<Date> getAnalysisDate(){
      return Optional.of(date);
    }
    @Override public String toString(){
      return "ProjectAnalysis{" + "ceTask=" + ceTask + ", project="+ project+ ", date="+ date.getTime()+ ", analysisDate="+ date.getTime()+ ", qualityGate="+ qualityGate+ '}';
    }
  }
);
}
