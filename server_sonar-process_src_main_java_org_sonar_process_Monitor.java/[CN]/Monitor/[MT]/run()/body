{
  LOGGER.debug("Monitor::run() START");
  boolean everythingOK=true;
  try {
    while (everythingOK) {
      for (      ProcessWrapper process : processes) {
        if (!processIsValid(process)) {
          LOGGER.warn("Monitor::run() -- Process '{}' is not valid. Exiting monitor",process.getName());
          everythingOK=false;
          break;
        }
      }
      Thread.sleep(3000L);
    }
  }
 catch (  InterruptedException e) {
    LOGGER.info("Monitoring thread is interrupted.");
  }
 finally {
    watch.cancel(true);
    monitor.shutdownNow();
  }
  LOGGER.debug("Monitor::run() END");
}
