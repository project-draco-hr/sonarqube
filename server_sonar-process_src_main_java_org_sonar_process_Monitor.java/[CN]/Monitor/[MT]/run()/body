{
  LOGGER.trace("Monitor::run() START");
  boolean everythingOK=true;
  while (everythingOK) {
    for (    ProcessWrapper process : processes) {
      if (!processIsValid(process)) {
        LOGGER.warn("Monitor::run() -- Process '{}' is not valid. Exiting monitor",process.getName());
        everythingOK=false;
        break;
      }
    }
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
      LOGGER.warn("Monitoring thread has been interrupted. Closing");
      watch.cancel(true);
      monitor.shutdownNow();
    }
  }
  watch.cancel(true);
  monitor.shutdownNow();
  LOGGER.trace("Monitor::run() END");
}
