{
  measureRepository.addRawMeasure(FILE_1_REF,metricKeys.getLines(),newMeasureBuilder().create(3000L)).addRawMeasure(FILE_1_REF,metricKeys.getConditions(),newMeasureBuilder().create(300L)).addRawMeasure(FILE_1_REF,metricKeys.getUncoveredLines(),newMeasureBuilder().create(30L)).addRawMeasure(FILE_1_REF,metricKeys.getUncoveredConditions(),newMeasureBuilder().create(9L)).addRawMeasure(FILE_2_REF,metricKeys.getLines(),newMeasureBuilder().create(2000L)).addRawMeasure(FILE_2_REF,metricKeys.getConditions(),newMeasureBuilder().create(400L)).addRawMeasure(FILE_2_REF,metricKeys.getUncoveredLines(),newMeasureBuilder().create(200L)).addRawMeasure(FILE_2_REF,metricKeys.getUncoveredConditions(),newMeasureBuilder().create(16L)).addRawMeasure(UNIT_TEST_FILE_REF,metricKeys.getLines(),newMeasureBuilder().create(1000L)).addRawMeasure(UNIT_TEST_FILE_REF,metricKeys.getConditions(),newMeasureBuilder().create(100L)).addRawMeasure(UNIT_TEST_FILE_REF,metricKeys.getUncoveredLines(),newMeasureBuilder().create(10L)).addRawMeasure(UNIT_TEST_FILE_REF,metricKeys.getUncoveredConditions(),newMeasureBuilder().create(3L));
  underTest.execute();
  assertThat(measureRepository.getNewRawMeasure(FILE_1_REF,codeCoverageKey).get().getDoubleValue()).isEqualTo(98.8d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(FILE_1_REF,lineCoverageKey).get().getDoubleValue()).isEqualTo(99d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(FILE_1_REF,branchCoverageKey).get().getDoubleValue()).isEqualTo(97d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(FILE_2_REF,codeCoverageKey).get().getDoubleValue()).isEqualTo(91d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(FILE_2_REF,lineCoverageKey).get().getDoubleValue()).isEqualTo(90d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(FILE_2_REF,branchCoverageKey).get().getDoubleValue()).isEqualTo(96d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasures(UNIT_TEST_FILE_REF)).isEmpty();
  assertThat(measureRepository.getNewRawMeasure(DIRECTORY_REF,codeCoverageKey).get().getDoubleValue()).isEqualTo(95.5d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(DIRECTORY_REF,lineCoverageKey).get().getDoubleValue()).isEqualTo(95.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(DIRECTORY_REF,branchCoverageKey).get().getDoubleValue()).isEqualTo(96.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(SUB_MODULE_REF,codeCoverageKey).get().getDoubleValue()).isEqualTo(95.5d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(SUB_MODULE_REF,lineCoverageKey).get().getDoubleValue()).isEqualTo(95.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(SUB_MODULE_REF,branchCoverageKey).get().getDoubleValue()).isEqualTo(96.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(MODULE_REF,codeCoverageKey).get().getDoubleValue()).isEqualTo(95.5d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(MODULE_REF,lineCoverageKey).get().getDoubleValue()).isEqualTo(95.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(MODULE_REF,branchCoverageKey).get().getDoubleValue()).isEqualTo(96.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(ROOT_REF,codeCoverageKey).get().getDoubleValue()).isEqualTo(95.5d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(ROOT_REF,lineCoverageKey).get().getDoubleValue()).isEqualTo(95.4d,DEFAULT_OFFSET);
  assertThat(measureRepository.getNewRawMeasure(ROOT_REF,branchCoverageKey).get().getDoubleValue()).isEqualTo(96.4d,DEFAULT_OFFSET);
}
