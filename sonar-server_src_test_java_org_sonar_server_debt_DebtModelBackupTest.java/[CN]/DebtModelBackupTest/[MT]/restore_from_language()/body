{
  when(characteristicsXMLImporter.importXML(any(Reader.class))).thenReturn(new DebtModel());
  when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(new RuleDto().setId(1).setRepositoryKey("squid").setLanguage("java").setSubCharacteristicId(2).setRemediationFunction("LINEAR_OFFSET").setRemediationCoefficient("2h").setRemediationOffset("15min").setCreatedAt(oldDate).setUpdatedAt(oldDate),new RuleDto().setId(2).setRepositoryKey("checkstyle").setLanguage("java2").setSubCharacteristicId(2).setRemediationFunction("LINEAR").setRemediationCoefficient("2h").setCreatedAt(oldDate).setUpdatedAt(oldDate)));
  debtModelBackup.restore("java");
  verify(dao,never()).update(any(CharacteristicDto.class),eq(session));
  verify(ruleDao).selectEnablesAndNonManual(session);
  verify(ruleDao).update(ruleCaptor.capture(),eq(session));
  verifyNoMoreInteractions(ruleDao);
  verify(ruleRegistry).reindex(ruleCaptor.getAllValues(),session);
  verify(session).commit();
  RuleDto rule=ruleCaptor.getValue();
  assertThat(rule.getId()).isEqualTo(1);
  assertThat(rule.getSubCharacteristicId()).isNull();
  assertThat(rule.getRemediationFunction()).isNull();
  assertThat(rule.getRemediationCoefficient()).isNull();
  assertThat(rule.getRemediationOffset()).isNull();
  assertThat(rule.getUpdatedAt()).isEqualTo(now);
}
