{
  db.prepareDbUnit(getClass(),"feed_keys.xml");
  new FeedQProfileKeysMigrationStep(db.database()).execute();
  List<Map<String,Object>> profiles=db.select("SELECT kee, name, language, parent_kee FROM rules_profiles ORDER BY id ASC");
  Map<String,Object> parentProfile=profiles.get(0);
  assertThat((String)parentProfile.get("KEE")).startsWith("java-sonar-way-");
  assertThat(parentProfile.get("NAME")).isEqualTo("Sonar Way");
  assertThat(parentProfile.get("LANGUAGE")).isEqualTo("java");
  assertThat(parentProfile.get("PARENT_KEE")).isNull();
  Map<String,Object> differentCaseProfile=profiles.get(1);
  assertThat((String)differentCaseProfile.get("KEE")).startsWith("java-sonar-way-").isNotEqualTo(parentProfile.get("KEE"));
  assertThat(differentCaseProfile.get("NAME")).isEqualTo("Sonar way");
  assertThat(differentCaseProfile.get("PARENT_KEE")).isNull();
  Map<String,Object> childProfile=profiles.get(2);
  assertThat((String)childProfile.get("KEE")).startsWith("java-child-");
  assertThat(childProfile.get("NAME")).isEqualTo("Child");
  assertThat(childProfile.get("PARENT_KEE")).isEqualTo(parentProfile.get("KEE"));
  Map<String,Object> phpProfile=profiles.get(3);
  assertThat((String)phpProfile.get("KEE")).startsWith("php-sonar-way-");
  assertThat(phpProfile.get("NAME")).isEqualTo("Sonar Way");
  assertThat(phpProfile.get("LANGUAGE")).isEqualTo("php");
  assertThat(phpProfile.get("PARENT_KEE")).isNull();
}
