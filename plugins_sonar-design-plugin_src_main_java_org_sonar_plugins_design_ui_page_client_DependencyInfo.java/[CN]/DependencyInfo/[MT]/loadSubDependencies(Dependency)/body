{
  DependencyQuery query=DependencyQuery.createForSubDependencies(dependency.getId());
  Sonar.getInstance().findAll(query,new AbstractListCallback<Dependency>(){
    @Override protected void doOnResponse(    final List<Dependency> subDependencies){
      Grid table=new Grid(subDependencies.size() + 1,5);
      table.setStyleName("depInfo");
      createHeader(dependency,table);
      for (int row=0; row < subDependencies.size(); row++) {
        Dependency dep=subDependencies.get(row);
        table.setWidget(row + 1,0,new HTML(Icons.forQualifier(dep.getFromQualifier()).getHTML()));
        if (Resource.QUALIFIER_FILE.equals(dep.getFromQualifier()) || Resource.QUALIFIER_CLASS.equals(dep.getFromQualifier())) {
          table.setWidget(row + 1,1,createLink(dep.getFromId(),dep.getFromName()));
        }
 else {
          table.setText(row + 1,1,dep.getFromName());
        }
        table.setText(row + 1,2,"  " + dep.getUsage() + "  ");
        table.setWidget(row + 1,3,new HTML(Icons.forQualifier(dep.getToQualifier()).getHTML()));
        if (Resource.QUALIFIER_FILE.equals(dep.getToQualifier()) || Resource.QUALIFIER_CLASS.equals(dep.getToQualifier())) {
          table.setWidget(row + 1,4,createLink(dep.getToId(),dep.getToName()));
        }
 else {
          table.setText(row + 1,4,dep.getToName());
        }
      }
      panel.clear();
      if (!popupMode) {
        panel.add(createNewWindowLink());
      }
      panel.add(table);
    }
  }
);
}
