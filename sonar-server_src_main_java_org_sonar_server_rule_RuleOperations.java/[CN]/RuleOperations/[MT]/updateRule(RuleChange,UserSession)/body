{
  checkPermission(userSession);
  DbSession session=dbClient.openSession(false);
  try {
    RuleDto ruleDto=dbClient.ruleDao().getByKey(session,ruleChange.ruleKey());
    if (ruleDto == null) {
      throw new NotFoundException(String.format("Unknown rule '%s'",ruleChange.ruleKey()));
    }
    String subCharacteristicKey=ruleChange.debtCharacteristicKey();
    CharacteristicDto subCharacteristic=null;
    if (!Strings.isNullOrEmpty(subCharacteristicKey)) {
      subCharacteristic=dbClient.debtCharacteristicDao().selectByKey(subCharacteristicKey,session);
      if (subCharacteristic == null) {
        throw new NotFoundException(String.format("Unknown sub characteristic '%s'",ruleChange.debtCharacteristicKey()));
      }
    }
    boolean needUpdate=updateRule(ruleDto,subCharacteristic,ruleChange.debtRemediationFunction(),ruleChange.debtRemediationCoefficient(),ruleChange.debtRemediationOffset(),new Date(system.now()),session);
    if (needUpdate) {
      session.commit();
    }
  }
 catch (  IllegalArgumentException e) {
    throw BadRequestException.of(e.getMessage());
  }
 finally {
    MyBatis.closeQuietly(session);
  }
}
