{
  ComponentDto project1=new ComponentDto().setKey("project1").setName("project1").setLongName("project1").setQualifier("TRK").setScope("PRJ").setEnabled(true);
  ComponentDto project2=new ComponentDto().setKey("project2").setName("project2").setLongName("project2").setQualifier("TRK").setScope("PRJ").setEnabled(true);
  db.componentDao().insert(dbSession,project1);
  db.componentDao().insert(dbSession,project2);
  UserDto user=new UserDto().setLogin("john").setName("John").setEmail("jo@hn.com").setCreatedAt(new Date()).setUpdatedAt(new Date());
  db.userDao().insert(dbSession,user);
  tester.get(PermissionFacade.class).insertUserPermission(project1.getId(),user.getId(),UserRole.USER,dbSession);
  tester.get(PermissionFacade.class).insertUserPermission(project2.getId(),user.getId(),UserRole.USER,dbSession);
  UserSession userSession=MockUserSession.set().setUserId(user.getId().intValue()).setLogin("john").setName("John").setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN);
  dbSession.commit();
  projectOperations.addProject(profile.getId(),project1.getId(),userSession);
  projectOperations.addProject(profile.getId(),project2.getId(),userSession);
  assertThat(tester.get(QProfileProjectLookup.class).projects(profile.getId())).hasSize(2);
  projectOperations.removeAllProjects(profile.getId(),userSession);
  assertThat(tester.get(QProfileProjectLookup.class).projects(profile.getId())).isEmpty();
}
