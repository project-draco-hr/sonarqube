{
  System.out.println("=== Override method provided by orchestrator");
  if ("true".equals(System.getenv("TRAVIS"))) {
    for (int i=0; i < 10; i++) {
      int port=nextPort.getAndIncrement();
      try {
        System.out.println("=== Trying port " + port);
        Process process=new ProcessBuilder("nc","-z","localhost",Integer.toString(port)).start();
        if (process.waitFor() == 1) {
          System.out.println("=== Using port " + port);
          return port;
        }
      }
 catch (      Exception e) {
        System.out.println(e);
      }
    }
    throw new IllegalStateException("Can't find a free network port");
  }
  try (ServerSocket socket=new ServerSocket()){
    socket.bind(new InetSocketAddress("localhost",0));
    return socket.getLocalPort();
  }
 catch (  IOException e) {
    throw new IllegalStateException("Can't find a free network port",e);
  }
}
