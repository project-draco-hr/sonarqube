{
  Map<Violation,RuleFailureModel> violationMap=new IdentityHashMap<Violation,RuleFailureModel>();
  Multimap<Integer,RuleFailureModel> pastViolationsByRule=LinkedHashMultimap.create();
  for (  RuleFailureModel pastViolation : pastViolations) {
    pastViolationsByRule.put(pastViolation.getRuleId(),pastViolation);
  }
  for (  Violation newViolation : newViolations) {
    mapViolation(newViolation,findPastViolationWithSameLineAndChecksum(newViolation,pastViolationsByRule.get(newViolation.getRule().getId())),pastViolationsByRule,violationMap);
  }
  if (violationMap.size() != newViolations.size()) {
    for (    Violation newViolation : newViolations) {
      if (isNotAlreadyMapped(newViolation,violationMap)) {
        mapViolation(newViolation,findPastViolationWithSameChecksumAndMessage(newViolation,pastViolationsByRule.get(newViolation.getRule().getId())),pastViolationsByRule,violationMap);
      }
    }
    for (    Violation newViolation : newViolations) {
      if (isNotAlreadyMapped(newViolation,violationMap)) {
        mapViolation(newViolation,findPastViolationWithSameLineAndMessage(newViolation,pastViolationsByRule.get(newViolation.getRule().getId())),pastViolationsByRule,violationMap);
      }
    }
  }
  return violationMap;
}
