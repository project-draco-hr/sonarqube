{
  orchestrator.getServer().provisionProject(MULTI_MODULE_PROJECT_KEY,MULTI_MODULE_PROJECT_KEY);
  setServerProperty(orchestrator,MULTI_MODULE_PROJECT_KEY,"sonar.timemachine.period1","30");
  orchestrator.getServer().associateProjectToQualityProfile(MULTI_MODULE_PROJECT_KEY,"xoo","empty");
  runProjectAnalysis(orchestrator,"shared/xoo-multi-modules-sample","sonar.projectDate",formatDate(addDays(new Date(),-60)),"sonar.modules","module_a");
  orchestrator.getServer().restoreProfile(FileLocation.ofClasspath("/measureHistory/one-issue-per-line-profile.xml"));
  orchestrator.getServer().associateProjectToQualityProfile(MULTI_MODULE_PROJECT_KEY,"xoo","one-issue-per-line");
  runProjectAnalysis(orchestrator,"shared/xoo-multi-modules-sample","sonar.projectDate",formatDate(addDays(new Date(),-20)),"sonar.modules","module_a,module_b");
  Resource ncloc=orchestrator.getServer().getWsClient().find(ResourceQuery.createForMetrics(MULTI_MODULE_PROJECT_KEY + ":module_b","ncloc").setIncludeTrends(true));
  List<Measure> measures=ncloc.getMeasures();
  assertThat(measures.get(0).getVariation1()).isEqualTo(24);
}
