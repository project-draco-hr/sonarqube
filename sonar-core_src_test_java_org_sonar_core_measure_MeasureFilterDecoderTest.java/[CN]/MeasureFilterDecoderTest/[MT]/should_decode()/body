{
  String json="{\"base\": \"org.struts\", \"onBaseChildren\": true, \"scopes\": [\"PRJ\"], " + "\"qualifiers\": [\"TRK\",\"CLA\"], \"keyRegexp\": \"*foo*\"" + "\"languages\": [\"java\", \"php\"], \"name\": \"Struts\", \"fromDate\": \"2012-12-25\", "+ "\"toDate\": \"2013-01-31\", "+ "\"favourites\": true, "+ "\"sortAsc\": true, \"sortField\": \"METRIC\", \"sortMetric\": \"ncloc\", \"sortPeriod\":5, "+ "\"conditions\":[{\"metric\":\"lines\", \"op\":\">\", \"val\":123.0}]}";
  MeasureFilter filter=new MeasureFilterDecoder(metricFinder).decode(json);
  assertThat(filter.getBaseResourceKey()).isEqualTo("org.struts");
  assertThat(filter.isOnBaseResourceChildren()).isTrue();
  assertThat(filter.getResourceScopes()).containsExactly("PRJ");
  assertThat(filter.getResourceQualifiers()).containsExactly("TRK","CLA");
  assertThat(filter.getResourceLanguages()).containsExactly("java","php");
  assertThat(filter.getResourceName()).isEqualTo("Struts");
  assertThat(filter.getResourceKeyRegexp()).isEqualTo("*foo*");
  assertThat(filter.getFromDate().getYear()).isEqualTo(2012 - 1900);
  assertThat(filter.getToDate().getYear()).isEqualTo(2013 - 1900);
  assertThat(filter.isOnFavourites()).isTrue();
  assertThat(filter.sort().metric().getKey()).isEqualTo("ncloc");
  assertThat(filter.sort().isAsc()).isTrue();
  MeasureFilterCondition condition=filter.getMeasureConditions().get(0);
  assertThat(condition.metric().getKey()).isEqualTo("lines");
  assertThat(condition.operator()).isEqualTo(">");
  assertThat(condition.value()).isEqualTo(123.0);
}
