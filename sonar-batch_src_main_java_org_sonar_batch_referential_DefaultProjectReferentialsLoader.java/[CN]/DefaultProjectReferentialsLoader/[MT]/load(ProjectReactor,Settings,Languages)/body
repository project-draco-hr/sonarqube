{
  ProjectReferentials ref=new ProjectReferentials();
  for (  Metric m : sessionFactory.getSession().getResults(Metric.class,ENABLED,true)) {
    ref.metrics().add(new org.sonar.batch.protocol.input.Metric(m.getId(),m.getKey(),m.getType().name()));
  }
  String defaultName=settings.getString(ModuleQProfiles.SONAR_PROFILE_PROP);
  for (  Language language : languages.all()) {
    org.sonar.batch.protocol.input.QProfile profile=null;
    if (StringUtils.isNotBlank(defaultName)) {
      profile=loadDefaultQProfile(defaultName,language.getKey());
    }
    if (profile == null) {
      profile=loadQProfile(settings,language.getKey());
    }
    if (profile != null) {
      ref.addQProfile(profile);
    }
  }
  for (  QProfile qProfile : ref.qProfiles()) {
    ListMultimap<Integer,ActiveRuleParamDto> paramDtosByActiveRuleId=ArrayListMultimap.create();
    for (    ActiveRuleParamDto dto : activeRuleDao.selectParamsByProfileKey(qProfile.key())) {
      paramDtosByActiveRuleId.put(dto.getActiveRuleId(),dto);
    }
    for (    ActiveRuleDto activeDto : activeRuleDao.selectByProfileKey(qProfile.key())) {
      Rule rule=ruleFinder.findById(activeDto.getRuleId());
      if (rule != null) {
        String internalKey;
        Rule template=rule.getTemplate();
        if (template != null) {
          internalKey=template.getConfigKey();
        }
 else {
          internalKey=rule.getConfigKey();
        }
        ActiveRule activeRule=new ActiveRule(rule.ruleKey().repository(),rule.ruleKey().rule(),activeDto.getSeverityString(),internalKey,rule.getLanguage());
        for (        ActiveRuleParamDto paramDto : paramDtosByActiveRuleId.get(activeDto.getId())) {
          activeRule.params().put(paramDto.getKey(),paramDto.getValue());
        }
        for (        RuleParam param : rule.getParams()) {
          if (!activeRule.params().containsKey(param.getKey())) {
            activeRule.params().put(param.getKey(),param.getDefaultValue());
          }
        }
        ref.addActiveRule(activeRule);
      }
    }
  }
  return ref;
}
