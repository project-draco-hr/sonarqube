{
  userSession.login("john").setGlobalPermissions(SYSTEM_ADMIN);
  CeQueueDto queueDto=new CeQueueDto();
  queueDto.setTaskType(CeTaskTypes.REPORT);
  queueDto.setUuid("TASK_1");
  queueDto.setComponentUuid(PROJECT.uuid());
  CeActivityDto activityDto=new CeActivityDto(queueDto);
  activityDto.setStatus(CeActivityDto.Status.FAILED);
  activityDto.setExecutionTimeMs(500L);
  activityDto.setAnalysisUuid("U1");
  dbTester.getDbClient().ceActivityDao().insert(dbTester.getSession(),activityDto);
  dbTester.commit();
  TestResponse wsResponse=ws.newRequest().setMediaType(MediaTypes.PROTOBUF).setParam("id","TASK_1").execute();
  WsCe.TaskResponse taskResponse=Protobuf.read(wsResponse.getInputStream(),WsCe.TaskResponse.PARSER);
  WsCe.Task task=taskResponse.getTask();
  assertThat(task.getId()).isEqualTo("TASK_1");
  assertThat(task.getStatus()).isEqualTo(WsCe.TaskStatus.FAILED);
  assertThat(task.getComponentId()).isEqualTo(PROJECT.uuid());
  assertThat(task.getComponentKey()).isEqualTo(PROJECT.key());
  assertThat(task.getComponentName()).isEqualTo(PROJECT.name());
  assertThat(task.getAnalysisId()).isEqualTo("U1");
  assertThat(task.getExecutionTimeMs()).isEqualTo(500L);
  assertThat(task.getLogs()).isFalse();
}
