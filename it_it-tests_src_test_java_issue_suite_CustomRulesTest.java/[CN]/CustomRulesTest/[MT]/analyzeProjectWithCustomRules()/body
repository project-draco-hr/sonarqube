{
  orchestrator.getServer().adminWsClient().post("api/rules/create","template_key","xoo:TemplateRule","custom_key","MyCustomRule","markdown_description","My description","name","My custom rule","severity","BLOCKER","params","line=2");
  orchestrator.getServer().restoreProfile(FileLocation.ofClasspath("/issue/suite/CustomRulesTest/custom.xml"));
  orchestrator.getServer().provisionProject("sample","Sample");
  orchestrator.getServer().associateProjectToQualityProfile("sample","xoo","Custom");
  orchestrator.executeBuild(SonarRunner.create().setProjectDir(ItUtils.projectDir("shared/xoo-sample")));
  List<Issue> issues=orchestrator.getServer().adminWsClient().issueClient().find(IssueQuery.create()).list();
  assertThat(issues).hasSize(1);
  Issue issue=issues.get(0);
  assertThat(issue.ruleKey()).isEqualTo("xoo:MyCustomRule");
  assertThat(issue.line()).isEqualTo(2);
  assertThat(issue.severity()).isEqualTo("CRITICAL");
}
