{
  super(props);
  if (StringUtils.isEmpty(props.of(ES_HOME_PROPERTY,null))) {
    throw new IllegalStateException(MISSING_ES_HOME);
  }
  String home=props.of(ES_HOME_PROPERTY);
  if (StringUtils.isEmpty(props.of(ES_PORT_PROPERTY,null))) {
    throw new IllegalStateException(MISSING_ES_PORT);
  }
  Integer port=props.intOf(ES_PORT_PROPERTY);
  String clusterName=props.of(ES_CLUSTER_PROPERTY,DEFAULT_CLUSTER_NAME);
  ESLoggerFactory.setDefaultFactory(new Slf4jESLoggerFactory());
  ImmutableSettings.Builder esSettings=ImmutableSettings.settingsBuilder().put("discovery.zen.ping.multicast.enable","false").put("index.merge.policy.max_merge_at_once","200").put("index.merge.policy.segments_per_tier","200").put("index.number_of_shards","1").put("index.number_of_replicas","0").put("index.store.type","mmapfs").put("indices.store.throttle.type","merge").put("indices.store.throttle.max_bytes_per_sec","200mb").put("script.default_lang","native").put("script.native." + ListUpdate.NAME + ".type",ListUpdate.UpdateListScriptFactory.class.getName()).put("cluster.name",clusterName).put("node.name","sonarqube-" + System.currentTimeMillis()).put("node.data",true).put("node.local",false).put("http.enabled",false).put("transport.tcp.port",port).put("path.home",home);
  node=NodeBuilder.nodeBuilder().settings(esSettings).build().start();
}
