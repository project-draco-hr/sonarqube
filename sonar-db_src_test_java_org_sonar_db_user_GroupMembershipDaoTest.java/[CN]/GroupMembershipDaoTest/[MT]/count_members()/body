{
  dbTester.prepareDbUnit(getClass(),"shared_plus_empty_group.xml");
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(100L).membership(UserMembershipQuery.IN).build())).isEqualTo(1);
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(100L).membership(UserMembershipQuery.OUT).build())).isEqualTo(1);
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(101L).membership(UserMembershipQuery.IN).build())).isEqualTo(2);
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(101L).membership(UserMembershipQuery.OUT).build())).isZero();
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(102L).membership(UserMembershipQuery.IN).build())).isEqualTo(1);
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(102L).membership(UserMembershipQuery.OUT).build())).isEqualTo(1);
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(103L).membership(UserMembershipQuery.IN).build())).isZero();
  assertThat(dao.countMembers(dbTester.getSession(),UserMembershipQuery.builder().groupId(103L).membership(UserMembershipQuery.OUT).build())).isEqualTo(2);
}
