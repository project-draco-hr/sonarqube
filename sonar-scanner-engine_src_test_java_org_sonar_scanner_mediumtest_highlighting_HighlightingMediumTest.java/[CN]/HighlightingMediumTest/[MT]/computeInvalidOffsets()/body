{
  File baseDir=temp.newFolder();
  File srcDir=new File(baseDir,"src");
  srcDir.mkdir();
  File xooFile=new File(srcDir,"sample.xoo");
  File xoohighlightingFile=new File(srcDir,"sample.xoo.highlighting");
  FileUtils.write(xooFile,"Sample xoo\ncontent plop");
  FileUtils.write(xoohighlightingFile,"0:10:s\n18:18:k");
  exception.expect(IllegalStateException.class);
  exception.expectMessage("Error processing line 2");
  exception.expectCause(new TypeSafeMatcher<IllegalArgumentException>(){
    @Override public void describeTo(    Description description){
      description.appendText("Invalid cause");
    }
    @Override protected boolean matchesSafely(    IllegalArgumentException e){
      return e.getMessage().contains("Unable to highlight file");
    }
  }
);
  tester.newTask().properties(ImmutableMap.<String,String>builder().put("sonar.projectBaseDir",baseDir.getAbsolutePath()).put("sonar.projectKey","com.foo.project").put("sonar.projectName","Foo Project").put("sonar.projectVersion","1.0-SNAPSHOT").put("sonar.projectDescription","Description of Foo Project").put("sonar.sources","src").build()).start();
}
