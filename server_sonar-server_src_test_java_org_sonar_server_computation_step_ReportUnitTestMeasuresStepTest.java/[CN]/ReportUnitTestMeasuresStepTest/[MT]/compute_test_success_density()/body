{
  measureRepository.addRawMeasure(FILE_1_REF,TESTS_KEY,newMeasureBuilder().create(10));
  measureRepository.addRawMeasure(FILE_2_REF,TESTS_KEY,newMeasureBuilder().create(20));
  measureRepository.addRawMeasure(FILE_1_REF,TEST_ERRORS_KEY,newMeasureBuilder().create(2));
  measureRepository.addRawMeasure(FILE_2_REF,TEST_ERRORS_KEY,newMeasureBuilder().create(5));
  measureRepository.addRawMeasure(FILE_1_REF,TEST_FAILURES_KEY,newMeasureBuilder().create(4));
  measureRepository.addRawMeasure(FILE_2_REF,TEST_FAILURES_KEY,newMeasureBuilder().create(1));
  underTest.execute();
  assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_1_REF))).contains(entryOf(TEST_SUCCESS_DENSITY_KEY,newMeasureBuilder().create(40d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_2_REF))).contains(entryOf(TEST_SUCCESS_DENSITY_KEY,newMeasureBuilder().create(70d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(DIRECTORY_REF))).contains(entryOf(TEST_SUCCESS_DENSITY_KEY,newMeasureBuilder().create(60d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(SUB_MODULE_REF))).contains(entryOf(TEST_SUCCESS_DENSITY_KEY,newMeasureBuilder().create(60d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).contains(entryOf(TEST_SUCCESS_DENSITY_KEY,newMeasureBuilder().create(60d)));
  assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).contains(entryOf(TEST_SUCCESS_DENSITY_KEY,newMeasureBuilder().create(60d)));
}
