{
  measureRepository.addRawMeasure(FILE_1_REF,TESTS_KEY,newMeasureBuilder().create(10));
  measureRepository.addRawMeasure(FILE_2_REF,TESTS_KEY,newMeasureBuilder().create(20));
  measureRepository.addRawMeasure(FILE_1_REF,TEST_ERRORS_KEY,newMeasureBuilder().create(0));
  measureRepository.addRawMeasure(FILE_2_REF,TEST_ERRORS_KEY,newMeasureBuilder().create(0));
  measureRepository.addRawMeasure(FILE_1_REF,TEST_FAILURES_KEY,newMeasureBuilder().create(4));
  measureRepository.addRawMeasure(FILE_2_REF,TEST_FAILURES_KEY,newMeasureBuilder().create(1));
  underTest.execute();
  assertThat(measureRepository.getAddedRawMeasure(FILE_1_REF,TEST_SUCCESS_DENSITY_KEY).get().getDoubleValue()).isEqualTo(60d);
  assertThat(measureRepository.getAddedRawMeasure(FILE_2_REF,TEST_SUCCESS_DENSITY_KEY).get().getDoubleValue()).isEqualTo(95d);
  assertThat(measureRepository.getAddedRawMeasure(DIRECTORY_REF,TEST_SUCCESS_DENSITY_KEY).get().getDoubleValue()).isEqualTo(83.3d,DEFAULT_OFFSET);
  assertThat(measureRepository.getAddedRawMeasure(SUB_MODULE_REF,TEST_SUCCESS_DENSITY_KEY).get().getDoubleValue()).isEqualTo(83.3d,DEFAULT_OFFSET);
  assertThat(measureRepository.getAddedRawMeasure(MODULE_REF,TEST_SUCCESS_DENSITY_KEY).get().getDoubleValue()).isEqualTo(83.3d,DEFAULT_OFFSET);
  assertThat(measureRepository.getAddedRawMeasure(ROOT_REF,TEST_SUCCESS_DENSITY_KEY).get().getDoubleValue()).isEqualTo(83.3d,DEFAULT_OFFSET);
}
