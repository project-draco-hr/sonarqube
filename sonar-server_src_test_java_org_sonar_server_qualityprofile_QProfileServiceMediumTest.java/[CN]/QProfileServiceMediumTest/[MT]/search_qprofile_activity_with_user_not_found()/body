{
  MockUserSession.set().setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN).setLogin("david");
  db.ruleDao().getByKey(dbSession,RuleTesting.XOO_X1);
  tester.get(ActivityService.class).write(dbSession,Activity.Type.QPROFILE,ActiveRuleChange.createFor(ActiveRuleChange.Type.ACTIVATED,ActiveRuleKey.of(XOO_P1_KEY,RuleTesting.XOO_X1)).setSeverity(Severity.MAJOR).setParameter("max","10"));
  dbSession.commit();
  List<QProfileActivity> activities=service.findActivities(new QProfileActivityQuery(),new QueryOptions());
  assertThat(activities).hasSize(1);
  QProfileActivity activity=activities.get(0);
  assertThat(activity.login()).isEqualTo("david");
  assertThat(activity.authorName()).isNull();
}
