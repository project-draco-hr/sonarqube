{
  if (resourcePersister != null) {
    resourcePersister.persist();
  }
  if (migration != null) {
    migration.migrateIfNeeded(module,fs);
  }
  for (  InputFile inputFile : fs.inputFiles(fs.predicates().all())) {
    String languageKey=inputFile.language();
    boolean unitTest=InputFile.Type.TEST == inputFile.type();
    String pathFromSourceDir=((DeprecatedDefaultInputFile)inputFile).pathRelativeToSourceDir();
    if (pathFromSourceDir == null) {
      pathFromSourceDir=inputFile.relativePath();
    }
    Resource sonarFile=File.create(inputFile.relativePath(),pathFromSourceDir,languages.get(languageKey),unitTest);
    if ("java".equals(languageKey)) {
      sonarFile.setDeprecatedKey(DeprecatedKeyUtils.getJavaFileDeprecatedKey(pathFromSourceDir));
    }
 else {
      sonarFile.setDeprecatedKey(pathFromSourceDir);
    }
    sonarIndex.index(sonarFile);
  }
  if (resourcePersister != null) {
    resourcePersister.persist();
  }
}
