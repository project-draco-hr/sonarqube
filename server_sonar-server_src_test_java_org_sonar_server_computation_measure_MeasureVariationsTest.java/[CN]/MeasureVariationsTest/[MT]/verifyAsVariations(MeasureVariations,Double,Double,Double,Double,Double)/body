{
  assertThat(measureVariations.hasVariation1()).isEqualTo(variation1 != null);
  try {
    if (variation1 == null) {
      measureVariations.getVariation1();
      fail("An exception should have been raised");
    }
    assertThat(measureVariations.getVariation1()).isEqualTo(variation1);
  }
 catch (  IllegalStateException e) {
    assertThat(e.getMessage()).isEqualTo("Variation 1 has not been set");
  }
  assertThat(measureVariations.hasVariation2()).isEqualTo(variation2 != null);
  try {
    if (variation2 == null) {
      measureVariations.getVariation2();
      fail("An exception should have been raised");
    }
    assertThat(measureVariations.getVariation2()).isEqualTo(variation2);
  }
 catch (  IllegalStateException e) {
    assertThat(e.getMessage()).isEqualTo("Variation 2 has not been set");
  }
  assertThat(measureVariations.hasVariation3()).isEqualTo(variation3 != null);
  try {
    if (variation3 == null) {
      measureVariations.getVariation3();
      fail("An exception should have been raised");
    }
    assertThat(measureVariations.getVariation3()).isEqualTo(variation3);
  }
 catch (  IllegalStateException e) {
    assertThat(e.getMessage()).isEqualTo("Variation 3 has not been set");
  }
  assertThat(measureVariations.hasVariation4()).isEqualTo(variation4 != null);
  try {
    if (variation4 == null) {
      measureVariations.getVariation4();
      fail("An exception should have been raised");
    }
    assertThat(measureVariations.getVariation4()).isEqualTo(variation4);
  }
 catch (  IllegalStateException e) {
    assertThat(e.getMessage()).isEqualTo("Variation 4 has not been set");
  }
  assertThat(measureVariations.hasVariation5()).isEqualTo(variation5 != null);
  try {
    if (variation5 == null) {
      measureVariations.getVariation5();
      fail("An exception should have been raised");
    }
    assertThat(measureVariations.getVariation5()).isEqualTo(variation5);
  }
 catch (  IllegalStateException e) {
    assertThat(e.getMessage()).isEqualTo("Variation 5 has not been set");
  }
}
