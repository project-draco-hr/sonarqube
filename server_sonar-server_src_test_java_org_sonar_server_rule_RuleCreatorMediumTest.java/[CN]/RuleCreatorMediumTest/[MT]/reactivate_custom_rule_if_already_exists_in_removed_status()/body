{
  String key="CUSTOM_RULE";
  RuleDto templateRule=createTemplateRule();
  RuleDto rule=RuleTesting.newCustomRule(templateRule).setRuleKey(key).setStatus(RuleStatus.REMOVED).setName("Old name").setDescription("Old description").setDescriptionFormat(Format.MARKDOWN).setSeverity(Severity.INFO);
  dao.insert(dbSession,rule);
  dao.insertRuleParam(dbSession,rule,dao.selectRuleParamsByRuleKey(dbSession,templateRule.getKey()).get(0).setDefaultValue("a.*"));
  dbSession.commit();
  dbSession.clearCache();
  NewRule newRule=NewRule.createForCustomRule(key,templateRule.getKey()).setName("New name").setMarkdownDescription("New description").setSeverity(Severity.MAJOR).setStatus(RuleStatus.READY).setParameters(ImmutableMap.of("regex","c.*"));
  RuleKey customRuleKey=creator.create(newRule);
  dbSession.clearCache();
  RuleDto result=db.ruleDao().selectOrFailByKey(dbSession,customRuleKey);
  assertThat(result.getKey()).isEqualTo(RuleKey.of("java",key));
  assertThat(result.getStatus()).isEqualTo(RuleStatus.READY);
  assertThat(result.getName()).isEqualTo("Old name");
  assertThat(result.getDescription()).isEqualTo("Old description");
  assertThat(result.getSeverityString()).isEqualTo(Severity.INFO);
  List<RuleParamDto> params=db.ruleDao().selectRuleParamsByRuleKey(dbSession,customRuleKey);
  assertThat(params).hasSize(1);
  assertThat(params.get(0).getDefaultValue()).isEqualTo("a.*");
}
