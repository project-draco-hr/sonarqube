{
  RuleDto templateRule=createTemplateRule();
  NewRule newRule=NewRule.createForCustomRule("CUSTOM_RULE",templateRule.getKey()).setName("My custom").setMarkdownDescription("Some description").setSeverity(Severity.MAJOR).setStatus(RuleStatus.READY).setParameters(ImmutableMap.of("regex","a.*"));
  RuleKey customRuleKey=creator.create(newRule);
  dbSession.clearCache();
  RuleDto rule=db.ruleDao().selectOrFailByKey(dbSession,customRuleKey);
  assertThat(rule).isNotNull();
  assertThat(rule.getKey()).isEqualTo(RuleKey.of("java","CUSTOM_RULE"));
  assertThat(rule.getTemplateId()).isEqualTo(templateRule.getId());
  assertThat(rule.getName()).isEqualTo("My custom");
  assertThat(rule.getDescription()).isEqualTo("Some description");
  assertThat(rule.getSeverityString()).isEqualTo("MAJOR");
  assertThat(rule.getStatus()).isEqualTo(RuleStatus.READY);
  assertThat(rule.getLanguage()).isEqualTo("java");
  assertThat(rule.getConfigKey()).isEqualTo("S001");
  assertThat(rule.getDefaultRemediationFunction()).isEqualTo("LINEAR_OFFSET");
  assertThat(rule.getDefaultRemediationCoefficient()).isEqualTo("1h");
  assertThat(rule.getDefaultRemediationOffset()).isEqualTo("5min");
  assertThat(rule.getEffortToFixDescription()).isEqualTo("desc");
  assertThat(rule.getTags()).containsOnly("usertag1","usertag2");
  assertThat(rule.getSystemTags()).containsOnly("tag1","tag4");
  List<RuleParamDto> params=db.ruleDao().selectRuleParamsByRuleKey(dbSession,customRuleKey);
  assertThat(params).hasSize(1);
  RuleParamDto param=params.get(0);
  assertThat(param.getName()).isEqualTo("regex");
  assertThat(param.getDescription()).isEqualTo("Reg ex");
  assertThat(param.getType()).isEqualTo("STRING");
  assertThat(param.getDefaultValue()).isEqualTo("a.*");
  assertThat(ruleIndex.search(new RuleQuery(),new SearchOptions()).getIds()).containsOnly(customRuleKey,templateRule.getKey());
}
