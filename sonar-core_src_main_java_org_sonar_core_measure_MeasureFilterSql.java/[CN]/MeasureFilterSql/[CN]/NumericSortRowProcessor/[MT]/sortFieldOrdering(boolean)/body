{
  if (ascending) {
    return Ordering.from(new Comparator<Double>(){
      public int compare(      @Nullable Double left,      @Nullable Double right){
        if (left == right) {
          return 0;
        }
        if (left == null) {
          return 1;
        }
        if (right == null) {
          return -1;
        }
        return Doubles.compare(left,right);
      }
    }
);
  }
  return Ordering.from(new Comparator<Double>(){
    public int compare(    @Nullable Double left,    @Nullable Double right){
      if (left == right) {
        return 0;
      }
      if (left == null) {
        return 1;
      }
      if (right == null) {
        return -1;
      }
      return -Doubles.compare(left,right);
    }
  }
);
}
