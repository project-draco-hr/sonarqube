{
  Property function=properties.function();
  Property factor=properties.factor();
  Property offset=properties.offset();
  if (function != null) {
    requirement.setFactorValue(0);
    requirement.setFactorUnit(WorkDuration.UNIT.DAYS);
    requirement.setOffsetValue(0);
    requirement.setOffsetUnit(WorkDuration.UNIT.DAYS);
    String functionKey=function.getTextValue();
    if ("linear_threshold".equals(functionKey)) {
      function.setTextValue(DefaultRequirement.FUNCTION_LINEAR);
      offset.setValue(0);
      offset.setTextValue("d");
      messages.addWarningText(String.format("Linear with threshold function is no longer used, function of the requirement '%s' is replaced by linear.",requirement.ruleKey()));
    }
 else     if ("constant_resource".equals(functionKey)) {
      messages.addWarningText(String.format("Constant/file function is no longer used, requirements '%s' are ignored.",requirement.ruleKey()));
      return null;
    }
    requirement.setFunction(function.getTextValue());
    if (factor != null) {
      requirement.setFactorValue(factor.getValue());
      if (!Strings.isNullOrEmpty(factor.getTextValue())) {
        requirement.setFactorUnit(DefaultRequirement.toUnit(factor.getTextValue()));
      }
    }
    if (offset != null) {
      requirement.setOffsetValue(offset.getValue());
      if (!Strings.isNullOrEmpty(offset.getTextValue())) {
        requirement.setOffsetUnit(DefaultRequirement.toUnit(offset.getTextValue()));
      }
    }
    return requirement;
  }
  return null;
}
