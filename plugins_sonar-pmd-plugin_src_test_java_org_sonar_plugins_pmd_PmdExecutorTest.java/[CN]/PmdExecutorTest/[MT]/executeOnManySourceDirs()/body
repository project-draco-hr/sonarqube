{
  final File workDir=temp.getRoot();
  Project project=new Project("two-source-dirs");
  ProjectFileSystem fs=mock(ProjectFileSystem.class);
  File root=new File(getClass().getResource("/org/sonar/plugins/pmd/PmdExecutorTest/executeOnManySourceDirs/").toURI());
  when(fs.getSourceFiles(Java.INSTANCE)).thenReturn(Arrays.asList(new File(root,"src1/FirstClass.java"),new File(root,"src2/SecondClass.java")));
  when(fs.getSourceCharset()).thenReturn(Charset.forName("UTF-8"));
  when(fs.getSonarWorkingDirectory()).thenReturn(workDir);
  project.setFileSystem(fs);
  PmdConfiguration conf=mock(PmdConfiguration.class);
  File file=FileUtils.toFile(getClass().getResource("/org/sonar/plugins/pmd/PmdExecutorTest/executeOnManySourceDirs/pmd.xml").toURI().toURL());
  when(conf.getRulesets()).thenReturn(Arrays.asList(file.getAbsolutePath()));
  PmdExecutor executor=new PmdExecutor(project,conf);
  executor.execute();
  File xmlReport=new File(workDir,"pmd-result.xml");
  assertThat(xmlReport.exists(),is(true));
  String xml=FileUtils.readFileToString(xmlReport);
  assertThat(StringUtils.countMatches(xml,"<file"),is(2));
  assertThat(StringUtils.countMatches(xml,"<violation"),greaterThan(2));
}
