{
  Map<String,Object> map=newHashMap();
  map.put("searchQuery","NPE");
  map.put("key","rule");
  map.put("languages",newArrayList("java","xoo"));
  map.put("repositories",newArrayList("pmd","checkstyle"));
  map.put("severities",newArrayList("MINOR","MAJOR"));
  map.put("statuses",newArrayList("READY","BETA"));
  map.put("tags",newArrayList("has-params","keep-enabled"));
  map.put("debtCharacteristics",newArrayList("MODULARITY","REUSABILITY"));
  map.put("hasDebtCharacteristic","true");
  map.put("pageSize",10l);
  map.put("pageIndex",50);
  RuleQuery query=RubyRuleService.toRuleQuery(map);
  assertThat(query.searchQuery()).isEqualTo("NPE");
  assertThat(query.key()).isEqualTo("rule");
  assertThat(query.languages()).containsOnly("java","xoo");
  assertThat(query.repositories()).containsOnly("pmd","checkstyle");
  assertThat(query.severities()).containsOnly("MINOR","MAJOR");
  assertThat(query.statuses()).containsOnly("READY","BETA");
  assertThat(query.tags()).containsOnly("has-params","keep-enabled");
  assertThat(query.debtCharacteristics()).containsOnly("MODULARITY","REUSABILITY");
  assertThat(query.hasDebtCharacteristic()).isTrue();
  assertThat(query.pageSize()).isEqualTo(10);
  assertThat(query.pageIndex()).isEqualTo(50);
}
