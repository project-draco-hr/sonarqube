{
  RuleDto dto=new RuleDto().setId(1).setRepositoryKey("squid").setRuleKey("UselessImportCheck").setRemediationFunction("LINEAR").setRemediationCoefficient("1h");
  RuleKey ruleKey=RuleKey.of("squid","UselessImportCheck");
  when(ruleDao.selectOrFailByKey(session,ruleKey)).thenReturn(dto);
  try {
    operations.updateRule(new RuleChange().setRuleKey(ruleKey).setDebtRemediationFunction("LINEAR").setDebtRemediationCoefficient("foo"),authorizedUserSession);
  }
 catch (  Exception e) {
    assertThat(e).isInstanceOf(BadRequestException.class).hasMessage("Invalid coefficient: foo (Duration 'foo' is invalid, it should use the following sample format : 2d 10h 15min)");
  }
  verify(ruleDao,never()).update(eq(session),any(RuleDto.class));
  verify(session,never()).commit();
}
