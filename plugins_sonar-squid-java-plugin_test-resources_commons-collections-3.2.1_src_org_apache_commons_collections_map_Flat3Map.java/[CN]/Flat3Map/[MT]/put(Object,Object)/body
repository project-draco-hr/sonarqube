{
  if (delegateMap != null) {
    return delegateMap.put(key,value);
  }
  if (key == null) {
switch (size) {
case 3:
      if (key3 == null) {
        Object old=value3;
        value3=value;
        return old;
      }
case 2:
    if (key2 == null) {
      Object old=value2;
      value2=value;
      return old;
    }
case 1:
  if (key1 == null) {
    Object old=value1;
    value1=value;
    return old;
  }
}
}
 else {
if (size > 0) {
int hashCode=key.hashCode();
switch (size) {
case 3:
  if (hash3 == hashCode && key.equals(key3)) {
    Object old=value3;
    value3=value;
    return old;
  }
case 2:
if (hash2 == hashCode && key.equals(key2)) {
  Object old=value2;
  value2=value;
  return old;
}
case 1:
if (hash1 == hashCode && key.equals(key1)) {
Object old=value1;
value1=value;
return old;
}
}
}
}
switch (size) {
default :
convertToMap();
delegateMap.put(key,value);
return null;
case 2:
hash3=(key == null ? 0 : key.hashCode());
key3=key;
value3=value;
break;
case 1:
hash2=(key == null ? 0 : key.hashCode());
key2=key;
value2=value;
break;
case 0:
hash1=(key == null ? 0 : key.hashCode());
key1=key;
value1=value;
break;
}
size++;
return null;
}
