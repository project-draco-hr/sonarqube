{
  db.prepareDbUnit(getClass(),"shared.xml");
  FileSourceDb.Data.Builder dataBuilder=FileSourceDb.Data.newBuilder();
  dataBuilder.addLinesBuilder().setLine(1).build();
  FileSourceTesting.updateDataColumn(connection,"F1",dataBuilder.build());
  SourceFileResultSetIterator it=SourceFileResultSetIterator.create(dbClient,connection,0L);
  SourceFileResultSetIterator.Row row=it.next();
  assertThat(row.getProjectUuid()).isEqualTo("P1");
  assertThat(row.getFileUuid()).isEqualTo("F1");
  assertThat(row.getUpdatedAt()).isEqualTo(1416239042000L);
  assertThat(row.getLineUpdateRequests()).hasSize(1);
  UpdateRequest firstRequest=row.getLineUpdateRequests().get(0);
  Map<String,Object> doc=firstRequest.doc().sourceAsMap();
  assertThat(doc).contains(MapEntry.entry(SourceLineIndexDefinition.FIELD_PROJECT_UUID,"P1"),MapEntry.entry(SourceLineIndexDefinition.FIELD_FILE_UUID,"F1"),MapEntry.entry(SourceLineIndexDefinition.FIELD_LINE,1));
  assertThat(doc).containsKeys(SourceLineIndexDefinition.FIELD_SCM_REVISION,SourceLineIndexDefinition.FIELD_SCM_AUTHOR,SourceLineIndexDefinition.FIELD_HIGHLIGHTING,SourceLineIndexDefinition.FIELD_SYMBOLS,SourceLineIndexDefinition.FIELD_UT_LINE_HITS,SourceLineIndexDefinition.FIELD_UT_CONDITIONS,SourceLineIndexDefinition.FIELD_UT_COVERED_CONDITIONS,SourceLineIndexDefinition.FIELD_IT_LINE_HITS,SourceLineIndexDefinition.FIELD_IT_CONDITIONS,SourceLineIndexDefinition.FIELD_IT_COVERED_CONDITIONS,SourceLineIndexDefinition.FIELD_OVERALL_LINE_HITS,SourceLineIndexDefinition.FIELD_OVERALL_CONDITIONS,SourceLineIndexDefinition.FIELD_OVERALL_COVERED_CONDITIONS);
  it.close();
}
