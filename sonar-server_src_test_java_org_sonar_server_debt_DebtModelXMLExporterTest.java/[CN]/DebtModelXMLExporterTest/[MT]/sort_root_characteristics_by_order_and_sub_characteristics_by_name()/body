{
  DebtModel debtModel=new DebtModel().addRootCharacteristic(new DefaultDebtCharacteristic().setKey("EFFICIENCY").setName("Efficiency").setOrder(4)).addRootCharacteristic(new DefaultDebtCharacteristic().setKey("USABILITY").setName("Usability").setOrder(3)).addRootCharacteristic(new DefaultDebtCharacteristic().setKey("PORTABILITY").setName("Portability").setOrder(2)).addSubCharacteristic(new DefaultDebtCharacteristic().setKey("RAM_EFFICIENCY").setName("RAM Efficiency"),"EFFICIENCY").addSubCharacteristic(new DefaultDebtCharacteristic().setKey("CPU_EFFICIENCY").setName("CPU Efficiency"),"EFFICIENCY").addSubCharacteristic(new DefaultDebtCharacteristic().setKey("OTHER_EFFICIENCY").setName("Other Efficiency"),"EFFICIENCY");
  String xml=xmlExporter.export(debtModel,Collections.<RuleDebt>emptyList());
  Pattern regex=Pattern.compile(".*USABILITY.*PORTABILITY.*EFFICIENCY.*",Pattern.DOTALL);
  assertThat(regex.matcher(xml).matches());
  regex=Pattern.compile(".*CPU Efficiency.*Other Efficiency.*RAM Efficiency.*",Pattern.DOTALL);
  assertThat(regex.matcher(xml).matches());
}
