{
  File srcDir=new File(baseDir,"src");
  srcDir.mkdir();
  String duplicatedStuff="Sample xoo\ncontent\nfoo\nbar\ntoto\ntiti\nfoo\nbar\ntoto\ntiti\nbar\ntoto\ntiti\nfoo\nbar\ntoto\ntiti";
  File xooFile1=new File(srcDir,"sample1.xoo");
  FileUtils.write(xooFile1,duplicatedStuff);
  File xooFile2=new File(srcDir,"sample2.xoo");
  FileUtils.write(xooFile2,duplicatedStuff);
  TaskResult result=tester.newTask().properties(builder.put("sonar.sources","src").put("sonar.cpd.xoo.minimumTokens","10").put("sonar.verbose","true").build()).start();
  assertThat(result.inputFiles()).hasSize(2);
  assertThat(result.measures()).hasSize(9);
  InputFile inputFile1=result.inputFile("src/sample1.xoo");
  InputFile inputFile2=result.inputFile("src/sample2.xoo");
  List<DuplicationGroup> duplicationGroupsFile1=result.duplicationsFor(inputFile1);
  assertThat(duplicationGroupsFile1).hasSize(1);
  DuplicationGroup cloneGroupFile1=duplicationGroupsFile1.get(0);
  assertThat(cloneGroupFile1.duplicates()).hasSize(1);
  assertThat(cloneGroupFile1.originBlock().startLine()).isEqualTo(1);
  assertThat(cloneGroupFile1.originBlock().length()).isEqualTo(17);
  assertThat(cloneGroupFile1.originBlock().resourceKey()).isEqualTo(((DefaultInputFile)inputFile1).key());
  assertThat(cloneGroupFile1.duplicates()).hasSize(1);
  assertThat(cloneGroupFile1.duplicates().get(0).resourceKey()).isEqualTo(((DefaultInputFile)inputFile2).key());
  List<DuplicationGroup> duplicationGroupsFile2=result.duplicationsFor(inputFile2);
  assertThat(duplicationGroupsFile2).hasSize(1);
  DuplicationGroup cloneGroupFile2=duplicationGroupsFile2.get(0);
  assertThat(cloneGroupFile2.duplicates()).hasSize(1);
  assertThat(cloneGroupFile2.originBlock().startLine()).isEqualTo(1);
  assertThat(cloneGroupFile2.originBlock().length()).isEqualTo(17);
  assertThat(cloneGroupFile2.originBlock().resourceKey()).isEqualTo(((DefaultInputFile)inputFile2).key());
  assertThat(cloneGroupFile2.duplicates()).hasSize(1);
  assertThat(cloneGroupFile2.duplicates().get(0).resourceKey()).isEqualTo(((DefaultInputFile)inputFile1).key());
}
