{
  indexRules(newDoc(RULE_KEY_1),newDoc(RULE_KEY_2));
  ActiveRuleKey activeRuleKey1=ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_1);
  ActiveRuleKey activeRuleKey2=ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_2);
  indexActiveRules(ActiveRuleDocTesting.newDoc(activeRuleKey1).setSeverity(BLOCKER),ActiveRuleDocTesting.newDoc(activeRuleKey2).setSeverity(MINOR),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RULE_KEY_1)).setSeverity(MAJOR).setParentKey(activeRuleKey1.toString()).setInheritance(INHERITED.name()),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RULE_KEY_2)).setSeverity(BLOCKER).setParentKey(activeRuleKey2.toString()).setInheritance(OVERRIDES.name()));
  assertThat(tester.countDocuments(INDEX,TYPE_ACTIVE_RULE)).isEqualTo(4);
  Map<String,Multimap<String,FacetValue>> stats=index.getStatsByProfileKeys(ImmutableList.of(QUALITY_PROFILE_KEY1,QUALITY_PROFILE_KEY2));
  assertThat(stats).hasSize(2);
}
