{
  indexRules(RuleDocTesting.newDoc(RULE_KEY_1),RuleDocTesting.newDoc(RULE_KEY_2),RuleDocTesting.newDoc(RuleKey.of("xoo","removed")).setStatus(RuleStatus.REMOVED.name()));
  indexActiveRules(ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_1)),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY1,RULE_KEY_2)),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RULE_KEY_2)),ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2,RuleKey.of("xoo","removed"))));
  List<ActiveRule> activeRules=index.findByRule(RULE_KEY_1);
  assertThat(activeRules).hasSize(1);
  assertThat(activeRules.get(0).key().ruleKey()).isEqualTo(RULE_KEY_1);
  activeRules=index.findByRule(RULE_KEY_2);
  assertThat(activeRules).hasSize(2);
  assertThat(activeRules.get(0).key().ruleKey()).isEqualTo(RULE_KEY_2);
  activeRules=index.findByRule(RuleKey.of("unknown","unknown"));
  assertThat(activeRules).isEmpty();
  List<ActiveRuleDoc> activeRuleDocs=Lists.newArrayList(index.findByProfile(QUALITY_PROFILE_KEY1));
  assertThat(activeRuleDocs).hasSize(2);
  assertThat(activeRuleDocs.get(0).key().qProfile()).isEqualTo(QUALITY_PROFILE_KEY1);
  assertThat(activeRuleDocs.get(1).key().qProfile()).isEqualTo(QUALITY_PROFILE_KEY1);
  activeRuleDocs=Lists.newArrayList(index.findByProfile(QUALITY_PROFILE_KEY2));
  assertThat(activeRuleDocs).hasSize(1);
  assertThat(activeRuleDocs.get(0).key().qProfile()).isEqualTo(QUALITY_PROFILE_KEY2);
  activeRuleDocs=Lists.newArrayList(index.findByProfile("unknown"));
  assertThat(activeRuleDocs).isEmpty();
}
