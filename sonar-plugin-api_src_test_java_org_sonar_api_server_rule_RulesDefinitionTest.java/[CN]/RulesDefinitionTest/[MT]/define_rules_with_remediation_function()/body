{
  RulesDefinition.NewRepository newRepo=context.createRepository("common-java","java");
  RulesDefinition.NewRule newRule=newRepo.createRule("InsufficientBranchCoverage").setName("Insufficient condition coverage").setHtmlDescription("Insufficient condition coverage by unit tests").setSeverity(Severity.MAJOR).setGapDescription("Effort to test one uncovered branch");
  newRule.setDebtRemediationFunction(newRule.debtRemediationFunctions().linearWithOffset("1h","10min"));
  newRepo.done();
  RulesDefinition.Repository repo=context.repository("common-java");
  assertThat(repo.rules()).hasSize(1);
  RulesDefinition.Rule rule=repo.rule("InsufficientBranchCoverage");
  assertThat(rule.debtRemediationFunction().type()).isEqualTo(DebtRemediationFunction.Type.LINEAR_OFFSET);
  assertThat(rule.debtRemediationFunction().gapMultiplier()).isEqualTo("1h");
  assertThat(rule.debtRemediationFunction().baseEffort()).isEqualTo("10min");
  assertThat(rule.gapDescription()).isEqualTo("Effort to test one uncovered branch");
}
