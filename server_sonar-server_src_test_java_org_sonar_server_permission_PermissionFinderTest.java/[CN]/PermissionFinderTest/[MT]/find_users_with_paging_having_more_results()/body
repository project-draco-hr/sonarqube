{
  when(permissionDao.selectUsers(any(DbSession.class),any(PermissionQuery.class),anyLong(),anyInt(),anyInt())).thenReturn(newArrayList(new UserWithPermissionDto().setName("user1").setPermission("user"),new UserWithPermissionDto().setName("user2").setPermission("user"),new UserWithPermissionDto().setName("user3").setPermission("user")));
  when(permissionDao.countUsers(any(DbSession.class),any(PermissionQuery.class),anyLong())).thenReturn(3);
  UserWithPermissionQueryResult result=underTest.findUsersWithPermission(PermissionQuery.builder().permission("user").pageIndex(1).pageSize(2).build());
  ArgumentCaptor<Integer> argumentOffset=ArgumentCaptor.forClass(Integer.class);
  ArgumentCaptor<Integer> argumentLimit=ArgumentCaptor.forClass(Integer.class);
  verify(permissionDao).selectUsers(any(DbSession.class),any(PermissionQuery.class),anyLong(),argumentOffset.capture(),argumentLimit.capture());
  assertThat(argumentOffset.getValue()).isEqualTo(0);
  assertThat(argumentLimit.getValue()).isEqualTo(2);
  assertThat(result.total()).isEqualTo(3);
}
