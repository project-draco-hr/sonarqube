{
  if (comment == null && (issue.currentChange() == null || issue.currentChange().diffs().isEmpty())) {
    return null;
  }
  Notification notification=newNotification(project,"issue-changes");
  notification.setFieldValue("key",issue.key());
  notification.setFieldValue("changeAuthor",context.login());
  notification.setFieldValue("reporter",issue.reporter());
  notification.setFieldValue("assignee",issue.assignee());
  notification.setFieldValue("message",issue.message());
  notification.setFieldValue("ruleName",ruleName(rule));
  notification.setFieldValue("componentKey",issue.componentKey());
  if (component != null) {
    notification.setFieldValue("componentName",component.longName());
  }
  if (comment != null) {
    notification.setFieldValue("comment",comment);
  }
  FieldDiffs diffs=issue.currentChange();
  if (diffs != null) {
    for (    Map.Entry<String,FieldDiffs.Diff> entry : diffs.diffs().entrySet()) {
      String type=entry.getKey();
      FieldDiffs.Diff diff=entry.getValue();
      notification.setFieldValue("old." + type,diff.oldValue() != null ? diff.oldValue().toString() : null);
      notification.setFieldValue("new." + type,diff.newValue() != null ? diff.newValue().toString() : null);
    }
  }
  return notification;
}
