{
  RuleDefinitions.Repository repository=load(RuleWithProperty.class);
  assertThat(repository.rules()).hasSize(1);
  RuleDefinitions.Rule rule=repository.rules().get(0);
  assertThat(rule.key()).isEqualTo("foo");
  assertThat(rule.status()).isEqualTo(RuleDefinitions.Status.BETA);
  assertThat(rule.name()).isEqualTo("bar");
  assertThat(rule.htmlDescription()).isEqualTo("Foo Bar");
  assertThat(rule.defaultSeverity()).isEqualTo(Severity.BLOCKER);
  assertThat(rule.status()).isEqualTo(RuleDefinitions.Status.BETA);
  assertThat(rule.params()).hasSize(1);
  RuleDefinitions.Param prop=rule.param("property");
  assertThat(prop.key()).isEqualTo("property");
  assertThat(prop.description()).isEqualTo("Ignore ?");
  assertThat(prop.defaultValue()).isEqualTo("false");
  assertThat(prop.type()).isEqualTo(RuleParamType.STRING);
}
