{
  byte[][] hashes=new byte[f.lines()][];
  try {
    BufferedReader reader=Files.newBufferedReader(f.path(),f.charset());
    MessageDigest lineMd5Digest=DigestUtils.getMd5Digest();
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < f.lines(); i++) {
      String lineStr=reader.readLine();
      if (lineStr != null) {
        for (int j=0; j < lineStr.length(); j++) {
          char c=lineStr.charAt(j);
          if (!Character.isWhitespace(c)) {
            sb.append(c);
          }
        }
      }
      hashes[i]=sb.length() > 0 ? lineMd5Digest.digest(sb.toString().getBytes(Charsets.UTF_8)) : null;
      sb.setLength(0);
    }
  }
 catch (  Exception e) {
    throw new IllegalStateException("Unable to compute line hashes of file " + f,e);
  }
  int size=hashes.length;
  Multimap<String,Integer> linesByHash=LinkedHashMultimap.create();
  String[] hexHashes=new String[size];
  for (int i=0; i < size; i++) {
    String hash=hashes[i] != null ? Hex.encodeHexString(hashes[i]) : "";
    hexHashes[i]=hash;
    linesByHash.put(hash,i + 1);
  }
  return new FileHashes(hexHashes,linesByHash);
}
