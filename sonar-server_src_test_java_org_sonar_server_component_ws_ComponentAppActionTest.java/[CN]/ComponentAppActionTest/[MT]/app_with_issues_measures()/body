{
  MockUserSession.set().addComponentPermission(UserRole.USER,PROJECT_KEY,COMPONENT_KEY);
  addComponent();
  Multiset<String> severities=LinkedHashMultiset.create();
  severities.add("BLOCKER",1);
  severities.add("CRITICAL",2);
  severities.add("MAJOR",5);
  severities.add("MINOR",4);
  severities.add("INFO",2);
  when(issueService.findSeveritiesByComponent(COMPONENT_KEY,null,session)).thenReturn(severities);
  when(i18n.message(any(Locale.class),eq("severity.BLOCKER"),isNull(String.class))).thenReturn("Blocker");
  when(i18n.message(any(Locale.class),eq("severity.CRITICAL"),isNull(String.class))).thenReturn("Critical");
  when(i18n.message(any(Locale.class),eq("severity.MAJOR"),isNull(String.class))).thenReturn("Major");
  when(i18n.message(any(Locale.class),eq("severity.MINOR"),isNull(String.class))).thenReturn("Minor");
  when(i18n.message(any(Locale.class),eq("severity.INFO"),isNull(String.class))).thenReturn("Info");
  when(i18n.formatInteger(any(Locale.class),eq(14))).thenReturn("14");
  when(i18n.formatInteger(any(Locale.class),eq(1))).thenReturn("1");
  when(i18n.formatInteger(any(Locale.class),eq(2))).thenReturn("2");
  when(i18n.formatInteger(any(Locale.class),eq(5))).thenReturn("5");
  when(i18n.formatInteger(any(Locale.class),eq(4))).thenReturn("4");
  WsTester.TestRequest request=tester.newGetRequest("api/components","app").setParam("key",COMPONENT_KEY);
  request.execute().assertJson(getClass(),"app_with_issues_measures.json");
}
