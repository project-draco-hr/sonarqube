{
  MockUserSession.set().addProjectPermissions(UserRole.CODEVIEWER,PROJECT_KEY).addComponent(COMPONENT_KEY,PROJECT_KEY);
  ComponentDto file=new ComponentDto().setId(10L).setQualifier("FIL").setKey(COMPONENT_KEY).setName("Plugin.java").setPath("src/main/java/org/sonar/api/Plugin.java").setSubProjectId(5L).setProjectId(1L);
  when(resourceDao.selectComponentByKey(COMPONENT_KEY)).thenReturn(file);
  when(resourceDao.findById(5L)).thenReturn(new ComponentDto().setId(5L).setLongName("SonarQube :: Plugin API"));
  when(resourceDao.findById(1L)).thenReturn(new ComponentDto().setId(1L).setLongName("SonarQube"));
  when(propertiesDao.selectByQuery(any(PropertyQuery.class))).thenReturn(newArrayList(new PropertyDto()));
  addMeasure(CoreMetrics.NCLOC_KEY,200);
  addMeasure(CoreMetrics.COVERAGE_KEY,95.4);
  addMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,7.4);
  addMeasure(CoreMetrics.VIOLATIONS_KEY,14);
  addMeasure(CoreMetrics.BLOCKER_VIOLATIONS_KEY,1);
  addMeasure(CoreMetrics.CRITICAL_VIOLATIONS_KEY,2);
  addMeasure(CoreMetrics.MAJOR_VIOLATIONS_KEY,5);
  addMeasure(CoreMetrics.MINOR_VIOLATIONS_KEY,4);
  addMeasure(CoreMetrics.INFO_VIOLATIONS_KEY,2);
  when(measureDao.findByComponentKeyAndMetricKey(COMPONENT_KEY,CoreMetrics.TECHNICAL_DEBT_KEY)).thenReturn(new MeasureDto().setValue(182.0));
  when(durations.format(any(Locale.class),any(Duration.class),eq(Durations.DurationFormat.SHORT))).thenReturn("3h 2min");
  when(resourceDao.getLastSnapshotByResourceId(eq(1L))).thenReturn(new SnapshotDto().setPeriod1Mode("previous_analysis"));
  when(periods.label(anyString(),anyString(),any(Date.class))).thenReturn("since previous analysis (May 08 2014)");
  WsTester.TestRequest request=tester.newGetRequest("api/components","app").setParam("key",COMPONENT_KEY);
  request.execute().assertJson(getClass(),"app.json");
}
