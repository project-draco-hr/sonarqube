{
  assertThat(underTest.hasComponentData(FileStructure.Domain.SYMBOLS,1)).isFalse();
  ScannerReport.Symbol symbol=ScannerReport.Symbol.newBuilder().setDeclaration(ScannerReport.TextRange.newBuilder().setStartLine(1).setStartOffset(3).setEndLine(1).setEndOffset(5).build()).addReference(ScannerReport.TextRange.newBuilder().setStartLine(10).setStartOffset(15).setEndLine(11).setEndOffset(2).build()).build();
  underTest.writeComponentSymbols(1,asList(symbol));
  assertThat(underTest.hasComponentData(FileStructure.Domain.SYMBOLS,1)).isTrue();
  File file=underTest.getFileStructure().fileFor(FileStructure.Domain.SYMBOLS,1);
  assertThat(file).exists().isFile();
  try (CloseableIterator<ScannerReport.Symbol> read=Protobuf.readStream(file,ScannerReport.Symbol.PARSER)){
    assertThat(read).hasSize(1);
  }
 }
