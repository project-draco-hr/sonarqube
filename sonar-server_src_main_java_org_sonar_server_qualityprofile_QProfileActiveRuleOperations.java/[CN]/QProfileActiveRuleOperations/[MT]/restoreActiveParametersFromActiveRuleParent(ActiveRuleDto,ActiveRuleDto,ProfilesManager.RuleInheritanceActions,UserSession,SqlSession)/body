{
  List<ActiveRuleParamDto> parentParams=activeRuleDao.selectParamsByActiveRuleId(parent.getId(),session);
  List<ActiveRuleParamDto> activeRuleParams=activeRuleDao.selectParamsByActiveRuleId(activeRule.getId(),session);
  List<ActiveRuleParamDto> newParams=newArrayList();
  List<String> paramKeys=newArrayList();
  for (  ActiveRuleParamDto param : activeRuleParams) {
    final String key=param.getKey();
    ActiveRuleParamDto parentParam=Iterables.find(parentParams,new Predicate<ActiveRuleParamDto>(){
      @Override public boolean apply(      ActiveRuleParamDto activeRuleParamDto){
        return activeRuleParamDto.getKey().equals(key);
      }
    }
,null);
    if (parentParam != null && !Strings.isNullOrEmpty(parentParam.getValue())) {
      String oldValue=param.getValue();
      String newValue=parentParam.getValue();
      param.setValue(newValue);
      activeRuleDao.update(param,session);
      session.commit();
      newParams.add(param);
      actions.add(profilesManager.ruleParamChanged(activeRule.getProfileId(),activeRule.getId(),key,oldValue,newValue,getLoggedName(userSession)));
    }
 else {
      activeRuleDao.deleteParameter(param.getId(),session);
      session.commit();
      actions.add(profilesManager.ruleParamChanged(activeRule.getProfileId(),activeRule.getId(),key,param.getValue(),null,userSession.name()));
    }
    paramKeys.add(key);
  }
  for (  ActiveRuleParamDto parentParam : parentParams) {
    if (!paramKeys.contains(parentParam.getKey())) {
      ActiveRuleParamDto activeRuleParam=new ActiveRuleParamDto().setActiveRuleId(activeRule.getId()).setKey(parentParam.getKey()).setValue(parentParam.getValue()).setRulesParameterId(parentParam.getRulesParameterId());
      activeRuleDao.insert(activeRuleParam,session);
      session.commit();
      newParams.add(activeRuleParam);
      actions.add(profilesManager.ruleParamChanged(activeRule.getProfileId(),activeRule.getId(),parentParam.getKey(),null,parentParam.getValue(),userSession.name()));
    }
  }
  return newParams;
}
