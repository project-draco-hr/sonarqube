{
  QualityProfileDto profile=QProfileTesting.newXooP1();
  tester.get(QualityProfileDao.class).insert(dbSession,profile);
  QualityProfileDto profile2=QProfileTesting.newXooP2();
  tester.get(QualityProfileDao.class).insert(dbSession,profile2);
  dbSession.commit();
  RuleDto rule=RuleTesting.newXooX1();
  ruleDao.insert(dbSession,rule);
  RuleParamDto param=RuleParamDto.createFor(rule).setDefaultValue("some value").setType("string").setDescription("My small description").setName("my_var");
  ruleDao.insertRuleParam(dbSession,rule,param);
  RuleParamDto param2=RuleParamDto.createFor(rule).setDefaultValue("other value").setType("integer").setDescription("My small description").setName("the_var");
  ruleDao.insertRuleParam(dbSession,rule,param2);
  RuleParamDto param3=RuleParamDto.createFor(rule).setDefaultValue(null).setType("string").setDescription("Empty Param").setName("empty_var");
  ruleDao.insertRuleParam(dbSession,rule,param3);
  ActiveRuleDto activeRule=newActiveRule(profile,rule);
  tester.get(ActiveRuleDao.class).insert(dbSession,activeRule);
  ActiveRuleDto activeRule2=newActiveRule(profile2,rule);
  tester.get(ActiveRuleDao.class).insert(dbSession,activeRule2);
  ActiveRuleParamDto activeRuleParam=ActiveRuleParamDto.createFor(param).setValue("The VALUE");
  tester.get(ActiveRuleDao.class).insertParam(dbSession,activeRule2,activeRuleParam);
  ActiveRuleParamDto activeRuleParam2=ActiveRuleParamDto.createFor(param2).setValue("The Other Value");
  tester.get(ActiveRuleDao.class).insertParam(dbSession,activeRule2,activeRuleParam2);
  ActiveRuleParamDto activeRuleParam3=ActiveRuleParamDto.createFor(param3).setValue(null);
  tester.get(ActiveRuleDao.class).insertParam(dbSession,activeRule2,activeRuleParam3);
  dbSession.commit();
  ruleIndexer.index();
  activeRuleIndexer.index();
  WsTester.TestRequest request=tester.wsTester().newGetRequest(API_ENDPOINT,API_SEARCH_METHOD);
  request.setParam(WebService.Param.TEXT_QUERY,"x1");
  request.setParam(PARAM_ACTIVATION,"true");
  request.setParam(PARAM_QPROFILE,profile2.getKey());
  request.setParam(WebService.Param.FIELDS,"actives");
  WsTester.Result result=request.execute();
  result.assertJson(this.getClass(),"search_profile_active_rules.json");
  tester.wsTester().newGetRequest(API_ENDPOINT,API_SEARCH_METHOD).setParam(PARAM_ACTIVATION,"true").setParam(PARAM_QPROFILE,"unknown_profile").setParam(WebService.Param.FIELDS,"actives").execute().assertJson(this.getClass(),"search_no_rules.json");
}
