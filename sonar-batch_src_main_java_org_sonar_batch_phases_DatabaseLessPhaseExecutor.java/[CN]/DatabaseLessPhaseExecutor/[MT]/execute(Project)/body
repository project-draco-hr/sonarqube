{
  pi.execute(module);
  eventBus.fireEvent(new ProjectAnalysisEvent(module,true));
  executeInitializersPhase();
  if (phases.isEnabled(Phases.Phase.SENSOR)) {
    indexFs();
    profileVerifier.execute();
    initIssueExclusions();
    sensorsExecutor.execute(sensorContext);
  }
  if (module.isRoot()) {
    localIssueTracking();
    issuesReport();
    publishReportJob();
    if (phases.isEnabled(Phases.Phase.POSTJOB)) {
      postJobsExecutor.execute(sensorContext);
    }
  }
  cleanMemory();
  eventBus.fireEvent(new ProjectAnalysisEvent(module,false));
}
