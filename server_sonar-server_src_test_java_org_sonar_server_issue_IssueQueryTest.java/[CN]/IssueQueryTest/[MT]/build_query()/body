{
  IssueQuery query=IssueQuery.builder(userSessionRule).issueKeys(newArrayList("ABCDE")).severities(newArrayList(Severity.BLOCKER)).statuses(Lists.newArrayList(Issue.STATUS_RESOLVED)).resolutions(newArrayList(Issue.RESOLUTION_FALSE_POSITIVE)).componentUuids(newArrayList("org/struts/Action.java")).moduleUuids(newArrayList("org.struts:core")).rules(newArrayList(RuleKey.of("squid","AvoidCycle"))).assignees(newArrayList("gargantua")).languages(newArrayList("xoo")).tags(newArrayList("tag1","tag2")).types(newArrayList("RELIABILITY","SECURITY")).assigned(true).hideRules(true).createdAfter(new Date()).createdBefore(new Date()).createdAt(new Date()).resolved(true).sort(IssueQuery.SORT_BY_ASSIGNEE).asc(true).build();
  assertThat(query.issueKeys()).containsOnly("ABCDE");
  assertThat(query.severities()).containsOnly(Severity.BLOCKER);
  assertThat(query.statuses()).containsOnly(Issue.STATUS_RESOLVED);
  assertThat(query.resolutions()).containsOnly(Issue.RESOLUTION_FALSE_POSITIVE);
  assertThat(query.componentUuids()).containsOnly("org/struts/Action.java");
  assertThat(query.moduleUuids()).containsOnly("org.struts:core");
  assertThat(query.assignees()).containsOnly("gargantua");
  assertThat(query.languages()).containsOnly("xoo");
  assertThat(query.tags()).containsOnly("tag1","tag2");
  assertThat(query.types()).containsOnly("RELIABILITY","SECURITY");
  assertThat(query.assigned()).isTrue();
  assertThat(query.hideRules()).isTrue();
  assertThat(query.rules()).containsOnly(RuleKey.of("squid","AvoidCycle"));
  assertThat(query.createdAfter()).isNotNull();
  assertThat(query.createdBefore()).isNotNull();
  assertThat(query.createdAt()).isNotNull();
  assertThat(query.resolved()).isTrue();
  assertThat(query.sort()).isEqualTo(IssueQuery.SORT_BY_ASSIGNEE);
  assertThat(query.asc()).isTrue();
}
