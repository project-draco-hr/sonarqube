{
  add(props,DefaultAnalysisMode.class,ProjectReactorBuilder.class,WorkDirectoryCleaner.class,new MutableProjectReactorProvider(),new ImmutableProjectReactorProvider(),ProjectBuildersExecutor.class,ProjectLock.class,EventBus.class,PhasesTimeProfiler.class,ResourceTypes.class,DefaultProjectTree.class,ProjectReactorValidator.class,CodeColorizers.class,MetricProvider.class,ProjectConfigurator.class,DefaultIndex.class,Caches.class,BatchComponentCache.class,DefaultIssueCallback.class,new RulesProvider(),new ProjectRepositoriesProvider(),new AnalysisTempFolderProvider(),InputPathCache.class,PathResolver.class,new ActiveRulesProvider(),new QualityProfileProvider(),IssueCache.class,DefaultProjectIssues.class,IssueTransition.class,DefaultMetricFinder.class,DeprecatedMetricFinder.class,TestPlanBuilder.class,TestableBuilder.class,Languages.class,DefaultLanguagesRepository.class,MeasureCache.class,ProjectSettings.class,ScannerMetrics.class,ReportPublisher.class,AnalysisContextReportPublisher.class,MetadataPublisher.class,ActiveRulesPublisher.class,ComponentsPublisher.class,MeasuresPublisher.class,CoveragePublisher.class,SourcePublisher.class,TestExecutionAndCoveragePublisher.class,CpdExecutor.class,SonarCpdBlockIndex.class,ScanTaskObservers.class,UserRepositoryLoader.class);
  addIfMissing(DefaultRulesLoader.class,RulesLoader.class);
  addIfMissing(DefaultActiveRulesLoader.class,ActiveRulesLoader.class);
  addIfMissing(DefaultQualityProfileLoader.class,QualityProfileLoader.class);
  addIfMissing(DefaultProjectRepositoriesLoader.class,ProjectRepositoriesLoader.class);
}
