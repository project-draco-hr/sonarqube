{
  File baseDir=temp.getRoot();
  File module1Dir=new File(baseDir,"module1");
  module1Dir.mkdir();
  File srcDir=new File(module1Dir,"src");
  srcDir.mkdir();
  File xooFile=new File(srcDir,"sample.xoo");
  FileUtils.write(xooFile,"1\n2\n3\n4\n5\n6\n7\n8\n9\n10");
  TaskResult result=tester.newTask().properties(ImmutableMap.<String,String>builder().put("sonar.task","scan").put("sonar.projectBaseDir",baseDir.getAbsolutePath()).put("sonar.projectKey","com.foo.project").put("sonar.projectName","Foo Project").put("sonar.projectVersion","1.0-SNAPSHOT").put("sonar.projectDescription","Description of Foo Project").put("sonar.branch","my-branch").put("sonar.sources",".").put("sonar.xoo.enableProjectBuilder","true").build()).start();
  List<Issue> issues=result.issuesFor(result.inputFile("src/sample.xoo"));
  assertThat(issues).hasSize(10);
  boolean foundIssueAtLine1=false;
  for (  Issue issue : issues) {
    if (issue.getLine() == 1) {
      foundIssueAtLine1=true;
      assertThat(issue.getMsg()).isEqualTo("This issue is generated on each line");
      assertThat(issue.hasEffortToFix()).isFalse();
    }
  }
  assertThat(foundIssueAtLine1).isTrue();
}
