{
  when(actionPlanService.findByKey(eq("ABCD"),any(UserSession.class))).thenReturn(DefaultActionPlan.create("Long term"));
  Map<String,String> parameters=newHashMap();
  parameters.put("name","New Long term");
  parameters.put("description","New Long term issues");
  parameters.put("deadLine","2113-05-13");
  parameters.put("project","org.sonar.MultiSample");
  ArgumentCaptor<ActionPlan> actionPlanCaptor=ArgumentCaptor.forClass(ActionPlan.class);
  Result result=internalRubyIssueService.updateActionPlan("ABCD",parameters);
  assertThat(result.ok()).isTrue();
  verify(actionPlanService).update(actionPlanCaptor.capture(),any(UserSession.class));
  ActionPlan actionPlan=actionPlanCaptor.getValue();
  assertThat(actionPlan).isNotNull();
  assertThat(actionPlan.key()).isNotNull();
  assertThat(actionPlan.name()).isEqualTo("New Long term");
  assertThat(actionPlan.description()).isEqualTo("New Long term issues");
  assertThat(actionPlan.deadLine()).isNotNull();
}
