{
  File file=getFile(defaultCoverage.inputFile());
  if (coverageExclusions.hasMatchingPattern(file)) {
    return;
  }
  CoverageType type=defaultCoverage.type();
  if (defaultCoverage.linesToCover() > 0) {
    saveMeasure(file,new org.sonar.api.measures.Measure(type.linesToCover(),(double)defaultCoverage.linesToCover()));
    saveMeasure(file,new org.sonar.api.measures.Measure(type.uncoveredLines(),(double)(defaultCoverage.linesToCover() - defaultCoverage.coveredLines())));
    saveMeasure(file,new org.sonar.api.measures.Measure(type.lineHitsData()).setData(KeyValueFormat.format(defaultCoverage.hitsByLine())));
  }
  if (defaultCoverage.conditions() > 0) {
    saveMeasure(file,new org.sonar.api.measures.Measure(type.conditionsToCover(),(double)defaultCoverage.conditions()));
    saveMeasure(file,new org.sonar.api.measures.Measure(type.uncoveredConditions(),(double)(defaultCoverage.conditions() - defaultCoverage.coveredConditions())));
    saveMeasure(file,new org.sonar.api.measures.Measure(type.coveredConditionsByLine()).setData(KeyValueFormat.format(defaultCoverage.coveredConditionsByLine())));
    saveMeasure(file,new org.sonar.api.measures.Measure(type.conditionsByLine()).setData(KeyValueFormat.format(defaultCoverage.conditionsByLine())));
  }
}
