{
  try {
    ActionExtractor actionExtractor=new ActionExtractor(request.getPath());
    WebService.Action action=getAction(actionExtractor.getController(),actionExtractor.getAction());
    if (request instanceof ValidatingRequest) {
      ((ValidatingRequest)request).setAction(action);
      ((ValidatingRequest)request).setLocalConnector(this);
    }
    checkActionExtension(actionExtractor.getExtension());
    verifyRequest(action,request);
    action.handler().handle(request,response);
  }
 catch (  IllegalArgumentException e) {
    sendErrors(response,400,new Errors().add(Message.of(e.getMessage())));
  }
catch (  BadRequestException e) {
    sendErrors(response,400,e.errors());
  }
catch (  ServerException e) {
    sendErrors(response,e.httpCode(),new Errors().add(Message.of(e.getMessage())));
  }
catch (  Exception e) {
    Throwable cause=e.getCause();
    if (cause != null && cause instanceof ClientAbortException) {
      LOGGER.warn("Request {} has been aborted by client, error is '{}'",request,e.getMessage());
      return;
    }
    LOGGER.error("Fail to process request " + request,e);
    sendErrors(response,500,new Errors().add(Message.of(e.getMessage())));
  }
}
