{
  LinkedHashMap<String,Object> attributes=new LinkedHashMap<>();
  attributes.put("System Date",formatDateTime(new Date(system.now())));
  attributes.put("Start Time",formatDateTime(new Date(runtimeMXBean().getStartTime())));
  attributes.put("JVM Vendor",runtimeMXBean().getVmVendor());
  attributes.put("JVM Name",runtimeMXBean().getVmName());
  attributes.put("JVM Version",runtimeMXBean().getVmVersion());
  attributes.put("Processors",runtime().availableProcessors());
  attributes.put("System Classpath",runtimeMXBean().getClassPath());
  attributes.put("BootClassPath",runtimeMXBean().getBootClassPath());
  attributes.put("Library Path",runtimeMXBean().getLibraryPath());
  attributes.put("Total Memory",formatMemory(runtime().totalMemory()));
  attributes.put("Free Memory",formatMemory(runtime().freeMemory()));
  attributes.put("Max Memory",formatMemory(runtime().maxMemory()));
  attributes.put("Heap",memoryMXBean().getHeapMemoryUsage().toString());
  attributes.put("Non Heap",memoryMXBean().getNonHeapMemoryUsage().toString());
  attributes.put("System Load Average",String.format("%.1f%% (last minute)",ManagementFactory.getOperatingSystemMXBean().getSystemLoadAverage() * 100.0));
  attributes.put("Loaded Classes",classLoadingMXBean().getLoadedClassCount());
  attributes.put("Total Loaded Classes",classLoadingMXBean().getTotalLoadedClassCount());
  attributes.put("Unloaded Classes",classLoadingMXBean().getUnloadedClassCount());
  attributes.put("Threads",threadMXBean().getThreadCount());
  attributes.put("Threads Peak",threadMXBean().getPeakThreadCount());
  attributes.put("Daemon Thread",threadMXBean().getDaemonThreadCount());
  return attributes;
}
