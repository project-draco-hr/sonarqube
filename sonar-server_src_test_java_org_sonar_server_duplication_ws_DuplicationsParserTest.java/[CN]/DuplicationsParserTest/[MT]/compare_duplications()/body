{
  ComponentDto currentFile=new ComponentDto().setId(11L).setProjectId(1L);
  ComponentDto fileOnSameProject=new ComponentDto().setId(12L).setProjectId(1L);
  ComponentDto fileOnDifferentProject=new ComponentDto().setId(13L).setProjectId(2L);
  DuplicationsParser.DuplicationComparator comparator=new DuplicationsParser.DuplicationComparator(currentFile);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(currentFile,2,2),new DuplicationsParser.Duplication(currentFile,5,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(currentFile,2,2),new DuplicationsParser.Duplication(fileOnSameProject,5,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnSameProject,2,2),new DuplicationsParser.Duplication(currentFile,5,2))).isEqualTo(1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnSameProject,5,2),new DuplicationsParser.Duplication(fileOnDifferentProject,2,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnDifferentProject,5,2),new DuplicationsParser.Duplication(fileOnSameProject,2,2))).isEqualTo(1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnDifferentProject,5,2),new DuplicationsParser.Duplication(new ComponentDto().setId(30L).setProjectId(3L),2,2))).isEqualTo(1);
  assertThat(comparator.compare(null,new DuplicationsParser.Duplication(fileOnSameProject,2,2))).isEqualTo(-1);
  assertThat(comparator.compare(new DuplicationsParser.Duplication(fileOnSameProject,2,2),null)).isEqualTo(-1);
  assertThat(comparator.compare(null,null)).isEqualTo(-1);
}
