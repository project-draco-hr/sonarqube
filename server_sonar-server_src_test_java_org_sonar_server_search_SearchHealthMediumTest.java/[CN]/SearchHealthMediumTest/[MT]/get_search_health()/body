{
  DbSession dbSession=tester.get(DbClient.class).openSession(false);
  tester.get(RuleDao.class).insert(dbSession,RuleTesting.newDto(RuleKey.of("javascript","S001")));
  dbSession.commit();
  SearchHealth health=tester.get(SearchHealth.class);
  Date now=new Date();
  ClusterHealth clusterHealth=health.getClusterHealth();
  assertThat(clusterHealth.isClusterAvailable()).isTrue();
  assertThat(clusterHealth.getNumberOfNodes()).isEqualTo(1);
  NodeHealth nodeHealth=health.getNodesHealth().values().iterator().next();
  assertThat(nodeHealth.isMaster()).isTrue();
  System.out.println(nodeHealth.getAddress());
  assertThat(nodeHealth.getAddress()).contains(":");
  assertThat(nodeHealth.getJvmHeapUsedPercent()).contains("%");
  assertThat(nodeHealth.getFsUsedPercent()).contains("%");
  assertThat(nodeHealth.getJvmThreads()).isGreaterThanOrEqualTo(0L);
  assertThat(nodeHealth.getProcessCpuPercent()).contains("%");
  assertThat(nodeHealth.getOpenFiles()).isGreaterThanOrEqualTo(0L);
  assertThat(nodeHealth.getJvmUpSince().before(now)).isTrue();
  Map<String,IndexHealth> indexHealth=health.getIndexHealth();
  assertThat(indexHealth).isNotEmpty();
  for (  IndexHealth index : indexHealth.values()) {
    assertThat(index.getDocumentCount()).isGreaterThanOrEqualTo(0L);
    assertThat(index.getLastSynchronization().before(now)).isTrue();
    assertThat(index.isOptimized()).isIn(true,false);
  }
}
