{
  JsonWriter json=null;
  try {
    json=new JsonWriter(writer);
    json.setSerializeNulls(false);
    json.beginObject().name("version").value(server.getVersion()).name("violations_per_resource").beginObject();
    for (    Resource resource : resources) {
      Iterable<DefaultIssue> issues=getIssues(resource);
      boolean hasViolation=false;
      for (      DefaultIssue issue : issues) {
        if (!hasViolation) {
          json.name(resource.getKey()).beginArray();
          hasViolation=true;
        }
        json.beginObject().name("line").value(issue.line()).name("message").value(issue.message()).name("severity").value(issue.severity()).name("rule_key").value(issue.ruleKey().rule()).name("rule_repository").value(issue.ruleKey().repository()).name("rule_name").value(ruleName(issue.ruleKey())).name("switched_off").value(Issue.RESOLUTION_FALSE_POSITIVE.equals(issue.resolution())).name("is_new").value(issue.isNew()).name("created_at").value(DateUtils.formatDateTime(issue.creationDate())).endObject();
      }
      if (hasViolation) {
        json.endArray();
      }
    }
    json.endObject().endObject().flush();
  }
 catch (  IOException e) {
    throw new SonarException("Unable to export results",e);
  }
 finally {
    Closeables.closeQuietly(json);
  }
}
