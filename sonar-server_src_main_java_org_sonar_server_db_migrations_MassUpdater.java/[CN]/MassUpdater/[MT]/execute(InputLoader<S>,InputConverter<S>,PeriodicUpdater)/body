{
  long count=0;
  Connection readConnection=null;
  Statement stmt=null;
  ResultSet rs=null;
  Connection writeConnection=null;
  PreparedStatement writeStatement=null;
  try {
    readConnection=db.getDataSource().getConnection();
    readConnection.setAutoCommit(false);
    stmt=initStatement(readConnection);
    rs=stmt.executeQuery(convertSelectSql(inputLoader.selectSql(),db));
    int cursor=0;
    while (rs.next()) {
      S row=inputLoader.load(rs);
      if (row == null) {
        continue;
      }
      if (writeConnection == null) {
        writeConnection=db.getDataSource().getConnection();
        writeConnection.setAutoCommit(false);
        writeStatement=writeConnection.prepareStatement(converter.updateSql());
      }
      if (converter.convert(row,writeStatement)) {
        writeStatement.addBatch();
        writeStatement.clearParameters();
        cursor++;
        count++;
      }
      if (cursor == groupSize) {
        commit(writeConnection,writeStatement,periodicUpdater);
        cursor=0;
      }
    }
    if (cursor > 0) {
      commit(writeConnection,writeStatement,periodicUpdater);
    }
  }
 catch (  SQLException e) {
    SqlUtil.log(LOGGER,e);
    throw processError(e);
  }
catch (  Exception e) {
    throw processError(e);
  }
 finally {
    DbUtils.closeQuietly(writeStatement);
    DbUtils.closeQuietly(writeConnection);
    DbUtils.closeQuietly(readConnection,stmt,rs);
    LOGGER.info("{} rows have been updated",count);
  }
}
