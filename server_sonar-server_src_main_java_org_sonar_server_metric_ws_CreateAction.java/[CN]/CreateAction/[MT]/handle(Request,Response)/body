{
  userSession.checkLoggedIn().checkGlobalPermission(GlobalPermissions.SYSTEM_ADMIN);
  String key=request.mandatoryParam(PARAM_KEY);
  DbSession dbSession=dbClient.openSession(false);
  try {
    MetricDto metricTemplate=newMetricTemplate(request);
    MetricDto metricInDb=dbClient.metricDao().selectByKey(dbSession,key);
    checkMetricInDbAndTemplate(dbSession,metricInDb,metricTemplate);
    if (metricIsNotInDb(metricInDb)) {
      metricInDb=insertNewMetric(dbSession,metricTemplate);
    }
 else {
      updateMetric(dbSession,metricInDb,metricTemplate);
    }
    JsonWriter json=response.newJsonWriter();
    writeMetric(json,metricInDb);
    json.close();
    rubyBridge.metricCache().invalidate();
  }
  finally {
    MyBatis.closeQuietly(dbSession);
  }
}
