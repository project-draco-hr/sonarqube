{
  Map<String,Object> map=newHashMap();
  map.put("keys",newArrayList("ABCDE1234"));
  map.put("severities",newArrayList("MAJOR","MINOR"));
  map.put("statuses",newArrayList("CLOSED"));
  map.put("resolutions",newArrayList("FALSE-POSITIVE"));
  map.put("components",newArrayList("org.apache"));
  map.put("userLogins",newArrayList("marilyn"));
  map.put("assigneeLogins",newArrayList("joanna"));
  map.put("createdAfter","2013-04-16T09:08:24+0200");
  map.put("createdBefore","2013-04-17T09:08:24+0200");
  map.put("rule","rule");
  map.put("ruleRepository","ruleRepository");
  map.put("limit",10);
  map.put("offset",50);
  IssueQuery query=new DefaultJRubyIssues(finder).newQuery(map);
  assertThat(query.keys()).containsOnly("ABCDE1234");
  assertThat(query.severities()).containsExactly("MAJOR","MINOR");
  assertThat(query.statuses()).containsOnly("CLOSED");
  assertThat(query.resolutions()).containsOnly("FALSE-POSITIVE");
  assertThat(query.userLogins()).containsOnly("marilyn");
  assertThat(query.assigneeLogins()).containsOnly("joanna");
  assertThat(query.rule()).isEqualTo("rule");
  assertThat(query.ruleRepository()).isEqualTo("ruleRepository");
  assertThat(query.createdAfter()).isEqualTo(DateUtils.parseDateTime("2013-04-16T09:08:24+0200"));
  assertThat(query.createdBefore()).isEqualTo(DateUtils.parseDateTime("2013-04-17T09:08:24+0200"));
  assertThat(query.limit()).isEqualTo(10);
  assertThat(query.offset()).isEqualTo(50);
}
