{
  pi.execute(module);
  eventBus.fireEvent(new ProjectAnalysisEvent(module,true));
  executeMavenPhase(module);
  executeInitializersPhase();
  persistenceManager.setDelayedMode(true);
  if (phases.isEnabled(Phases.Phase.SENSOR)) {
    sensorsExecutor.execute(sensorContext);
  }
  if (phases.isEnabled(Phases.Phase.DECORATOR)) {
    decoratorsExecutor.execute();
  }
  String saveMeasures="Save measures";
  eventBus.fireEvent(new BatchStepEvent(saveMeasures,true));
  persistenceManager.dump();
  eventBus.fireEvent(new BatchStepEvent(saveMeasures,false));
  persistenceManager.setDelayedMode(false);
  if (module.isRoot()) {
    jsonReport.execute();
    executePersisters();
    updateStatusJob();
    if (phases.isEnabled(Phases.Phase.POSTJOB)) {
      postJobsExecutor.execute(sensorContext);
    }
  }
  cleanMemory();
  eventBus.fireEvent(new ProjectAnalysisEvent(module,false));
}
