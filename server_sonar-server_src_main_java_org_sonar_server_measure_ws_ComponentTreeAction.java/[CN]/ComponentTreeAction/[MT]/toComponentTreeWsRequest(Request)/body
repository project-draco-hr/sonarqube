{
  ComponentTreeWsRequest componentTreeWsRequest=new ComponentTreeWsRequest().setBaseComponentId(request.param(PARAM_BASE_COMPONENT_ID)).setBaseComponentKey(request.param(PARAM_BASE_COMPONENT_KEY)).setMetricKeys(request.mandatoryParamAsStrings(PARAM_METRIC_KEYS)).setStrategy(request.mandatoryParam(PARAM_STRATEGY)).setQualifiers(request.paramAsStrings(PARAM_QUALIFIERS)).setAdditionalFields(request.paramAsStrings(PARAM_ADDITIONAL_FIELDS)).setSort(request.paramAsStrings(Param.SORT)).setAsc(request.paramAsBoolean(Param.ASCENDING)).setMetricSort(request.param(PARAM_METRIC_SORT)).setMetricSortFilter(request.mandatoryParam(PARAM_METRIC_SORT_FILTER)).setMetricPeriodSort(request.paramAsInt(PARAM_METRIC_PERIOD_SORT)).setDeveloperId(request.param(PARAM_DEVELOPER_ID)).setDeveloperKey(request.param(PARAM_DEVELOPER_KEY)).setPage(request.mandatoryParamAsInt(Param.PAGE)).setPageSize(request.mandatoryParamAsInt(Param.PAGE_SIZE)).setQuery(request.param(Param.TEXT_QUERY));
  checkRequest(componentTreeWsRequest.getPageSize() <= MAX_SIZE,"The '%s' parameter must be less than %d",Param.PAGE_SIZE,MAX_SIZE);
  String searchQuery=componentTreeWsRequest.getQuery();
  checkRequest(searchQuery == null || searchQuery.length() >= QUERY_MINIMUM_LENGTH,"The '%s' parameter must have at least %d characters",Param.TEXT_QUERY,QUERY_MINIMUM_LENGTH);
  String metricSortValue=componentTreeWsRequest.getMetricSort();
  checkRequest(!componentTreeWsRequest.getMetricKeys().isEmpty(),"The '%s' parameter must contain at least one metric key",PARAM_METRIC_KEYS);
  checkRequest(metricSortValue == null ^ componentTreeWsRequest.getSort().contains(METRIC_SORT) ^ componentTreeWsRequest.getSort().contains(METRIC_PERIOD_SORT),"To sort by a metric, the '%s' parameter must contain '%s' or '%s', and a metric key must be provided in the '%s' parameter",Param.SORT,METRIC_SORT,METRIC_PERIOD_SORT,PARAM_METRIC_SORT);
  checkRequest(metricSortValue == null ^ componentTreeWsRequest.getMetricKeys().contains(metricSortValue),"To sort by the '%s' metric, it must be in the list of metric keys in the '%s' parameter",metricSortValue,PARAM_METRIC_KEYS);
  checkRequest(componentTreeWsRequest.getMetricPeriodSort() == null ^ componentTreeWsRequest.getSort().contains(METRIC_PERIOD_SORT),"To sort by a metric period, the '%s' parameter must contain '%s' and the '%s' must be provided.",Param.SORT,METRIC_PERIOD_SORT,PARAM_METRIC_PERIOD_SORT);
  checkRequest(ALL_METRIC_SORT_FILTER.equals(componentTreeWsRequest.getMetricSortFilter()) || metricSortValue != null,"To filter components based on the sort metric, the '%s' parameter must contain '%s' or '%s' and the '%s' parameter must be provided",Param.SORT,METRIC_SORT,METRIC_PERIOD_SORT,PARAM_METRIC_SORT);
  return componentTreeWsRequest;
}
