{
  ComponentDto project=ComponentTesting.newProjectDto();
  ComponentDto module=ComponentTesting.newModuleDto(project);
  ComponentDto subModule=ComponentTesting.newModuleDto(module);
  ComponentDto file1=ComponentTesting.newFileDto(project);
  ComponentDto file2=ComponentTesting.newFileDto(module);
  ComponentDto file3=ComponentTesting.newFileDto(subModule);
  indexIssues(IssueTesting.newDoc("ISSUE1",project),IssueTesting.newDoc("ISSUE2",file1),IssueTesting.newDoc("ISSUE3",module),IssueTesting.newDoc("ISSUE4",file2),IssueTesting.newDoc("ISSUE5",subModule),IssueTesting.newDoc("ISSUE6",file3));
  assertThat(index.search(IssueQuery.builder().fileUuids(newArrayList(file1.uuid(),file2.uuid(),file3.uuid())).build(),new QueryContext()).getHits()).hasSize(3);
  assertThat(index.search(IssueQuery.builder().fileUuids(newArrayList(file1.uuid())).build(),new QueryContext()).getHits()).hasSize(1);
  assertThat(index.search(IssueQuery.builder().moduleRootUuids(newArrayList(subModule.uuid())).build(),new QueryContext()).getHits()).hasSize(2);
  assertThat(index.search(IssueQuery.builder().moduleRootUuids(newArrayList(module.uuid())).build(),new QueryContext()).getHits()).hasSize(4);
  assertThat(index.search(IssueQuery.builder().projectUuids(newArrayList(project.uuid())).build(),new QueryContext()).getHits()).hasSize(6);
  assertThat(index.search(IssueQuery.builder().projectUuids(newArrayList("unknown")).build(),new QueryContext()).getHits()).isEmpty();
}
