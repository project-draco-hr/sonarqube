{
  ComponentDto project1=new ComponentDto().setId(10L).setKey("project1");
  ComponentDto project2=new ComponentDto().setId(11L).setKey("project2");
  tester.get(ComponentDao.class).insert(session,project1,project2);
  IssueDto issue1=createIssue().setRootComponent(project1);
  IssueDto issue2=createIssue().setRootComponent(project2);
  db.issueDao().insert(session,issue1,issue2);
  GroupDto groupDto=new GroupDto().setName("sonar-users");
  db.groupDao().insert(session,groupDto);
  tester.get(PermissionFacade.class).insertGroupPermission(project1.getId(),groupDto.getName(),UserRole.USER,session);
  groupDto=new GroupDto().setName("sonar-admins");
  db.groupDao().insert(session,groupDto);
  tester.get(PermissionFacade.class).insertGroupPermission(project2.getId(),groupDto.getName(),UserRole.USER,session);
  db.issueAuthorizationDao().synchronizeAfter(session,new Date(0));
  session.commit();
  session.clearCache();
  IssueQuery.Builder query=IssueQuery.builder();
  MockUserSession.set().setUserGroups("sonar-users");
  assertThat(index.search(query.build(),new QueryContext()).getHits()).hasSize(1);
  MockUserSession.set().setUserGroups("sonar-admins");
  assertThat(index.search(query.build(),new QueryContext()).getHits()).hasSize(1);
  MockUserSession.set().setUserGroups("sonar-users","sonar-admins");
  assertThat(index.search(query.build(),new QueryContext()).getHits()).hasSize(2);
  MockUserSession.set().setUserGroups("another group");
  assertThat(index.search(query.build(),new QueryContext()).getHits()).hasSize(0);
}
