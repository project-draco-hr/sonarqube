{
  Date today=new Date();
  Date yesterday=org.apache.commons.lang.time.DateUtils.addDays(today,-1);
  Date beforeYesterday=org.apache.commons.lang.time.DateUtils.addDays(yesterday,-1);
  tester.get(IssueDao.class).insert(session,IssueTesting.newDto(rule,file,project).setIssueCloseDate(today));
  tester.get(IssueDao.class).insert(session,IssueTesting.newDto(rule,file,project).setIssueCloseDate(beforeYesterday));
  tester.get(IssueDao.class).insert(session,IssueTesting.newDto(rule,file,project));
  session.commit();
  index();
  assertThat(index.countAll()).isEqualTo(3L);
  index.deleteClosedIssuesOfProjectBefore(project.uuid(),yesterday);
  List<Issue> issues=index.search(IssueQuery.builder().projectUuids(newArrayList(project.uuid())).build(),new QueryContext()).getHits();
  List<Date> dates=newArrayList();
  for (  Issue issue : issues) {
    dates.add(issue.closeDate());
  }
  assertThat(index.countAll()).isEqualTo(2);
  assertThat(dates).containsOnly(null,today);
}
