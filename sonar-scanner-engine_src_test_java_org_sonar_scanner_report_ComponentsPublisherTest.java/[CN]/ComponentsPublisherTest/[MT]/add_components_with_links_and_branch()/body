{
  ProjectDefinition rootDef=ProjectDefinition.create().setKey("foo");
  rootDef.properties().put(CoreProperties.PROJECT_VERSION_PROPERTY,"1.0");
  Project root=new Project("foo:my_branch").setName("Root project").setAnalysisDate(DateUtils.parseDate(("2012-12-12")));
  root.setId(1).setUuid("PROJECT_UUID");
  resourceCache.add(root,null).setInputComponent(new DefaultInputModule("foo"));
  rootDef.properties().put(CoreProperties.LINKS_HOME_PAGE,"http://home");
  rootDef.properties().put(CoreProperties.PROJECT_BRANCH_PROPERTY,"my_branch");
  Project module1=new Project("module1:my_branch").setName("Module1");
  module1.setParent(root);
  module1.setId(2).setUuid("MODULE_UUID");
  resourceCache.add(module1,root).setInputComponent(new DefaultInputModule("module1"));
  ProjectDefinition moduleDef=ProjectDefinition.create().setKey("module1");
  moduleDef.properties().put(CoreProperties.LINKS_CI,"http://ci");
  rootDef.addSubProject(moduleDef);
  Directory dir=Directory.create("src");
  dir.setEffectiveKey("module1:my_branch:my_branch:src");
  dir.setId(3).setUuid("DIR_UUID");
  resourceCache.add(dir,module1).setInputComponent(new DefaultInputDir("foo","src"));
  org.sonar.api.resources.File file=org.sonar.api.resources.File.create("src/Foo.java",FakeJava.INSTANCE,false);
  file.setEffectiveKey("module1:my_branch:my_branch:src/Foo.java");
  file.setId(4).setUuid("FILE_UUID");
  resourceCache.add(file,dir).setInputComponent(new DefaultInputFile("module1","src/Foo.java").setLines(2));
  ImmutableProjectReactor reactor=new ImmutableProjectReactor(rootDef);
  ComponentsPublisher publisher=new ComponentsPublisher(reactor,resourceCache);
  File outputDir=temp.newFolder();
  ScannerReportWriter writer=new ScannerReportWriter(outputDir);
  publisher.publish(writer);
  ScannerReportReader reader=new ScannerReportReader(outputDir);
  Component rootProtobuf=reader.readComponent(1);
  assertThat(rootProtobuf.getVersion()).isEqualTo("1.0");
  assertThat(rootProtobuf.getLinkCount()).isEqualTo(1);
  assertThat(rootProtobuf.getLink(0).getType()).isEqualTo(ComponentLinkType.HOME);
  assertThat(rootProtobuf.getLink(0).getHref()).isEqualTo("http://home");
  Component module1Protobuf=reader.readComponent(2);
  assertThat(module1Protobuf.getVersion()).isEqualTo("1.0");
  assertThat(module1Protobuf.getLinkCount()).isEqualTo(1);
  assertThat(module1Protobuf.getLink(0).getType()).isEqualTo(ComponentLinkType.CI);
  assertThat(module1Protobuf.getLink(0).getHref()).isEqualTo("http://ci");
}
