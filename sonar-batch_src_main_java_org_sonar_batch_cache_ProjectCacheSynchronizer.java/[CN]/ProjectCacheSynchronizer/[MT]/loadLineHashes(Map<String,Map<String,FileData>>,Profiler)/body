{
  ExecutorService executor=Executors.newFixedThreadPool(NUM_THREAD);
  int numFiles=0;
  for (  Map<String,FileData> fileDataByPath : fileDataByModuleAndPath.values()) {
    numFiles+=fileDataByPath.size();
  }
  profiler.startInfo("Load line file hashes (" + numFiles + " files)");
  for (  Entry<String,Map<String,FileData>> e1 : fileDataByModuleAndPath.entrySet()) {
    String moduleKey=e1.getKey();
    for (    Entry<String,FileData> e2 : e1.getValue().entrySet()) {
      String filePath=e2.getKey();
      executor.submit(new LineHashLoadWorker(getComponentKey(moduleKey,filePath)));
    }
  }
  executor.shutdown();
  try {
    boolean done=executor.awaitTermination(30,TimeUnit.MINUTES);
    if (!done) {
      executor.shutdownNow();
      throw new IllegalStateException("Timeout while fetching line hashes");
    }
  }
 catch (  InterruptedException e) {
    executor.shutdownNow();
    throw new IllegalStateException("Interrupted while fetching line hashes",e);
  }
  profiler.stopInfo("Load line file hashes (done)");
}
