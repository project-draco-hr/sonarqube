{
  RulesDefinition.Context context=new RulesDefinition.Context();
  when(i18n.getName("checkstyle","ConstantName")).thenReturn("Constant Name");
  when(i18n.getDescription("checkstyle","ConstantName")).thenReturn("Checks that constant names conform to the specified format");
  when(i18n.getParamDescription("checkstyle","ConstantName","format")).thenReturn("Regular expression");
  new DeprecatedRulesDefinition(i18n,new RuleRepository[]{new UseBundles()},debtModelRepository,importer).define(context);
  RulesDefinition.Repository checkstyle=context.repository("checkstyle");
  RulesDefinition.Rule rule=checkstyle.rule("ConstantName");
  assertThat(rule.key()).isEqualTo("ConstantName");
  assertThat(rule.name()).isEqualTo("Constant Name");
  assertThat(rule.htmlDescription()).isEqualTo("Checks that constant names conform to the specified format");
  RulesDefinition.Param param=rule.param("format");
  assertThat(param.key()).isEqualTo("format");
  assertThat(param.name()).isEqualTo("format");
  assertThat(param.description()).isEqualTo("Regular expression");
}
